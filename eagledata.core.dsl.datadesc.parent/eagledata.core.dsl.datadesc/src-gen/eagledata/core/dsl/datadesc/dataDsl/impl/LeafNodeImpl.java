/**
 * generated by Xtext 2.9.1
 */
package eagledata.core.dsl.datadesc.dataDsl.impl;

import eagledata.core.dsl.datadesc.dataDsl.BasicType;
import eagledata.core.dsl.datadesc.dataDsl.DataDslPackage;
import eagledata.core.dsl.datadesc.dataDsl.LeafNode;
import eagledata.core.dsl.datadesc.dataDsl.TypeSpecification;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Leaf Node</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link eagledata.core.dsl.datadesc.dataDsl.impl.LeafNodeImpl#getUniqueness <em>Uniqueness</em>}</li>
 *   <li>{@link eagledata.core.dsl.datadesc.dataDsl.impl.LeafNodeImpl#getType <em>Type</em>}</li>
 *   <li>{@link eagledata.core.dsl.datadesc.dataDsl.impl.LeafNodeImpl#getTypeCall <em>Type Call</em>}</li>
 *   <li>{@link eagledata.core.dsl.datadesc.dataDsl.impl.LeafNodeImpl#isKeyword <em>Keyword</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LeafNodeImpl extends NodeImpl implements LeafNode
{
  /**
   * The default value of the '{@link #getUniqueness() <em>Uniqueness</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUniqueness()
   * @generated
   * @ordered
   */
  protected static final String UNIQUENESS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUniqueness() <em>Uniqueness</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUniqueness()
   * @generated
   * @ordered
   */
  protected String uniqueness = UNIQUENESS_EDEFAULT;

  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final BasicType TYPE_EDEFAULT = BasicType.STRING;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected BasicType type = TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getTypeCall() <em>Type Call</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeCall()
   * @generated
   * @ordered
   */
  protected TypeSpecification typeCall;

  /**
   * The default value of the '{@link #isKeyword() <em>Keyword</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isKeyword()
   * @generated
   * @ordered
   */
  protected static final boolean KEYWORD_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isKeyword() <em>Keyword</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isKeyword()
   * @generated
   * @ordered
   */
  protected boolean keyword = KEYWORD_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LeafNodeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DataDslPackage.Literals.LEAF_NODE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getUniqueness()
  {
    return uniqueness;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUniqueness(String newUniqueness)
  {
    String oldUniqueness = uniqueness;
    uniqueness = newUniqueness;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataDslPackage.LEAF_NODE__UNIQUENESS, oldUniqueness, uniqueness));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BasicType getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(BasicType newType)
  {
    BasicType oldType = type;
    type = newType == null ? TYPE_EDEFAULT : newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataDslPackage.LEAF_NODE__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypeSpecification getTypeCall()
  {
    if (typeCall != null && typeCall.eIsProxy())
    {
      InternalEObject oldTypeCall = (InternalEObject)typeCall;
      typeCall = (TypeSpecification)eResolveProxy(oldTypeCall);
      if (typeCall != oldTypeCall)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DataDslPackage.LEAF_NODE__TYPE_CALL, oldTypeCall, typeCall));
      }
    }
    return typeCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypeSpecification basicGetTypeCall()
  {
    return typeCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTypeCall(TypeSpecification newTypeCall)
  {
    TypeSpecification oldTypeCall = typeCall;
    typeCall = newTypeCall;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataDslPackage.LEAF_NODE__TYPE_CALL, oldTypeCall, typeCall));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isKeyword()
  {
    return keyword;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setKeyword(boolean newKeyword)
  {
    boolean oldKeyword = keyword;
    keyword = newKeyword;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataDslPackage.LEAF_NODE__KEYWORD, oldKeyword, keyword));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DataDslPackage.LEAF_NODE__UNIQUENESS:
        return getUniqueness();
      case DataDslPackage.LEAF_NODE__TYPE:
        return getType();
      case DataDslPackage.LEAF_NODE__TYPE_CALL:
        if (resolve) return getTypeCall();
        return basicGetTypeCall();
      case DataDslPackage.LEAF_NODE__KEYWORD:
        return isKeyword();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DataDslPackage.LEAF_NODE__UNIQUENESS:
        setUniqueness((String)newValue);
        return;
      case DataDslPackage.LEAF_NODE__TYPE:
        setType((BasicType)newValue);
        return;
      case DataDslPackage.LEAF_NODE__TYPE_CALL:
        setTypeCall((TypeSpecification)newValue);
        return;
      case DataDslPackage.LEAF_NODE__KEYWORD:
        setKeyword((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DataDslPackage.LEAF_NODE__UNIQUENESS:
        setUniqueness(UNIQUENESS_EDEFAULT);
        return;
      case DataDslPackage.LEAF_NODE__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case DataDslPackage.LEAF_NODE__TYPE_CALL:
        setTypeCall((TypeSpecification)null);
        return;
      case DataDslPackage.LEAF_NODE__KEYWORD:
        setKeyword(KEYWORD_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DataDslPackage.LEAF_NODE__UNIQUENESS:
        return UNIQUENESS_EDEFAULT == null ? uniqueness != null : !UNIQUENESS_EDEFAULT.equals(uniqueness);
      case DataDslPackage.LEAF_NODE__TYPE:
        return type != TYPE_EDEFAULT;
      case DataDslPackage.LEAF_NODE__TYPE_CALL:
        return typeCall != null;
      case DataDslPackage.LEAF_NODE__KEYWORD:
        return keyword != KEYWORD_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (uniqueness: ");
    result.append(uniqueness);
    result.append(", type: ");
    result.append(type);
    result.append(", keyword: ");
    result.append(keyword);
    result.append(')');
    return result.toString();
  }

} //LeafNodeImpl
