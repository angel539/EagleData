/*
 * generated by Xtext 2.9.1
 */
grammar InternalDataDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package eagledata.core.dsl.datadesc.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package eagledata.core.dsl.datadesc.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import eagledata.core.dsl.datadesc.services.DataDslGrammarAccess;

}

@parser::members {

 	private DataDslGrammarAccess grammarAccess;

    public InternalDataDslParser(TokenStream input, DataDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DataModel";
   	}

   	@Override
   	protected DataDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDataModel
entryRuleDataModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataModelRule()); }
	iv_ruleDataModel=ruleDataModel
	{ $current=$iv_ruleDataModel.current; }
	EOF;

// Rule DataModel
ruleDataModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelAccess().getDescriptionsDataDescriptionParserRuleCall_0_0());
				}
				lv_descriptions_0_0=ruleDataDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelRule());
					}
					add(
						$current,
						"descriptions",
						lv_descriptions_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.DataDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getDataModelAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataModelAccess().getDescriptionsDataDescriptionParserRuleCall_1_1_0());
					}
					lv_descriptions_2_0=ruleDataDescription
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataModelRule());
						}
						add(
							$current,
							"descriptions",
							lv_descriptions_2_0,
							"eagledata.core.dsl.datadesc.DataDsl.DataDescription");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDataDescription
entryRuleDataDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataDescriptionRule()); }
	iv_ruleDataDescription=ruleDataDescription
	{ $current=$iv_ruleDataDescription.current; }
	EOF;

// Rule DataDescription
ruleDataDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDataDescriptionAccess().getTypeSpecificationParserRuleCall_0());
		}
		this_TypeSpecification_0=ruleTypeSpecification
		{
			$current = $this_TypeSpecification_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataDescriptionAccess().getDataSourceParserRuleCall_1());
		}
		this_DataSource_1=ruleDataSource
		{
			$current = $this_DataSource_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataDescriptionAccess().getDataFragmentParserRuleCall_2());
		}
		this_DataFragment_2=ruleDataFragment
		{
			$current = $this_DataFragment_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataSource
entryRuleDataSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataSourceRule()); }
	iv_ruleDataSource=ruleDataSource
	{ $current=$iv_ruleDataSource.current; }
	EOF;

// Rule DataSource
ruleDataSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='description'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataSourceAccess().getDescriptionKeyword_0());
		}
		(
			(
				lv_format_1_0=RULE_FORMAT
				{
					newLeafNode(lv_format_1_0, grammarAccess.getDataSourceAccess().getFormatFORMATTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataSourceRule());
					}
					setWithLastConsumed(
						$current,
						"format",
						lv_format_1_0,
						"eagledata.core.dsl.datadesc.DataDsl.FORMAT");
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDataSourceAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataSourceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getDataSourceAccess().getColonKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataSourceRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getDataSourceAccess().getFragmentsDataFragmentCrossReference_3_1_0());
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getDataSourceAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDataSourceRule());
							}
						}
						otherlv_6=RULE_ID
						{
							newLeafNode(otherlv_6, grammarAccess.getDataSourceAccess().getFragmentsDataFragmentCrossReference_3_2_1_0());
						}
					)
				)
			)*
		)?
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getDataSourceAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataSourceAccess().getNodesNodeParserRuleCall_5_0_0());
					}
					lv_nodes_8_0=ruleNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataSourceRule());
						}
						add(
							$current,
							"nodes",
							lv_nodes_8_0,
							"eagledata.core.dsl.datadesc.DataDsl.Node");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getDataSourceAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataSourceAccess().getNodesNodeParserRuleCall_5_1_1_0());
						}
						lv_nodes_10_0=ruleNode
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataSourceRule());
							}
							add(
								$current,
								"nodes",
								lv_nodes_10_0,
								"eagledata.core.dsl.datadesc.DataDsl.Node");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getDataSourceAccess().getRightCurlyBracketKeyword_6());
		}
		(
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getDataSourceAccess().getLeftCurlyBracketKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataSourceAccess().getOptionsOptionParserRuleCall_7_1_0());
					}
					lv_options_13_0=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataSourceRule());
						}
						add(
							$current,
							"options",
							lv_options_13_0,
							"eagledata.core.dsl.datadesc.DataDsl.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getDataSourceAccess().getCommaKeyword_7_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataSourceAccess().getOptionsOptionParserRuleCall_7_2_1_0());
						}
						lv_options_15_0=ruleOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataSourceRule());
							}
							add(
								$current,
								"options",
								lv_options_15_0,
								"eagledata.core.dsl.datadesc.DataDsl.Option");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getDataSourceAccess().getRightCurlyBracketKeyword_7_3());
			}
		)?
	)
;

// Entry rule entryRuleDataFragment
entryRuleDataFragment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataFragmentRule()); }
	iv_ruleDataFragment=ruleDataFragment
	{ $current=$iv_ruleDataFragment.current; }
	EOF;

// Rule DataFragment
ruleDataFragment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='fragment'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataFragmentAccess().getFragmentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataFragmentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataFragmentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getDataFragmentAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataFragmentRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getDataFragmentAccess().getFragmentsDataFragmentCrossReference_2_1_0());
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getDataFragmentAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDataFragmentRule());
							}
						}
						otherlv_5=RULE_ID
						{
							newLeafNode(otherlv_5, grammarAccess.getDataFragmentAccess().getFragmentsDataFragmentCrossReference_2_2_1_0());
						}
					)
				)
			)*
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getDataFragmentAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataFragmentAccess().getNodesNodeParserRuleCall_4_0_0());
					}
					lv_nodes_7_0=ruleNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataFragmentRule());
						}
						add(
							$current,
							"nodes",
							lv_nodes_7_0,
							"eagledata.core.dsl.datadesc.DataDsl.Node");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getDataFragmentAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataFragmentAccess().getNodesNodeParserRuleCall_4_1_1_0());
						}
						lv_nodes_9_0=ruleNode
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataFragmentRule());
							}
							add(
								$current,
								"nodes",
								lv_nodes_9_0,
								"eagledata.core.dsl.datadesc.DataDsl.Node");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getDataFragmentAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleTypeSpecification
entryRuleTypeSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSpecificationRule()); }
	iv_ruleTypeSpecification=ruleTypeSpecification
	{ $current=$iv_ruleTypeSpecification.current; }
	EOF;

// Rule TypeSpecification
ruleTypeSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeSpecificationAccess().getDataTypeParserRuleCall_0());
		}
		this_DataType_0=ruleDataType
		{
			$current = $this_DataType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeSpecificationAccess().getEnumerationParserRuleCall_1());
		}
		this_Enumeration_1=ruleEnumeration
		{
			$current = $this_Enumeration_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='datatype'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataTypeAccess().getDatatypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataTypeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataTypeAccess().getRefineBasicTypeEnumRuleCall_3_0());
				}
				lv_refine_3_0=ruleBasicType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataTypeRule());
					}
					set(
						$current,
						"refine",
						lv_refine_3_0,
						"eagledata.core.dsl.datadesc.DataDsl.BasicType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataTypeAccess().getOptionsOptionParserRuleCall_4_1_0());
					}
					lv_options_5_0=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataTypeRule());
						}
						add(
							$current,
							"options",
							lv_options_5_0,
							"eagledata.core.dsl.datadesc.DataDsl.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getDataTypeAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataTypeAccess().getOptionsOptionParserRuleCall_4_2_1_0());
						}
						lv_options_7_0=ruleOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataTypeRule());
							}
							add(
								$current,
								"options",
								lv_options_7_0,
								"eagledata.core.dsl.datadesc.DataDsl.Option");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_4_3());
			}
		)?
	)
;

// Entry rule entryRuleEnumeration
entryRuleEnumeration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationRule()); }
	iv_ruleEnumeration=ruleEnumeration
	{ $current=$iv_ruleEnumeration.current; }
	EOF;

// Rule Enumeration
ruleEnumeration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enumeration'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumerationAccess().getEnumerationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumerationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumerationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				lv_values_3_0=RULE_STRING
				{
					newLeafNode(lv_values_3_0, grammarAccess.getEnumerationAccess().getValuesSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationRule());
					}
					addWithLastConsumed(
						$current,
						"values",
						lv_values_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getEnumerationAccess().getCommaKeyword_4_0());
			}
			(
				(
					lv_values_5_0=RULE_STRING
					{
						newLeafNode(lv_values_5_0, grammarAccess.getEnumerationAccess().getValuesSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumerationRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getEnumerationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	iv_ruleNode=ruleNode
	{ $current=$iv_ruleNode.current; }
	EOF;

// Rule Node
ruleNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNodeAccess().getLeafNodeParserRuleCall_0());
		}
		this_LeafNode_0=ruleLeafNode
		{
			$current = $this_LeafNode_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNodeAccess().getCompositeNodeParserRuleCall_1());
		}
		this_CompositeNode_1=ruleCompositeNode
		{
			$current = $this_CompositeNode_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCompositeNode
entryRuleCompositeNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositeNodeRule()); }
	iv_ruleCompositeNode=ruleCompositeNode
	{ $current=$iv_ruleCompositeNode.current; }
	EOF;

// Rule CompositeNode
ruleCompositeNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_environment_0_0='>'
				{
					newLeafNode(lv_environment_0_0, grammarAccess.getCompositeNodeAccess().getEnvironmentGreaterThanSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompositeNodeRule());
					}
					setWithLastConsumed($current, "environment", true, ">");
				}
			)
		)?
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCompositeNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompositeNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_representedAs_2_0=RULE_STRING
				{
					newLeafNode(lv_representedAs_2_0, grammarAccess.getCompositeNodeAccess().getRepresentedAsSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompositeNodeRule());
					}
					setWithLastConsumed(
						$current,
						"representedAs",
						lv_representedAs_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getCompositeNodeAccess().getColonKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCompositeNodeRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getCompositeNodeAccess().getExtendsCompositeNodeCrossReference_3_1_0());
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getCompositeNodeAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCompositeNodeRule());
							}
						}
						otherlv_6=RULE_ID
						{
							newLeafNode(otherlv_6, grammarAccess.getCompositeNodeAccess().getExtendsCompositeNodeCrossReference_3_2_1_0());
						}
					)
				)
			)*
		)?
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getCompositeNodeAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositeNodeAccess().getSubnodesNodeParserRuleCall_5_0_0());
					}
					lv_subnodes_8_0=ruleNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositeNodeRule());
						}
						add(
							$current,
							"subnodes",
							lv_subnodes_8_0,
							"eagledata.core.dsl.datadesc.DataDsl.Node");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getCompositeNodeAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCompositeNodeAccess().getSubnodesNodeParserRuleCall_5_1_1_0());
						}
						lv_subnodes_10_0=ruleNode
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompositeNodeRule());
							}
							add(
								$current,
								"subnodes",
								lv_subnodes_10_0,
								"eagledata.core.dsl.datadesc.DataDsl.Node");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getCompositeNodeAccess().getRightCurlyBracketKeyword_6());
		}
		(
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getCompositeNodeAccess().getLeftCurlyBracketKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositeNodeAccess().getOptionsOptionParserRuleCall_7_1_0());
					}
					lv_options_13_0=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositeNodeRule());
						}
						add(
							$current,
							"options",
							lv_options_13_0,
							"eagledata.core.dsl.datadesc.DataDsl.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getCompositeNodeAccess().getCommaKeyword_7_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCompositeNodeAccess().getOptionsOptionParserRuleCall_7_2_1_0());
						}
						lv_options_15_0=ruleOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompositeNodeRule());
							}
							add(
								$current,
								"options",
								lv_options_15_0,
								"eagledata.core.dsl.datadesc.DataDsl.Option");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getCompositeNodeAccess().getRightCurlyBracketKeyword_7_3());
			}
		)?
	)
;

// Entry rule entryRuleLeafNode
entryRuleLeafNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLeafNodeRule()); }
	iv_ruleLeafNode=ruleLeafNode
	{ $current=$iv_ruleLeafNode.current; }
	EOF;

// Rule LeafNode
ruleLeafNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_uniqueness_0_0=RULE_UNIQUENESS
				{
					newLeafNode(lv_uniqueness_0_0, grammarAccess.getLeafNodeAccess().getUniquenessUNIQUENESSTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLeafNodeRule());
					}
					setWithLastConsumed(
						$current,
						"uniqueness",
						lv_uniqueness_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.UNIQUENESS");
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLeafNodeAccess().getTypeBasicTypeEnumRuleCall_1_0_0());
					}
					lv_type_1_0=ruleBasicType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLeafNodeRule());
						}
						set(
							$current,
							"type",
							lv_type_1_0,
							"eagledata.core.dsl.datadesc.DataDsl.BasicType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLeafNodeRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getLeafNodeAccess().getTypeCallTypeSpecificationCrossReference_1_1_0());
					}
				)
			)
		)
		(
			(
				lv_keyword_3_0='#'
				{
					newLeafNode(lv_keyword_3_0, grammarAccess.getLeafNodeAccess().getKeywordNumberSignKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLeafNodeRule());
					}
					setWithLastConsumed($current, "keyword", true, "#");
				}
			)
		)?
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getLeafNodeAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLeafNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_representedAs_5_0=RULE_STRING
				{
					newLeafNode(lv_representedAs_5_0, grammarAccess.getLeafNodeAccess().getRepresentedAsSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLeafNodeRule());
					}
					setWithLastConsumed(
						$current,
						"representedAs",
						lv_representedAs_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getLeafNodeAccess().getLeftCurlyBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLeafNodeAccess().getOptionsOptionParserRuleCall_5_1_0());
					}
					lv_options_7_0=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLeafNodeRule());
						}
						add(
							$current,
							"options",
							lv_options_7_0,
							"eagledata.core.dsl.datadesc.DataDsl.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getLeafNodeAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLeafNodeAccess().getOptionsOptionParserRuleCall_5_2_1_0());
						}
						lv_options_9_0=ruleOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLeafNodeRule());
							}
							add(
								$current,
								"options",
								lv_options_9_0,
								"eagledata.core.dsl.datadesc.DataDsl.Option");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getLeafNodeAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
	)
;

// Entry rule entryRuleOption
entryRuleOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionRule()); }
	iv_ruleOption=ruleOption
	{ $current=$iv_ruleOption.current; }
	EOF;

// Rule Option
ruleOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOptionAccess().getKeyOptionKeyEnumRuleCall_0_0_0());
					}
					lv_key_0_0=ruleOptionKey
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOptionRule());
						}
						set(
							$current,
							"key",
							lv_key_0_0,
							"eagledata.core.dsl.datadesc.DataDsl.OptionKey");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getOptionAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					lv_value_2_0=RULE_STRING
					{
						newLeafNode(lv_value_2_0, grammarAccess.getOptionAccess().getValueSTRINGTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOptionRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_2_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		this_INT_3=RULE_INT
		{
			newLeafNode(this_INT_3, grammarAccess.getOptionAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Rule BasicType
ruleBasicType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='string'
			{
				$current = grammarAccess.getBasicTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBasicTypeAccess().getStringEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='int'
			{
				$current = grammarAccess.getBasicTypeAccess().getIntEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBasicTypeAccess().getIntEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='real'
			{
				$current = grammarAccess.getBasicTypeAccess().getRealEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBasicTypeAccess().getRealEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='date'
			{
				$current = grammarAccess.getBasicTypeAccess().getDateEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getBasicTypeAccess().getDateEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='time'
			{
				$current = grammarAccess.getBasicTypeAccess().getTimeEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getBasicTypeAccess().getTimeEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='year'
			{
				$current = grammarAccess.getBasicTypeAccess().getYearEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getBasicTypeAccess().getYearEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='month'
			{
				$current = grammarAccess.getBasicTypeAccess().getMonthEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getBasicTypeAccess().getMonthEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='day'
			{
				$current = grammarAccess.getBasicTypeAccess().getDayEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getBasicTypeAccess().getDayEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='boolean'
			{
				$current = grammarAccess.getBasicTypeAccess().getBooleanEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getBasicTypeAccess().getBooleanEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='lat'
			{
				$current = grammarAccess.getBasicTypeAccess().getLatEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getBasicTypeAccess().getLatEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='long'
			{
				$current = grammarAccess.getBasicTypeAccess().getLongEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getBasicTypeAccess().getLongEnumLiteralDeclaration_10());
			}
		)
	)
;

// Rule OptionKey
ruleOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='minLength'
			{
				$current = grammarAccess.getOptionKeyAccess().getMinLengthEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOptionKeyAccess().getMinLengthEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='maxLength'
			{
				$current = grammarAccess.getOptionKeyAccess().getMaxLengthEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOptionKeyAccess().getMaxLengthEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='casesensitive'
			{
				$current = grammarAccess.getOptionKeyAccess().getCasesensitiveEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOptionKeyAccess().getCasesensitiveEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='min'
			{
				$current = grammarAccess.getOptionKeyAccess().getMinEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOptionKeyAccess().getMinEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='max'
			{
				$current = grammarAccess.getOptionKeyAccess().getMaxEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getOptionKeyAccess().getMaxEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='null'
			{
				$current = grammarAccess.getOptionKeyAccess().getNullEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getOptionKeyAccess().getNullEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='separator'
			{
				$current = grammarAccess.getOptionKeyAccess().getSeparatorEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getOptionKeyAccess().getSeparatorEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='default'
			{
				$current = grammarAccess.getOptionKeyAccess().getDefaultEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getOptionKeyAccess().getDefaultEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='regex'
			{
				$current = grammarAccess.getOptionKeyAccess().getRegexEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getOptionKeyAccess().getRegexEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='flags'
			{
				$current = grammarAccess.getOptionKeyAccess().getFlagsEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getOptionKeyAccess().getFlagsEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='decimalchar'
			{
				$current = grammarAccess.getOptionKeyAccess().getDecimalcharEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getOptionKeyAccess().getDecimalcharEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='pattern'
			{
				$current = grammarAccess.getOptionKeyAccess().getPatternEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getOptionKeyAccess().getPatternEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='format'
			{
				$current = grammarAccess.getOptionKeyAccess().getFormatEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getOptionKeyAccess().getFormatEnumLiteralDeclaration_12());
			}
		)
	)
;

RULE_DELETATION_MARK : 'REMOVE';

RULE_MODIFICATION_MARK : ('RENAME'|'RETYPE');

RULE_FORMAT : ('CSV'|'JSON'|'XML');

RULE_UNIQUENESS : ('KEY'|'UNIQUE');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
