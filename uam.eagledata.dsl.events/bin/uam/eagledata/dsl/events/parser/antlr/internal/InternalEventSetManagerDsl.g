/*
 * generated by Xtext 2.9.2
 */
grammar InternalEventSetManagerDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package uam.eagledata.dsl.events.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package uam.eagledata.dsl.events.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import uam.eagledata.dsl.events.services.EventSetManagerDslGrammarAccess;

}

@parser::members {

 	private EventSetManagerDslGrammarAccess grammarAccess;

    public InternalEventSetManagerDslParser(TokenStream input, EventSetManagerDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "EventSetManager";
   	}

   	@Override
   	protected EventSetManagerDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleEventSetManager
entryRuleEventSetManager returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventSetManagerRule()); }
	iv_ruleEventSetManager=ruleEventSetManager
	{ $current=$iv_ruleEventSetManager.current; }
	EOF;

// Rule EventSetManager
ruleEventSetManager returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEventSetManagerAccess().getGeosGeographicalElementParserRuleCall_0_0());
				}
				lv_geos_0_0=ruleGeographicalElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventSetManagerRule());
					}
					add(
						$current,
						"geos",
						lv_geos_0_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.GeographicalElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEventSetManagerAccess().getGeosGeographicalElementParserRuleCall_1_0());
				}
				lv_geos_1_0=ruleGeographicalElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventSetManagerRule());
					}
					add(
						$current,
						"geos",
						lv_geos_1_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.GeographicalElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEventSetManagerAccess().getEventsEventParserRuleCall_2_0());
				}
				lv_events_2_0=ruleEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventSetManagerRule());
					}
					add(
						$current,
						"events",
						lv_events_2_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.Event");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEventSetManagerAccess().getEventsEventParserRuleCall_3_0());
				}
				lv_events_3_0=ruleEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventSetManagerRule());
					}
					add(
						$current,
						"events",
						lv_events_3_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.Event");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleGeographicalElement
entryRuleGeographicalElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeographicalElementRule()); }
	iv_ruleGeographicalElement=ruleGeographicalElement
	{ $current=$iv_ruleGeographicalElement.current; }
	EOF;

// Rule GeographicalElement
ruleGeographicalElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getGeographicalElementAccess().getPointParserRuleCall_0());
		}
		this_Point_0=rulePoint
		{
			$current = $this_Point_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGeographicalElementAccess().getRegionParserRuleCall_1());
		}
		this_Region_1=ruleRegion
		{
			$current = $this_Region_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePoint
entryRulePoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointRule()); }
	iv_rulePoint=rulePoint
	{ $current=$iv_rulePoint.current; }
	EOF;

// Rule Point
rulePoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPointAccess().getPointAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPointAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPointRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPointAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				lv_lat_3_0=RULE_DOUBLE
				{
					newLeafNode(lv_lat_3_0, grammarAccess.getPointAccess().getLatDOUBLETerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPointRule());
					}
					setWithLastConsumed(
						$current,
						"lat",
						lv_lat_3_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.DOUBLE");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getPointAccess().getCommaKeyword_4());
		}
		(
			(
				lv_long_5_0=RULE_DOUBLE
				{
					newLeafNode(lv_long_5_0, grammarAccess.getPointAccess().getLongDOUBLETerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPointRule());
					}
					setWithLastConsumed(
						$current,
						"long",
						lv_long_5_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.DOUBLE");
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getPointAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleRegion
entryRuleRegion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegionRule()); }
	iv_ruleRegion=ruleRegion
	{ $current=$iv_ruleRegion.current; }
	EOF;

// Rule Region
ruleRegion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRegionAccess().getRegionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRegionAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getRegionAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRegionAccess().getPointsPointParserRuleCall_3_0());
				}
				lv_points_3_0=rulePoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegionRule());
					}
					add(
						$current,
						"points",
						lv_points_3_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.Point");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getRegionAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRegionAccess().getPointsPointParserRuleCall_4_1_0());
					}
					lv_points_5_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegionRule());
						}
						add(
							$current,
							"points",
							lv_points_5_0,
							"uam.eagledata.dsl.events.EventSetManagerDsl.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getRegionAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	iv_ruleEvent=ruleEvent
	{ $current=$iv_ruleEvent.current; }
	EOF;

// Rule Event
ruleEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEventAccess().getEventAction_0(),
					$current);
			}
		)
		(
			otherlv_1='connection'
			{
				newLeafNode(otherlv_1, grammarAccess.getEventAccess().getConnectionKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventAccess().getDataconnectionEStringParserRuleCall_1_1_0());
					}
					lv_dataconnection_2_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventRule());
						}
						add(
							$current,
							"dataconnection",
							lv_dataconnection_2_0,
							"uam.eagledata.dsl.events.EventSetManagerDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3='and'
				{
					newLeafNode(otherlv_3, grammarAccess.getEventAccess().getAndKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEventAccess().getDataconnectionEStringParserRuleCall_1_2_1_0());
						}
						lv_dataconnection_4_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEventRule());
							}
							add(
								$current,
								"dataconnection",
								lv_dataconnection_4_0,
								"uam.eagledata.dsl.events.EventSetManagerDsl.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='pattern'
		{
			newLeafNode(otherlv_5, grammarAccess.getEventAccess().getPatternKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEventAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_name_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventRule());
					}
					set(
						$current,
						"name",
						lv_name_6_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7='in'
			{
				newLeafNode(otherlv_7, grammarAccess.getEventAccess().getInKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEventRule());
						}
					}
					otherlv_8=RULE_ID
					{
						newLeafNode(otherlv_8, grammarAccess.getEventAccess().getGeoGeographicalElementCrossReference_4_1_0());
					}
				)
			)
		)?
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEventAccess().getConceptsConceptParserRuleCall_6_0());
				}
				lv_concepts_10_0=ruleConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventRule());
					}
					add(
						$current,
						"concepts",
						lv_concepts_10_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.Concept");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEventAccess().getConceptsConceptParserRuleCall_7_0());
				}
				lv_concepts_11_0=ruleConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventRule());
					}
					add(
						$current,
						"concepts",
						lv_concepts_11_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.Concept");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getEventAccess().getRightCurlyBracketKeyword_8());
		}
		(
			otherlv_13='if'
			{
				newLeafNode(otherlv_13, grammarAccess.getEventAccess().getIfKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventAccess().getWhenConditionParserRuleCall_9_1_0());
					}
					lv_when_14_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventRule());
						}
						set(
							$current,
							"when",
							lv_when_14_0,
							"uam.eagledata.dsl.events.EventSetManagerDsl.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_15='then'
			{
				newLeafNode(otherlv_15, grammarAccess.getEventAccess().getThenKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventAccess().getTriggersActionParserRuleCall_10_1_0());
					}
					lv_triggers_16_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventRule());
						}
						add(
							$current,
							"triggers",
							lv_triggers_16_0,
							"uam.eagledata.dsl.events.EventSetManagerDsl.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEventAccess().getTriggersActionParserRuleCall_10_2_0());
					}
					lv_triggers_17_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventRule());
						}
						add(
							$current,
							"triggers",
							lv_triggers_17_0,
							"uam.eagledata.dsl.events.EventSetManagerDsl.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionAccess().getBinaryExpressionParserRuleCall_0());
		}
		this_BinaryExpression_0=ruleBinaryExpression
		{
			$current = $this_BinaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConditionAccess().getBooleanExpressionParserRuleCall_1());
		}
		this_BooleanExpression_1=ruleBooleanExpression
		{
			$current = $this_BooleanExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBinaryExpression
entryRuleBinaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryExpressionRule()); }
	iv_ruleBinaryExpression=ruleBinaryExpression
	{ $current=$iv_ruleBinaryExpression.current; }
	EOF;

// Rule BinaryExpression
ruleBinaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBinaryExpressionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getBinaryExpressionAccess().getLeftConceptCrossReference_0_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getBinaryExpressionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBinaryExpressionAccess().getRightLiteralParserRuleCall_2_0());
				}
				lv_right_2_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
					}
					set(
						$current,
						"right",
						lv_right_2_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLiteralAccess().getValueEStringParserRuleCall_0());
			}
			lv_value_0_0=ruleEString
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getLiteralRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"uam.eagledata.dsl.events.EventSetManagerDsl.EString");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExpressionRule()); }
	iv_ruleBooleanExpression=ruleBooleanExpression
	{ $current=$iv_ruleBooleanExpression.current; }
	EOF;

// Rule BooleanExpression
ruleBooleanExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_expression_0_0=RULE_BOOLEAN
			{
				newLeafNode(lv_expression_0_0, grammarAccess.getBooleanExpressionAccess().getExpressionBOOLEANTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBooleanExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"expression",
					lv_expression_0_0,
					"uam.eagledata.dsl.events.EventSetManagerDsl.BOOLEAN");
			}
		)
	)
;

// Entry rule entryRuleConcept
entryRuleConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConceptRule()); }
	iv_ruleConcept=ruleConcept
	{ $current=$iv_ruleConcept.current; }
	EOF;

// Rule Concept
ruleConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConceptAccess().getKeyConceptParserRuleCall_0());
		}
		this_KeyConcept_0=ruleKeyConcept
		{
			$current = $this_KeyConcept_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConceptAccess().getRegexConceptParserRuleCall_1());
		}
		this_RegexConcept_1=ruleRegexConcept
		{
			$current = $this_RegexConcept_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleKeyConcept
entryRuleKeyConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyConceptRule()); }
	iv_ruleKeyConcept=ruleKeyConcept
	{ $current=$iv_ruleKeyConcept.current; }
	EOF;

// Rule KeyConcept
ruleKeyConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getKeyConceptAccess().getKeyConceptAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyConceptAccess().getTypeTypeEnumRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyConceptRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyConceptAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyConceptRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRegexConcept
entryRuleRegexConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegexConceptRule()); }
	iv_ruleRegexConcept=ruleRegexConcept
	{ $current=$iv_ruleRegexConcept.current; }
	EOF;

// Rule RegexConcept
ruleRegexConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRegexConceptAccess().getRegexConceptAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRegexConceptAccess().getTypeTypeEnumRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegexConceptRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRegexConceptAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegexConceptRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getRegexConceptAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRegexConceptAccess().getRegexEStringParserRuleCall_4_0());
				}
				lv_regex_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegexConceptRule());
					}
					set(
						$current,
						"regex",
						lv_regex_4_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActionAccess().getActionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getCallsEStringParserRuleCall_1_0());
				}
				lv_calls_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					set(
						$current,
						"calls",
						lv_calls_1_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getActionAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getParamsActionParamParserRuleCall_2_1_0());
					}
					lv_params_3_0=ruleActionParam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						add(
							$current,
							"params",
							lv_params_3_0,
							"uam.eagledata.dsl.events.EventSetManagerDsl.ActionParam");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getActionAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActionAccess().getParamsActionParamParserRuleCall_2_2_1_0());
						}
						lv_params_5_0=ruleActionParam
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionRule());
							}
							add(
								$current,
								"params",
								lv_params_5_0,
								"uam.eagledata.dsl.events.EventSetManagerDsl.ActionParam");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getActionAccess().getRightParenthesisKeyword_2_3());
			}
		)?
	)
;

// Entry rule entryRuleActionParam
entryRuleActionParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionParamRule()); }
	iv_ruleActionParam=ruleActionParam
	{ $current=$iv_ruleActionParam.current; }
	EOF;

// Rule ActionParam
ruleActionParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActionParamAccess().getConceptParamParserRuleCall_0());
		}
		this_ConceptParam_0=ruleConceptParam
		{
			$current = $this_ConceptParam_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionParamAccess().getStringParamParserRuleCall_1());
		}
		this_StringParam_1=ruleStringParam
		{
			$current = $this_StringParam_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConceptParam
entryRuleConceptParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConceptParamRule()); }
	iv_ruleConceptParam=ruleConceptParam
	{ $current=$iv_ruleConceptParam.current; }
	EOF;

// Rule ConceptParam
ruleConceptParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConceptParamAccess().getConceptParamAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConceptParamAccess().getKeyEStringParserRuleCall_1_0());
				}
				lv_key_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConceptParamRule());
					}
					set(
						$current,
						"key",
						lv_key_1_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='<='
		{
			newLeafNode(otherlv_2, grammarAccess.getConceptParamAccess().getLessThanSignEqualsSignKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConceptParamRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getConceptParamAccess().getValueConceptCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleStringParam
entryRuleStringParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringParamRule()); }
	iv_ruleStringParam=ruleStringParam
	{ $current=$iv_ruleStringParam.current; }
	EOF;

// Rule StringParam
ruleStringParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStringParamAccess().getStringParamAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStringParamAccess().getKeyEStringParserRuleCall_1_0());
				}
				lv_key_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringParamRule());
					}
					set(
						$current,
						"key",
						lv_key_1_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getStringParamAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStringParamAccess().getValueEStringParserRuleCall_3_0());
				}
				lv_value_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringParamRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"uam.eagledata.dsl.events.EventSetManagerDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Rule Type
ruleType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='String'
			{
				$current = grammarAccess.getTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeAccess().getStringEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Int'
			{
				$current = grammarAccess.getTypeAccess().getIntEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeAccess().getIntEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Boolean'
			{
				$current = grammarAccess.getTypeAccess().getBooleanEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTypeAccess().getBooleanEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Float'
			{
				$current = grammarAccess.getTypeAccess().getFloatEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTypeAccess().getFloatEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Double'
			{
				$current = grammarAccess.getTypeAccess().getDoubleEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTypeAccess().getDoubleEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_DOUBLE : '-'? RULE_INT '.' RULE_INT;

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
