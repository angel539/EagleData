module uam.eagledata.dsl.semanticnodes.GenerateSemanticNodesDsl

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.generator.*
import org.eclipse.xtext.ui.generator.*

var rootPath = ".."

Workflow {
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "uam.eagledata.dsl.semanticnodes"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "uam.eagledata.dsl.semanticnodes.SemanticNodesDsl"
			fileExtensions = "descriptions"
			referencedResource = "platform:/resource/uam.extremo.core/model/Extremo.genmodel"
			
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}

			fragment = org.eclipse.xtext.generator.adapter.FragmentAdapter {
				fragment = org.eclipse.xtext.generator.ecore2xtext.FormatterFragment {}
			}
			
			fragment = scoping.ImportNamespacesScopingFragment2 auto-inject {}	
			fragment = exporting.QualifiedNamesFragment2 auto-inject {}
			fragment = builder.BuilderIntegrationFragment2 auto-inject{}
			// outline API
    		fragment = ui.outline.OutlineTreeProviderFragment2 auto-inject {}
    		fragment = ui.outline.QuickOutlineFragment2 auto-inject {}
    		// quickfix API
    		fragment = ui.quickfix.QuickfixProviderFragment2 auto-inject {}
    		// content assist API
    		fragment = ui.contentAssist.ContentAssistFragment2 auto-inject {}

			serializer = {
				generateStub = false
			}
			validator = {
				composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
		}
	}
}
