/*
 * generated by Xtext 2.9.2
 */
package uam.eagledata.dsl.semanticnodes.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SemanticNodesDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class RepositoryManagerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uam.eagledata.dsl.semanticnodes.SemanticNodesDsl.RepositoryManager");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRepositoryManagerAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cRepositoriesAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cRepositoriesRepositoryParserRuleCall_1_0_0 = (RuleCall)cRepositoriesAssignment_1_0.eContents().get(0);
		private final Assignment cRepositoriesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRepositoriesRepositoryParserRuleCall_1_1_0 = (RuleCall)cRepositoriesAssignment_1_1.eContents().get(0);
		
		//RepositoryManager semantics::RepositoryManager:
		//	{semantics::RepositoryManager} (repositories+=Repository repositories+=Repository*)?
		@Override public ParserRule getRule() { return rule; }
		
		//{semantics::RepositoryManager} (repositories+=Repository repositories+=Repository*)?
		public Group getGroup() { return cGroup; }
		
		//{semantics::RepositoryManager}
		public Action getRepositoryManagerAction_0() { return cRepositoryManagerAction_0; }
		
		//(repositories+=Repository repositories+=Repository*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//repositories+=Repository
		public Assignment getRepositoriesAssignment_1_0() { return cRepositoriesAssignment_1_0; }
		
		//Repository
		public RuleCall getRepositoriesRepositoryParserRuleCall_1_0_0() { return cRepositoriesRepositoryParserRuleCall_1_0_0; }
		
		//repositories+=Repository*
		public Assignment getRepositoriesAssignment_1_1() { return cRepositoriesAssignment_1_1; }
		
		//Repository
		public RuleCall getRepositoriesRepositoryParserRuleCall_1_1_0() { return cRepositoriesRepositoryParserRuleCall_1_1_0; }
	}
	public class RepositoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uam.eagledata.dsl.semanticnodes.SemanticNodesDsl.Repository");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRepositoryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRepositoryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cResourcesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cResourcesResourceParserRuleCall_4_0 = (RuleCall)cResourcesAssignment_4.eContents().get(0);
		private final Assignment cResourcesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cResourcesResourceParserRuleCall_5_0 = (RuleCall)cResourcesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Repository semantics::Repository:
		//	{semantics::Repository}
		//	'repository' name=EString
		//	'{' resources+=Resource resources+=Resource* '}'
		@Override public ParserRule getRule() { return rule; }
		
		//{semantics::Repository} 'repository' name=EString '{' resources+=Resource resources+=Resource* '}'
		public Group getGroup() { return cGroup; }
		
		//{semantics::Repository}
		public Action getRepositoryAction_0() { return cRepositoryAction_0; }
		
		//'repository'
		public Keyword getRepositoryKeyword_1() { return cRepositoryKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//resources+=Resource
		public Assignment getResourcesAssignment_4() { return cResourcesAssignment_4; }
		
		//Resource
		public RuleCall getResourcesResourceParserRuleCall_4_0() { return cResourcesResourceParserRuleCall_4_0; }
		
		//resources+=Resource*
		public Assignment getResourcesAssignment_5() { return cResourcesAssignment_5; }
		
		//Resource
		public RuleCall getResourcesResourceParserRuleCall_5_0() { return cResourcesResourceParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uam.eagledata.dsl.semanticnodes.SemanticNodesDsl.Resource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cResourceAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cAnnotationsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_1_0_0 = (RuleCall)cAnnotationsAssignment_1_0.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_1_1_0 = (RuleCall)cAnnotationsAssignment_1_1.eContents().get(0);
		private final Assignment cAssistantAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAssistantEStringParserRuleCall_2_0 = (RuleCall)cAssistantAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cResourceElementsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cResourceElementsResourceElementParserRuleCall_5_0_0 = (RuleCall)cResourceElementsAssignment_5_0.eContents().get(0);
		private final Assignment cResourceElementsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cResourceElementsResourceElementParserRuleCall_5_1_0 = (RuleCall)cResourceElementsAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cMetadataKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cMetadataAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cMetadataMetaDataParserRuleCall_7_2_0 = (RuleCall)cMetadataAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cMetadataAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cMetadataMetaDataParserRuleCall_7_3_1_0 = (RuleCall)cMetadataAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		
		//Resource semantics::Resource:
		//	{semantics::Resource} (annotations+=Annotation annotations+=Annotation*)?
		//	assistant=EString name=EString '{' (resourceElements+=ResourceElement resourceElements+=ResourceElement*)?
		//	'}' ('metadata' '{' metadata+=MetaData ("," metadata+=MetaData)* '}')?
		@Override public ParserRule getRule() { return rule; }
		
		//{semantics::Resource} (annotations+=Annotation annotations+=Annotation*)? assistant=EString name=EString '{'
		//(resourceElements+=ResourceElement resourceElements+=ResourceElement*)? '}' ('metadata' '{' metadata+=MetaData (","
		//metadata+=MetaData)* '}')?
		public Group getGroup() { return cGroup; }
		
		//{semantics::Resource}
		public Action getResourceAction_0() { return cResourceAction_0; }
		
		//(annotations+=Annotation annotations+=Annotation*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//annotations+=Annotation
		public Assignment getAnnotationsAssignment_1_0() { return cAnnotationsAssignment_1_0; }
		
		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_1_0_0() { return cAnnotationsAnnotationParserRuleCall_1_0_0; }
		
		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_1_1() { return cAnnotationsAssignment_1_1; }
		
		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_1_1_0() { return cAnnotationsAnnotationParserRuleCall_1_1_0; }
		
		//assistant=EString
		public Assignment getAssistantAssignment_2() { return cAssistantAssignment_2; }
		
		//EString
		public RuleCall getAssistantEStringParserRuleCall_2_0() { return cAssistantEStringParserRuleCall_2_0; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//(resourceElements+=ResourceElement resourceElements+=ResourceElement*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//resourceElements+=ResourceElement
		public Assignment getResourceElementsAssignment_5_0() { return cResourceElementsAssignment_5_0; }
		
		//ResourceElement
		public RuleCall getResourceElementsResourceElementParserRuleCall_5_0_0() { return cResourceElementsResourceElementParserRuleCall_5_0_0; }
		
		//resourceElements+=ResourceElement*
		public Assignment getResourceElementsAssignment_5_1() { return cResourceElementsAssignment_5_1; }
		
		//ResourceElement
		public RuleCall getResourceElementsResourceElementParserRuleCall_5_1_0() { return cResourceElementsResourceElementParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//('metadata' '{' metadata+=MetaData ("," metadata+=MetaData)* '}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'metadata'
		public Keyword getMetadataKeyword_7_0() { return cMetadataKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//metadata+=MetaData
		public Assignment getMetadataAssignment_7_2() { return cMetadataAssignment_7_2; }
		
		//MetaData
		public RuleCall getMetadataMetaDataParserRuleCall_7_2_0() { return cMetadataMetaDataParserRuleCall_7_2_0; }
		
		//("," metadata+=MetaData)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//metadata+=MetaData
		public Assignment getMetadataAssignment_7_3_1() { return cMetadataAssignment_7_3_1; }
		
		//MetaData
		public RuleCall getMetadataMetaDataParserRuleCall_7_3_1_0() { return cMetadataMetaDataParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
	}
	public class ResourceElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uam.eagledata.dsl.semanticnodes.SemanticNodesDsl.ResourceElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cResourceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSemanticNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ResourceElement semantics::ResourceElement:
		//	Resource | SemanticNode
		@Override public ParserRule getRule() { return rule; }
		
		//Resource | SemanticNode
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Resource
		public RuleCall getResourceParserRuleCall_0() { return cResourceParserRuleCall_0; }
		
		//SemanticNode
		public RuleCall getSemanticNodeParserRuleCall_1() { return cSemanticNodeParserRuleCall_1; }
	}
	public class SemanticNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uam.eagledata.dsl.semanticnodes.SemanticNodesDsl.SemanticNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSemanticNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cAnnotationsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_1_0_0 = (RuleCall)cAnnotationsAssignment_1_0.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_1_1_0 = (RuleCall)cAnnotationsAssignment_1_1.eContents().get(0);
		private final Assignment cAbstractAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cAbstractAbstractKeyword_2_0 = (Keyword)cAbstractAssignment_2.eContents().get(0);
		private final Keyword cNodeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameEStringParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cPropertiesAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cPropertiesPropertyParserRuleCall_6_0_0 = (RuleCall)cPropertiesAssignment_6_0.eContents().get(0);
		private final Assignment cPropertiesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cPropertiesPropertyParserRuleCall_6_1_0 = (RuleCall)cPropertiesAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cMetadataAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cMetadataMetaDataParserRuleCall_8_1_0 = (RuleCall)cMetadataAssignment_8_1.eContents().get(0);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cCommaKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cMetadataAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final RuleCall cMetadataMetaDataParserRuleCall_8_2_1_0 = (RuleCall)cMetadataAssignment_8_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		
		//SemanticNode semantics::SemanticNode:
		//	{semantics::SemanticNode} (annotations+=Annotation annotations+=Annotation*)?
		//	abstract?='abstract'? 'node' name=EString
		//	'{' (properties+=Property properties+=Property*)?
		//	'}' ('{' metadata+=MetaData ("," metadata+=MetaData)* '}')?
		@Override public ParserRule getRule() { return rule; }
		
		//{semantics::SemanticNode} (annotations+=Annotation annotations+=Annotation*)? abstract?='abstract'? 'node' name=EString
		//'{' (properties+=Property properties+=Property*)? '}' ('{' metadata+=MetaData ("," metadata+=MetaData)* '}')?
		public Group getGroup() { return cGroup; }
		
		//{semantics::SemanticNode}
		public Action getSemanticNodeAction_0() { return cSemanticNodeAction_0; }
		
		//(annotations+=Annotation annotations+=Annotation*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//annotations+=Annotation
		public Assignment getAnnotationsAssignment_1_0() { return cAnnotationsAssignment_1_0; }
		
		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_1_0_0() { return cAnnotationsAnnotationParserRuleCall_1_0_0; }
		
		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_1_1() { return cAnnotationsAssignment_1_1; }
		
		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_1_1_0() { return cAnnotationsAnnotationParserRuleCall_1_1_0; }
		
		//abstract?='abstract'?
		public Assignment getAbstractAssignment_2() { return cAbstractAssignment_2; }
		
		//'abstract'
		public Keyword getAbstractAbstractKeyword_2_0() { return cAbstractAbstractKeyword_2_0; }
		
		//'node'
		public Keyword getNodeKeyword_3() { return cNodeKeyword_3; }
		
		//name=EString
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_4_0() { return cNameEStringParserRuleCall_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//(properties+=Property properties+=Property*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//properties+=Property
		public Assignment getPropertiesAssignment_6_0() { return cPropertiesAssignment_6_0; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_6_0_0() { return cPropertiesPropertyParserRuleCall_6_0_0; }
		
		//properties+=Property*
		public Assignment getPropertiesAssignment_6_1() { return cPropertiesAssignment_6_1; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_6_1_0() { return cPropertiesPropertyParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//('{' metadata+=MetaData ("," metadata+=MetaData)* '}')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_0() { return cLeftCurlyBracketKeyword_8_0; }
		
		//metadata+=MetaData
		public Assignment getMetadataAssignment_8_1() { return cMetadataAssignment_8_1; }
		
		//MetaData
		public RuleCall getMetadataMetaDataParserRuleCall_8_1_0() { return cMetadataMetaDataParserRuleCall_8_1_0; }
		
		//("," metadata+=MetaData)*
		public Group getGroup_8_2() { return cGroup_8_2; }
		
		//","
		public Keyword getCommaKeyword_8_2_0() { return cCommaKeyword_8_2_0; }
		
		//metadata+=MetaData
		public Assignment getMetadataAssignment_8_2_1() { return cMetadataAssignment_8_2_1; }
		
		//MetaData
		public RuleCall getMetadataMetaDataParserRuleCall_8_2_1_0() { return cMetadataMetaDataParserRuleCall_8_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_3() { return cRightCurlyBracketKeyword_8_3; }
	}
	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uam.eagledata.dsl.semanticnodes.SemanticNodesDsl.Property");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cObjectPropertyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDataPropertyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Property semantics::Property:
		//	ObjectProperty | DataProperty
		@Override public ParserRule getRule() { return rule; }
		
		//ObjectProperty | DataProperty
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ObjectProperty
		public RuleCall getObjectPropertyParserRuleCall_0() { return cObjectPropertyParserRuleCall_0; }
		
		//DataProperty
		public RuleCall getDataPropertyParserRuleCall_1() { return cDataPropertyParserRuleCall_1; }
	}
	public class ObjectPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uam.eagledata.dsl.semanticnodes.SemanticNodesDsl.ObjectProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cObjectPropertyAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRangeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRangeSemanticNodeCrossReference_3_0 = (CrossReference)cRangeAssignment_3.eContents().get(0);
		private final RuleCall cRangeSemanticNodeEStringParserRuleCall_3_0_1 = (RuleCall)cRangeSemanticNodeCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLowerBoundAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLowerBoundEIntParserRuleCall_4_1_0 = (RuleCall)cLowerBoundAssignment_4_1.eContents().get(0);
		private final Keyword cCommaKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cUpperBoundAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cUpperBoundEIntParserRuleCall_4_3_0 = (RuleCall)cUpperBoundAssignment_4_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMetadataAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMetadataMetaDataParserRuleCall_5_1_0 = (RuleCall)cMetadataAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cMetadataAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cMetadataMetaDataParserRuleCall_5_2_1_0 = (RuleCall)cMetadataAssignment_5_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		
		//ObjectProperty semantics::ObjectProperty:
		//	{semantics::ObjectProperty} name=EString '->' range=[semantics::SemanticNode|EString] ('[' lowerBound=EInt ','
		//	upperBound=EInt ']')? ('{' metadata+=MetaData ("," metadata+=MetaData)* '}')?
		@Override public ParserRule getRule() { return rule; }
		
		//{semantics::ObjectProperty} name=EString '->' range=[semantics::SemanticNode|EString] ('[' lowerBound=EInt ','
		//upperBound=EInt ']')? ('{' metadata+=MetaData ("," metadata+=MetaData)* '}')?
		public Group getGroup() { return cGroup; }
		
		//{semantics::ObjectProperty}
		public Action getObjectPropertyAction_0() { return cObjectPropertyAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_2() { return cHyphenMinusGreaterThanSignKeyword_2; }
		
		//range=[semantics::SemanticNode|EString]
		public Assignment getRangeAssignment_3() { return cRangeAssignment_3; }
		
		//[semantics::SemanticNode|EString]
		public CrossReference getRangeSemanticNodeCrossReference_3_0() { return cRangeSemanticNodeCrossReference_3_0; }
		
		//EString
		public RuleCall getRangeSemanticNodeEStringParserRuleCall_3_0_1() { return cRangeSemanticNodeEStringParserRuleCall_3_0_1; }
		
		//('[' lowerBound=EInt ',' upperBound=EInt ']')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }
		
		//lowerBound=EInt
		public Assignment getLowerBoundAssignment_4_1() { return cLowerBoundAssignment_4_1; }
		
		//EInt
		public RuleCall getLowerBoundEIntParserRuleCall_4_1_0() { return cLowerBoundEIntParserRuleCall_4_1_0; }
		
		//','
		public Keyword getCommaKeyword_4_2() { return cCommaKeyword_4_2; }
		
		//upperBound=EInt
		public Assignment getUpperBoundAssignment_4_3() { return cUpperBoundAssignment_4_3; }
		
		//EInt
		public RuleCall getUpperBoundEIntParserRuleCall_4_3_0() { return cUpperBoundEIntParserRuleCall_4_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_4() { return cRightSquareBracketKeyword_4_4; }
		
		//('{' metadata+=MetaData ("," metadata+=MetaData)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_0() { return cLeftCurlyBracketKeyword_5_0; }
		
		//metadata+=MetaData
		public Assignment getMetadataAssignment_5_1() { return cMetadataAssignment_5_1; }
		
		//MetaData
		public RuleCall getMetadataMetaDataParserRuleCall_5_1_0() { return cMetadataMetaDataParserRuleCall_5_1_0; }
		
		//("," metadata+=MetaData)*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//metadata+=MetaData
		public Assignment getMetadataAssignment_5_2_1() { return cMetadataAssignment_5_2_1; }
		
		//MetaData
		public RuleCall getMetadataMetaDataParserRuleCall_5_2_1_0() { return cMetadataMetaDataParserRuleCall_5_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }
	}
	public class DataPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uam.eagledata.dsl.semanticnodes.SemanticNodesDsl.DataProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDataPropertyAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTypeTypeEnumRuleCall_2_1_0 = (RuleCall)cTypeAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLowerBoundAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLowerBoundEIntParserRuleCall_3_1_0 = (RuleCall)cLowerBoundAssignment_3_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cUpperBoundAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cUpperBoundEIntParserRuleCall_3_3_0 = (RuleCall)cUpperBoundAssignment_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMetadataAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMetadataMetaDataParserRuleCall_4_1_0 = (RuleCall)cMetadataAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cMetadataAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cMetadataMetaDataParserRuleCall_4_2_1_0 = (RuleCall)cMetadataAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		
		//DataProperty semantics::DataProperty:
		//	{semantics::DataProperty} name=EString (':' type=Type) ('[' lowerBound=EInt ',' upperBound=EInt ']')? ('{'
		//	metadata+=MetaData ("," metadata+=MetaData)* '}')?
		@Override public ParserRule getRule() { return rule; }
		
		//{semantics::DataProperty} name=EString (':' type=Type) ('[' lowerBound=EInt ',' upperBound=EInt ']')? ('{'
		//metadata+=MetaData ("," metadata+=MetaData)* '}')?
		public Group getGroup() { return cGroup; }
		
		//{semantics::DataProperty}
		public Action getDataPropertyAction_0() { return cDataPropertyAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//(':' type=Type)
		public Group getGroup_2() { return cGroup_2; }
		
		//':'
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }
		
		//type=Type
		public Assignment getTypeAssignment_2_1() { return cTypeAssignment_2_1; }
		
		//Type
		public RuleCall getTypeTypeEnumRuleCall_2_1_0() { return cTypeTypeEnumRuleCall_2_1_0; }
		
		//('[' lowerBound=EInt ',' upperBound=EInt ']')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }
		
		//lowerBound=EInt
		public Assignment getLowerBoundAssignment_3_1() { return cLowerBoundAssignment_3_1; }
		
		//EInt
		public RuleCall getLowerBoundEIntParserRuleCall_3_1_0() { return cLowerBoundEIntParserRuleCall_3_1_0; }
		
		//','
		public Keyword getCommaKeyword_3_2() { return cCommaKeyword_3_2; }
		
		//upperBound=EInt
		public Assignment getUpperBoundAssignment_3_3() { return cUpperBoundAssignment_3_3; }
		
		//EInt
		public RuleCall getUpperBoundEIntParserRuleCall_3_3_0() { return cUpperBoundEIntParserRuleCall_3_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }
		
		//('{' metadata+=MetaData ("," metadata+=MetaData)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }
		
		//metadata+=MetaData
		public Assignment getMetadataAssignment_4_1() { return cMetadataAssignment_4_1; }
		
		//MetaData
		public RuleCall getMetadataMetaDataParserRuleCall_4_1_0() { return cMetadataMetaDataParserRuleCall_4_1_0; }
		
		//("," metadata+=MetaData)*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//metadata+=MetaData
		public Assignment getMetadataAssignment_4_2_1() { return cMetadataAssignment_4_2_1; }
		
		//MetaData
		public RuleCall getMetadataMetaDataParserRuleCall_4_2_1_0() { return cMetadataMetaDataParserRuleCall_4_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }
	}
	public class MetaDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uam.eagledata.dsl.semanticnodes.SemanticNodesDsl.MetaData");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMetaDataAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKeyEStringParserRuleCall_1_0 = (RuleCall)cKeyAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueEStringParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//MetaData semantics::MetaData:
		//	{semantics::MetaData} key=EString '=' value=EString
		@Override public ParserRule getRule() { return rule; }
		
		//{semantics::MetaData} key=EString '=' value=EString
		public Group getGroup() { return cGroup; }
		
		//{semantics::MetaData}
		public Action getMetaDataAction_0() { return cMetaDataAction_0; }
		
		//key=EString
		public Assignment getKeyAssignment_1() { return cKeyAssignment_1; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_1_0() { return cKeyEStringParserRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//value=EString
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_0() { return cValueEStringParserRuleCall_3_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uam.eagledata.dsl.semanticnodes.SemanticNodesDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uam.eagledata.dsl.semanticnodes.SemanticNodesDsl.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uam.eagledata.dsl.semanticnodes.SemanticNodesDsl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false'
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uam.eagledata.dsl.semanticnodes.SemanticNodesDsl.Annotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAnnotationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAnnotationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAnnotationEStringParserRuleCall_2_0 = (RuleCall)cAnnotationAssignment_2.eContents().get(0);
		
		//Annotation semantics::Annotation:
		//	{semantics::Annotation}
		//	"@" annotation=EString
		@Override public ParserRule getRule() { return rule; }
		
		//{semantics::Annotation} "@" annotation=EString
		public Group getGroup() { return cGroup; }
		
		//{semantics::Annotation}
		public Action getAnnotationAction_0() { return cAnnotationAction_0; }
		
		//"@"
		public Keyword getCommercialAtKeyword_1() { return cCommercialAtKeyword_1; }
		
		//annotation=EString
		public Assignment getAnnotationAssignment_2() { return cAnnotationAssignment_2; }
		
		//EString
		public RuleCall getAnnotationEStringParserRuleCall_2_0() { return cAnnotationEStringParserRuleCall_2_0; }
	}
	
	public class TypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uam.eagledata.dsl.semanticnodes.SemanticNodesDsl.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStringStringKeyword_0_0 = (Keyword)cStringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIntEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIntIntKeyword_1_0 = (Keyword)cIntEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBooleanEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBooleanBooleanKeyword_2_0 = (Keyword)cBooleanEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cFloatEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cFloatFloatKeyword_3_0 = (Keyword)cFloatEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDoubleEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDoubleDoubleKeyword_4_0 = (Keyword)cDoubleEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum Type returns semantics::Type:
		//	String | Int | Boolean | Float | Double;
		public EnumRule getRule() { return rule; }
		
		//String | Int | Boolean | Float | Double
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//String
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_0() { return cStringEnumLiteralDeclaration_0; }
		
		//'String'
		public Keyword getStringStringKeyword_0_0() { return cStringStringKeyword_0_0; }
		
		//Int
		public EnumLiteralDeclaration getIntEnumLiteralDeclaration_1() { return cIntEnumLiteralDeclaration_1; }
		
		//'Int'
		public Keyword getIntIntKeyword_1_0() { return cIntIntKeyword_1_0; }
		
		//Boolean
		public EnumLiteralDeclaration getBooleanEnumLiteralDeclaration_2() { return cBooleanEnumLiteralDeclaration_2; }
		
		//'Boolean'
		public Keyword getBooleanBooleanKeyword_2_0() { return cBooleanBooleanKeyword_2_0; }
		
		//Float
		public EnumLiteralDeclaration getFloatEnumLiteralDeclaration_3() { return cFloatEnumLiteralDeclaration_3; }
		
		//'Float'
		public Keyword getFloatFloatKeyword_3_0() { return cFloatFloatKeyword_3_0; }
		
		//Double
		public EnumLiteralDeclaration getDoubleEnumLiteralDeclaration_4() { return cDoubleEnumLiteralDeclaration_4; }
		
		//'Double'
		public Keyword getDoubleDoubleKeyword_4_0() { return cDoubleDoubleKeyword_4_0; }
	}
	
	private final RepositoryManagerElements pRepositoryManager;
	private final RepositoryElements pRepository;
	private final ResourceElements pResource;
	private final ResourceElementElements pResourceElement;
	private final SemanticNodeElements pSemanticNode;
	private final PropertyElements pProperty;
	private final ObjectPropertyElements pObjectProperty;
	private final DataPropertyElements pDataProperty;
	private final TypeElements eType;
	private final MetaDataElements pMetaData;
	private final EStringElements pEString;
	private final EIntElements pEInt;
	private final EBooleanElements pEBoolean;
	private final AnnotationElements pAnnotation;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SemanticNodesDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRepositoryManager = new RepositoryManagerElements();
		this.pRepository = new RepositoryElements();
		this.pResource = new ResourceElements();
		this.pResourceElement = new ResourceElementElements();
		this.pSemanticNode = new SemanticNodeElements();
		this.pProperty = new PropertyElements();
		this.pObjectProperty = new ObjectPropertyElements();
		this.pDataProperty = new DataPropertyElements();
		this.eType = new TypeElements();
		this.pMetaData = new MetaDataElements();
		this.pEString = new EStringElements();
		this.pEInt = new EIntElements();
		this.pEBoolean = new EBooleanElements();
		this.pAnnotation = new AnnotationElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("uam.eagledata.dsl.semanticnodes.SemanticNodesDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//RepositoryManager semantics::RepositoryManager:
	//	{semantics::RepositoryManager} (repositories+=Repository repositories+=Repository*)?
	public RepositoryManagerElements getRepositoryManagerAccess() {
		return pRepositoryManager;
	}
	
	public ParserRule getRepositoryManagerRule() {
		return getRepositoryManagerAccess().getRule();
	}
	
	//Repository semantics::Repository:
	//	{semantics::Repository}
	//	'repository' name=EString
	//	'{' resources+=Resource resources+=Resource* '}'
	public RepositoryElements getRepositoryAccess() {
		return pRepository;
	}
	
	public ParserRule getRepositoryRule() {
		return getRepositoryAccess().getRule();
	}
	
	//Resource semantics::Resource:
	//	{semantics::Resource} (annotations+=Annotation annotations+=Annotation*)?
	//	assistant=EString name=EString '{' (resourceElements+=ResourceElement resourceElements+=ResourceElement*)?
	//	'}' ('metadata' '{' metadata+=MetaData ("," metadata+=MetaData)* '}')?
	public ResourceElements getResourceAccess() {
		return pResource;
	}
	
	public ParserRule getResourceRule() {
		return getResourceAccess().getRule();
	}
	
	//ResourceElement semantics::ResourceElement:
	//	Resource | SemanticNode
	public ResourceElementElements getResourceElementAccess() {
		return pResourceElement;
	}
	
	public ParserRule getResourceElementRule() {
		return getResourceElementAccess().getRule();
	}
	
	//SemanticNode semantics::SemanticNode:
	//	{semantics::SemanticNode} (annotations+=Annotation annotations+=Annotation*)?
	//	abstract?='abstract'? 'node' name=EString
	//	'{' (properties+=Property properties+=Property*)?
	//	'}' ('{' metadata+=MetaData ("," metadata+=MetaData)* '}')?
	public SemanticNodeElements getSemanticNodeAccess() {
		return pSemanticNode;
	}
	
	public ParserRule getSemanticNodeRule() {
		return getSemanticNodeAccess().getRule();
	}
	
	//Property semantics::Property:
	//	ObjectProperty | DataProperty
	public PropertyElements getPropertyAccess() {
		return pProperty;
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}
	
	//ObjectProperty semantics::ObjectProperty:
	//	{semantics::ObjectProperty} name=EString '->' range=[semantics::SemanticNode|EString] ('[' lowerBound=EInt ','
	//	upperBound=EInt ']')? ('{' metadata+=MetaData ("," metadata+=MetaData)* '}')?
	public ObjectPropertyElements getObjectPropertyAccess() {
		return pObjectProperty;
	}
	
	public ParserRule getObjectPropertyRule() {
		return getObjectPropertyAccess().getRule();
	}
	
	//DataProperty semantics::DataProperty:
	//	{semantics::DataProperty} name=EString (':' type=Type) ('[' lowerBound=EInt ',' upperBound=EInt ']')? ('{'
	//	metadata+=MetaData ("," metadata+=MetaData)* '}')?
	public DataPropertyElements getDataPropertyAccess() {
		return pDataProperty;
	}
	
	public ParserRule getDataPropertyRule() {
		return getDataPropertyAccess().getRule();
	}
	
	//enum Type returns semantics::Type:
	//	String | Int | Boolean | Float | Double;
	public TypeElements getTypeAccess() {
		return eType;
	}
	
	public EnumRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//MetaData semantics::MetaData:
	//	{semantics::MetaData} key=EString '=' value=EString
	public MetaDataElements getMetaDataAccess() {
		return pMetaData;
	}
	
	public ParserRule getMetaDataRule() {
		return getMetaDataAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false'
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//Annotation semantics::Annotation:
	//	{semantics::Annotation}
	//	"@" annotation=EString
	public AnnotationElements getAnnotationAccess() {
		return pAnnotation;
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
