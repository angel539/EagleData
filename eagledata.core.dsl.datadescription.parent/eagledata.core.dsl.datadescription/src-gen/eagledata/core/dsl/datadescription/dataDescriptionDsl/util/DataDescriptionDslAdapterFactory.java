/**
 * generated by Xtext 2.9.1
 */
package eagledata.core.dsl.datadescription.dataDescriptionDsl.util;

import eagledata.core.dsl.datadescription.dataDescriptionDsl.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.DataDescriptionDslPackage
 * @generated
 */
public class DataDescriptionDslAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static DataDescriptionDslPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataDescriptionDslAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = DataDescriptionDslPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DataDescriptionDslSwitch<Adapter> modelSwitch =
    new DataDescriptionDslSwitch<Adapter>()
    {
      @Override
      public Adapter caseDataModel(DataModel object)
      {
        return createDataModelAdapter();
      }
      @Override
      public Adapter caseDataDescription(DataDescription object)
      {
        return createDataDescriptionAdapter();
      }
      @Override
      public Adapter caseDataSource(DataSource object)
      {
        return createDataSourceAdapter();
      }
      @Override
      public Adapter caseDataFragment(DataFragment object)
      {
        return createDataFragmentAdapter();
      }
      @Override
      public Adapter caseFormatSpecification(FormatSpecification object)
      {
        return createFormatSpecificationAdapter();
      }
      @Override
      public Adapter caseOption(Option object)
      {
        return createOptionAdapter();
      }
      @Override
      public Adapter caseNode(Node object)
      {
        return createNodeAdapter();
      }
      @Override
      public Adapter caseCompositeNode(CompositeNode object)
      {
        return createCompositeNodeAdapter();
      }
      @Override
      public Adapter caseNodeDeprecation(NodeDeprecation object)
      {
        return createNodeDeprecationAdapter();
      }
      @Override
      public Adapter caseLeafNode(LeafNode object)
      {
        return createLeafNodeAdapter();
      }
      @Override
      public Adapter caseRemove(Remove object)
      {
        return createRemoveAdapter();
      }
      @Override
      public Adapter caseRetype(Retype object)
      {
        return createRetypeAdapter();
      }
      @Override
      public Adapter caseRename(Rename object)
      {
        return createRenameAdapter();
      }
      @Override
      public Adapter caseTypeSpecification(TypeSpecification object)
      {
        return createTypeSpecificationAdapter();
      }
      @Override
      public Adapter caseDataType(DataType object)
      {
        return createDataTypeAdapter();
      }
      @Override
      public Adapter caseReference(Reference object)
      {
        return createReferenceAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.DataModel <em>Data Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.DataModel
   * @generated
   */
  public Adapter createDataModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.DataDescription <em>Data Description</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.DataDescription
   * @generated
   */
  public Adapter createDataDescriptionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.DataSource <em>Data Source</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.DataSource
   * @generated
   */
  public Adapter createDataSourceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.DataFragment <em>Data Fragment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.DataFragment
   * @generated
   */
  public Adapter createDataFragmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.FormatSpecification <em>Format Specification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.FormatSpecification
   * @generated
   */
  public Adapter createFormatSpecificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.Option <em>Option</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.Option
   * @generated
   */
  public Adapter createOptionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.Node <em>Node</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.Node
   * @generated
   */
  public Adapter createNodeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.CompositeNode <em>Composite Node</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.CompositeNode
   * @generated
   */
  public Adapter createCompositeNodeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.NodeDeprecation <em>Node Deprecation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.NodeDeprecation
   * @generated
   */
  public Adapter createNodeDeprecationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.LeafNode <em>Leaf Node</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.LeafNode
   * @generated
   */
  public Adapter createLeafNodeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.Remove <em>Remove</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.Remove
   * @generated
   */
  public Adapter createRemoveAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.Retype <em>Retype</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.Retype
   * @generated
   */
  public Adapter createRetypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.Rename <em>Rename</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.Rename
   * @generated
   */
  public Adapter createRenameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.TypeSpecification <em>Type Specification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.TypeSpecification
   * @generated
   */
  public Adapter createTypeSpecificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.DataType <em>Data Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.DataType
   * @generated
   */
  public Adapter createDataTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.Reference <em>Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see eagledata.core.dsl.datadescription.dataDescriptionDsl.Reference
   * @generated
   */
  public Adapter createReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //DataDescriptionDslAdapterFactory
