/**
 * generated by Xtext 2.9.1
 */
package eagledata.core.dsl.datadescription.dataDescriptionDsl.impl;

import eagledata.core.dsl.datadescription.dataDescriptionDsl.DataDescriptionDslPackage;
import eagledata.core.dsl.datadescription.dataDescriptionDsl.LeafNode;
import eagledata.core.dsl.datadescription.dataDescriptionDsl.NodeDeprecation;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Node Deprecation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link eagledata.core.dsl.datadescription.dataDescriptionDsl.impl.NodeDeprecationImpl#getDeprecated <em>Deprecated</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NodeDeprecationImpl extends MinimalEObjectImpl.Container implements NodeDeprecation
{
  /**
   * The cached value of the '{@link #getDeprecated() <em>Deprecated</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeprecated()
   * @generated
   * @ordered
   */
  protected LeafNode deprecated;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NodeDeprecationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DataDescriptionDslPackage.Literals.NODE_DEPRECATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LeafNode getDeprecated()
  {
    if (deprecated != null && deprecated.eIsProxy())
    {
      InternalEObject oldDeprecated = (InternalEObject)deprecated;
      deprecated = (LeafNode)eResolveProxy(oldDeprecated);
      if (deprecated != oldDeprecated)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DataDescriptionDslPackage.NODE_DEPRECATION__DEPRECATED, oldDeprecated, deprecated));
      }
    }
    return deprecated;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LeafNode basicGetDeprecated()
  {
    return deprecated;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDeprecated(LeafNode newDeprecated)
  {
    LeafNode oldDeprecated = deprecated;
    deprecated = newDeprecated;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataDescriptionDslPackage.NODE_DEPRECATION__DEPRECATED, oldDeprecated, deprecated));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DataDescriptionDslPackage.NODE_DEPRECATION__DEPRECATED:
        if (resolve) return getDeprecated();
        return basicGetDeprecated();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DataDescriptionDslPackage.NODE_DEPRECATION__DEPRECATED:
        setDeprecated((LeafNode)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DataDescriptionDslPackage.NODE_DEPRECATION__DEPRECATED:
        setDeprecated((LeafNode)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DataDescriptionDslPackage.NODE_DEPRECATION__DEPRECATED:
        return deprecated != null;
    }
    return super.eIsSet(featureID);
  }

} //NodeDeprecationImpl
