/*
 * generated by Xtext 2.9.2
 */
grammar InternalRuleDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package eagledata.core.dsl.rule.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package eagledata.core.dsl.rule.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import eagledata.core.dsl.rule.services.RuleDslGrammarAccess;

}

@parser::members {

 	private RuleDslGrammarAccess grammarAccess;

    public InternalRuleDslParser(TokenStream input, RuleDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "RuleModel";
   	}

   	@Override
   	protected RuleDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRuleModel
entryRuleRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleModelRule()); }
	iv_ruleRuleModel=ruleRuleModel
	{ $current=$iv_ruleRuleModel.current; }
	EOF;

// Rule RuleModel
ruleRuleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleModelAccess().getElementsRuleElementParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleRuleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"eagledata.core.dsl.rule.RuleDsl.RuleElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleModelAccess().getElementsRuleElementParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleRuleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"eagledata.core.dsl.rule.RuleDsl.RuleElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)?
;

// Entry rule entryRuleRuleElement
entryRuleRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleElementRule()); }
	iv_ruleRuleElement=ruleRuleElement
	{ $current=$iv_ruleRuleElement.current; }
	EOF;

// Rule RuleElement
ruleRuleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRuleElementAccess().getQueryParserRuleCall_0());
		}
		this_Query_0=ruleQuery
		{
			$current = $this_Query_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRuleElementAccess().getRuleParserRuleCall_1());
		}
		this_Rule_1=ruleRule
		{
			$current = $this_Rule_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rule'
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getRuleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getRuleAccess().getEqualsSignKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getRuleAccess().getLeftParenthesisKeyword_3());
		}
		otherlv_4='on'
		{
			newLeafNode(otherlv_4, grammarAccess.getRuleAccess().getOnKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getRuleAccess().getEventPhraseCrossReference_5_0());
				}
			)
		)
		(
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleAccess().getConditionWhenParserRuleCall_6_1_0());
					}
					lv_condition_7_0=ruleWhen
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleRule());
						}
						set(
							$current,
							"condition",
							lv_condition_7_0,
							"eagledata.core.dsl.rule.RuleDsl.When");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_6_2());
			}
		)?
		otherlv_9='do'
		{
			newLeafNode(otherlv_9, grammarAccess.getRuleAccess().getDoKeyword_7());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleAccess().getActionsQueryParserRuleCall_8_0_0());
					}
					lv_actions_10_0=ruleQuery
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleRule());
						}
						add(
							$current,
							"actions",
							lv_actions_10_0,
							"eagledata.core.dsl.rule.RuleDsl.Query");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getRuleAccess().getCommaKeyword_8_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRuleAccess().getActionsQueryParserRuleCall_8_1_1_0());
						}
						lv_actions_12_0=ruleQuery
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRuleRule());
							}
							add(
								$current,
								"actions",
								lv_actions_12_0,
								"eagledata.core.dsl.rule.RuleDsl.Query");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_13=')'
		{
			newLeafNode(otherlv_13, grammarAccess.getRuleAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleQuery
entryRuleQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryRule()); }
	iv_ruleQuery=ruleQuery
	{ $current=$iv_ruleQuery.current; }
	EOF;

// Rule Query
ruleQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getQueryAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQueryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getQueryAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQueryAccess().getSelectSelectParserRuleCall_2_0());
				}
				lv_select_2_0=ruleSelect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQueryRule());
					}
					set(
						$current,
						"select",
						lv_select_2_0,
						"eagledata.core.dsl.rule.RuleDsl.Select");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getQueryAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQueryAccess().getWhereWhereParserRuleCall_3_1_0());
					}
					lv_where_4_0=ruleWhere
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQueryRule());
						}
						set(
							$current,
							"where",
							lv_where_4_0,
							"eagledata.core.dsl.rule.RuleDsl.Where");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getQueryAccess().getRightCurlyBracketKeyword_3_2());
			}
		)?
	)
;

// Entry rule entryRuleSelect
entryRuleSelect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectRule()); }
	iv_ruleSelect=ruleSelect
	{ $current=$iv_ruleSelect.current; }
	EOF;

// Rule Select
ruleSelect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSelectAccess().getAddingSelectParserRuleCall_0());
		}
		this_AddingSelect_0=ruleAddingSelect
		{
			$current = $this_AddingSelect_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSelectAccess().getSetSelectParserRuleCall_1());
		}
		this_SetSelect_1=ruleSetSelect
		{
			$current = $this_SetSelect_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSetSelect
entryRuleSetSelect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetSelectRule()); }
	iv_ruleSetSelect=ruleSetSelect
	{ $current=$iv_ruleSetSelect.current; }
	EOF;

// Rule SetSelect
ruleSetSelect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSetSelectAccess().getSetSelectAction_0(),
					$current);
			}
		)
		otherlv_1='select'
		{
			newLeafNode(otherlv_1, grammarAccess.getSetSelectAccess().getSelectKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSetSelectAccess().getSelectionSelectionParserRuleCall_2_0_0_0());
						}
						lv_selection_2_0=ruleSelection
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSetSelectRule());
							}
							add(
								$current,
								"selection",
								lv_selection_2_0,
								"eagledata.core.dsl.rule.RuleDsl.Selection");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getSetSelectAccess().getCommaKeyword_2_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSetSelectAccess().getSelectionSelectionParserRuleCall_2_0_1_1_0());
							}
							lv_selection_4_0=ruleSelection
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSetSelectRule());
								}
								add(
									$current,
									"selection",
									lv_selection_4_0,
									"eagledata.core.dsl.rule.RuleDsl.Selection");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			    |
			(
				(
					lv_all_5_0='*'
					{
						newLeafNode(lv_all_5_0, grammarAccess.getSetSelectAccess().getAllAsteriskKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSetSelectRule());
						}
						setWithLastConsumed($current, "all", true, "*");
					}
				)
			)
		)
		(
			(
				(
					lv_operator_6_0=RULE_SETOPERATOR
					{
						newLeafNode(lv_operator_6_0, grammarAccess.getSetSelectAccess().getOperatorSETOPERATORTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSetSelectRule());
						}
						setWithLastConsumed(
							$current,
							"operator",
							lv_operator_6_0,
							"eagledata.core.dsl.rule.RuleDsl.SETOPERATOR");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSetSelectAccess().getSelectSetSelectParserRuleCall_3_1_0());
					}
					lv_select_7_0=ruleSetSelect
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetSelectRule());
						}
						set(
							$current,
							"select",
							lv_select_7_0,
							"eagledata.core.dsl.rule.RuleDsl.SetSelect");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSelection
entryRuleSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectionRule()); }
	iv_ruleSelection=ruleSelection
	{ $current=$iv_ruleSelection.current; }
	EOF;

// Rule Selection
ruleSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectionRule());
						}
					}
					otherlv_0=RULE_ID
					{
						newLeafNode(otherlv_0, grammarAccess.getSelectionAccess().getSelectorConceptCrossReference_0_0_0());
					}
				)
			)
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getSelectionAccess().getFullStopKeyword_0_1());
			}
		)?
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectionRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getSelectionAccess().getRootConceptCrossReference_1_0_0());
					}
				)
			)
			(
				otherlv_3='.'
				{
					newLeafNode(otherlv_3, grammarAccess.getSelectionAccess().getFullStopKeyword_1_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSelectionRule());
							}
						}
						otherlv_4=RULE_ID
						{
							newLeafNode(otherlv_4, grammarAccess.getSelectionAccess().getRootConceptCrossReference_1_1_1_0());
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleAddingSelect
entryRuleAddingSelect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddingSelectRule()); }
	iv_ruleAddingSelect=ruleAddingSelect
	{ $current=$iv_ruleAddingSelect.current; }
	EOF;

// Rule AddingSelect
ruleAddingSelect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_operation_0_0=RULE_SELECTOPERATOR
				{
					newLeafNode(lv_operation_0_0, grammarAccess.getAddingSelectAccess().getOperationSELECTOPERATORTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddingSelectRule());
					}
					setWithLastConsumed(
						$current,
						"operation",
						lv_operation_0_0,
						"eagledata.core.dsl.rule.RuleDsl.SELECTOPERATOR");
				}
			)
		)
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAddingSelectRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getAddingSelectAccess().getElementConceptCrossReference_1_0_0());
					}
				)
			)?
			    |
			(
				(
					lv_all_2_0='*'
					{
						newLeafNode(lv_all_2_0, grammarAccess.getAddingSelectAccess().getAllAsteriskKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAddingSelectRule());
						}
						setWithLastConsumed($current, "all", true, "*");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleWhere
entryRuleWhere returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhereRule()); }
	iv_ruleWhere=ruleWhere
	{ $current=$iv_ruleWhere.current; }
	EOF;

// Rule Where
ruleWhere returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='where'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhereAccess().getWhereKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWhereRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getWhereAccess().getLeftConceptCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_logicalOperator_2_0=RULE_LOGICALOPERATOR
				{
					newLeafNode(lv_logicalOperator_2_0, grammarAccess.getWhereAccess().getLogicalOperatorLOGICALOPERATORTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWhereRule());
					}
					setWithLastConsumed(
						$current,
						"logicalOperator",
						lv_logicalOperator_2_0,
						"eagledata.core.dsl.rule.RuleDsl.LOGICALOPERATOR");
				}
			)
		)
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWhereRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getWhereAccess().getRightVariableConceptCrossReference_3_0_0());
					}
				)
			)
			    |
			(
				(
					lv_right_4_0=RULE_INT
					{
						newLeafNode(lv_right_4_0, grammarAccess.getWhereAccess().getRightINTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWhereRule());
						}
						setWithLastConsumed(
							$current,
							"right",
							lv_right_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleWhen
entryRuleWhen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhenRule()); }
	iv_ruleWhen=ruleWhen
	{ $current=$iv_ruleWhen.current; }
	EOF;

// Rule When
ruleWhen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='when'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhenAccess().getWhenKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhenAccess().getLeftExpressionParserRuleCall_1_0());
				}
				lv_left_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhenRule());
					}
					set(
						$current,
						"left",
						lv_left_1_0,
						"eagledata.core.dsl.rule.RuleDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_logicalOperator_2_0=RULE_LOGICALOPERATOR
				{
					newLeafNode(lv_logicalOperator_2_0, grammarAccess.getWhenAccess().getLogicalOperatorLOGICALOPERATORTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWhenRule());
					}
					setWithLastConsumed(
						$current,
						"logicalOperator",
						lv_logicalOperator_2_0,
						"eagledata.core.dsl.rule.RuleDsl.LOGICALOPERATOR");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWhenAccess().getRightExpressionParserRuleCall_3_0());
				}
				lv_right_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhenRule());
					}
					set(
						$current,
						"right",
						lv_right_3_0,
						"eagledata.core.dsl.rule.RuleDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getPlainExpressionParserRuleCall_0());
		}
		this_PlainExpression_0=rulePlainExpression
		{
			$current = $this_PlainExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getComplexExpressionParserRuleCall_1());
		}
		this_ComplexExpression_1=ruleComplexExpression
		{
			$current = $this_ComplexExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePlainExpression
entryRulePlainExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlainExpressionRule()); }
	iv_rulePlainExpression=rulePlainExpression
	{ $current=$iv_rulePlainExpression.current; }
	EOF;

// Rule PlainExpression
rulePlainExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPlainExpressionAccess().getPlainOperandPlainOperandParserRuleCall_0());
			}
			lv_plainOperand_0_0=rulePlainOperand
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPlainExpressionRule());
				}
				set(
					$current,
					"plainOperand",
					lv_plainOperand_0_0,
					"eagledata.core.dsl.rule.RuleDsl.PlainOperand");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleComplexExpression
entryRuleComplexExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexExpressionRule()); }
	iv_ruleComplexExpression=ruleComplexExpression
	{ $current=$iv_ruleComplexExpression.current; }
	EOF;

// Rule ComplexExpression
ruleComplexExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getComplexExpressionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComplexExpressionAccess().getPlainOperandPlainOperandParserRuleCall_1_0());
				}
				lv_plainOperand_1_0=rulePlainOperand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComplexExpressionRule());
					}
					set(
						$current,
						"plainOperand",
						lv_plainOperand_1_0,
						"eagledata.core.dsl.rule.RuleDsl.PlainOperand");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getComplexExpressionAccess().getComplexOperandsComplexOperandParserRuleCall_2_0_0());
					}
					lv_complexOperands_2_0=ruleComplexOperand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComplexExpressionRule());
						}
						add(
							$current,
							"complexOperands",
							lv_complexOperands_2_0,
							"eagledata.core.dsl.rule.RuleDsl.ComplexOperand");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComplexExpressionAccess().getComplexOperandsComplexOperandParserRuleCall_2_1_0());
					}
					lv_complexOperands_3_0=ruleComplexOperand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComplexExpressionRule());
						}
						add(
							$current,
							"complexOperands",
							lv_complexOperands_3_0,
							"eagledata.core.dsl.rule.RuleDsl.ComplexOperand");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getComplexExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRulePlainOperand
entryRulePlainOperand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlainOperandRule()); }
	iv_rulePlainOperand=rulePlainOperand
	{ $current=$iv_rulePlainOperand.current; }
	EOF;

// Rule PlainOperand
rulePlainOperand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPlainOperandAccess().getNumeralParserRuleCall_0());
		}
		this_Numeral_0=ruleNumeral
		{
			$current = $this_Numeral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPlainOperandAccess().getQueryOperandParserRuleCall_1());
		}
		this_QueryOperand_1=ruleQueryOperand
		{
			$current = $this_QueryOperand_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNumeral
entryRuleNumeral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumeralRule()); }
	iv_ruleNumeral=ruleNumeral
	{ $current=$iv_ruleNumeral.current; }
	EOF;

// Rule Numeral
ruleNumeral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_DOUBLE
			{
				newLeafNode(lv_value_0_0, grammarAccess.getNumeralAccess().getValueDOUBLETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNumeralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"eagledata.core.dsl.rule.RuleDsl.DOUBLE");
			}
		)
	)
;

// Entry rule entryRuleQueryOperand
entryRuleQueryOperand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryOperandRule()); }
	iv_ruleQueryOperand=ruleQueryOperand
	{ $current=$iv_ruleQueryOperand.current; }
	EOF;

// Rule QueryOperand
ruleQueryOperand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getQueryOperandRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getQueryOperandAccess().getQueryQueryCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleComplexOperand
entryRuleComplexOperand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexOperandRule()); }
	iv_ruleComplexOperand=ruleComplexOperand
	{ $current=$iv_ruleComplexOperand.current; }
	EOF;

// Rule ComplexOperand
ruleComplexOperand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_operator_0_0=RULE_OPERATOR
				{
					newLeafNode(lv_operator_0_0, grammarAccess.getComplexOperandAccess().getOperatorOPERATORTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComplexOperandRule());
					}
					setWithLastConsumed(
						$current,
						"operator",
						lv_operator_0_0,
						"eagledata.core.dsl.rule.RuleDsl.OPERATOR");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComplexOperandAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComplexOperandRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"eagledata.core.dsl.rule.RuleDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_OPERATOR : ('+'|'-'|'*'|'DIV');

RULE_LOGICALOPERATOR : ('>'|'<'|'>='|'<='|'=');

RULE_SELECTOPERATOR : ('COUNT'|'MIN'|'MAX');

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_SETOPERATOR : ('UNION'|'EXCEPT'|'INTERSECT');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
