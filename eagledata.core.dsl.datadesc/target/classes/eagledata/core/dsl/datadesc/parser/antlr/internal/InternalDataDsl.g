/*
 * generated by Xtext 2.9.2
 */
grammar InternalDataDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package eagledata.core.dsl.datadesc.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package eagledata.core.dsl.datadesc.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import eagledata.core.dsl.datadesc.services.DataDslGrammarAccess;

}

@parser::members {

 	private DataDslGrammarAccess grammarAccess;

    public InternalDataDslParser(TokenStream input, DataDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DataModel";
   	}

   	@Override
   	protected DataDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDataModel
entryRuleDataModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataModelRule()); }
	iv_ruleDataModel=ruleDataModel
	{ $current=$iv_ruleDataModel.current; }
	EOF;

// Rule DataModel
ruleDataModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelAccess().getDescriptionsDataModelElementParserRuleCall_0_0());
				}
				lv_descriptions_0_0=ruleDataModelElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelRule());
					}
					add(
						$current,
						"descriptions",
						lv_descriptions_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.DataModelElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelAccess().getDescriptionsDataModelElementParserRuleCall_1_0());
				}
				lv_descriptions_1_0=ruleDataModelElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelRule());
					}
					add(
						$current,
						"descriptions",
						lv_descriptions_1_0,
						"eagledata.core.dsl.datadesc.DataDsl.DataModelElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"eagledata.core.dsl.datadesc.DataDsl.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleDataModelElement
entryRuleDataModelElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataModelElementRule()); }
	iv_ruleDataModelElement=ruleDataModelElement
	{ $current=$iv_ruleDataModelElement.current; }
	EOF;

// Rule DataModelElement
ruleDataModelElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDataModelElementAccess().getImportParserRuleCall_0());
		}
		this_Import_0=ruleImport
		{
			$current = $this_Import_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataModelElementAccess().getPackageDeclarationParserRuleCall_1());
		}
		this_PackageDeclaration_1=rulePackageDeclaration
		{
			$current = $this_PackageDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataModelElementAccess().getDataPackableDescriptionParserRuleCall_2());
		}
		this_DataPackableDescription_2=ruleDataPackableDescription
		{
			$current = $this_DataPackableDescription_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataModelElementAccess().getDataSourceDescriptionParserRuleCall_3());
		}
		this_DataSourceDescription_3=ruleDataSourceDescription
		{
			$current = $this_DataSourceDescription_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageDeclarationRule()); }
	iv_rulePackageDeclaration=rulePackageDeclaration
	{ $current=$iv_rulePackageDeclaration.current; }
	EOF;

// Rule PackageDeclaration
rulePackageDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"eagledata.core.dsl.datadesc.DataDsl.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageDeclarationAccess().getElementsDataPackableDescriptionParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleDataPackableDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"eagledata.core.dsl.datadesc.DataDsl.DataPackableDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageDeclarationAccess().getElementsDataPackableDescriptionParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleDataPackableDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"eagledata.core.dsl.datadesc.DataDsl.DataPackableDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDataPackableDescription
entryRuleDataPackableDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataPackableDescriptionRule()); }
	iv_ruleDataPackableDescription=ruleDataPackableDescription
	{ $current=$iv_ruleDataPackableDescription.current; }
	EOF;

// Rule DataPackableDescription
ruleDataPackableDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDataPackableDescriptionAccess().getStringConceptParserRuleCall_0());
		}
		this_StringConcept_0=ruleStringConcept
		{
			$current = $this_StringConcept_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataPackableDescriptionAccess().getTypeSpecificationParserRuleCall_1());
		}
		this_TypeSpecification_1=ruleTypeSpecification
		{
			$current = $this_TypeSpecification_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataPackableDescriptionAccess().getDataFragmentParserRuleCall_2());
		}
		this_DataFragment_2=ruleDataFragment
		{
			$current = $this_DataFragment_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStringConcept
entryRuleStringConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringConceptRule()); }
	iv_ruleStringConcept=ruleStringConcept
	{ $current=$iv_ruleStringConcept.current; }
	EOF;

// Rule StringConcept
ruleStringConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='string'
		{
			newLeafNode(otherlv_0, grammarAccess.getStringConceptAccess().getStringKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStringConceptAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringConceptRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getStringConceptAccess().getEqualsSignKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getStringConceptAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStringConceptAccess().getSubsequenceSubstringConceptParserRuleCall_4_0_0());
					}
					lv_subsequence_4_0=ruleSubstringConcept
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStringConceptRule());
						}
						add(
							$current,
							"subsequence",
							lv_subsequence_4_0,
							"eagledata.core.dsl.datadesc.DataDsl.SubstringConcept");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getStringConceptAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStringConceptAccess().getSubsequenceSubstringConceptParserRuleCall_4_1_1_0());
						}
						lv_subsequence_6_0=ruleSubstringConcept
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStringConceptRule());
							}
							add(
								$current,
								"subsequence",
								lv_subsequence_6_0,
								"eagledata.core.dsl.datadesc.DataDsl.SubstringConcept");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getStringConceptAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleSubstringConcept
entryRuleSubstringConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubstringConceptRule()); }
	iv_ruleSubstringConcept=ruleSubstringConcept
	{ $current=$iv_ruleSubstringConcept.current; }
	EOF;

// Rule SubstringConcept
ruleSubstringConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSubstringConceptAccess().getCharacterParserRuleCall_0());
		}
		this_Character_0=ruleCharacter
		{
			$current = $this_Character_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSubstringConceptAccess().getSubstringParserRuleCall_1());
		}
		this_Substring_1=ruleSubstring
		{
			$current = $this_Substring_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSubstring
entryRuleSubstring returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubstringRule()); }
	iv_ruleSubstring=ruleSubstring
	{ $current=$iv_ruleSubstring.current; }
	EOF;

// Rule Substring
ruleSubstring returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSubstringAccess().getTypeStringTypeStringEnumRuleCall_0_0());
				}
				lv_typeString_0_0=ruleTypeString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubstringRule());
					}
					set(
						$current,
						"typeString",
						lv_typeString_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.TypeString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSubstringAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubstringRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getSubstringAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				lv_minlength_3_0=RULE_INT
				{
					newLeafNode(lv_minlength_3_0, grammarAccess.getSubstringAccess().getMinlengthINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubstringRule());
					}
					setWithLastConsumed(
						$current,
						"minlength",
						lv_minlength_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getSubstringAccess().getCommaKeyword_4());
		}
		(
			(
				lv_maxlength_5_0=RULE_INT
				{
					newLeafNode(lv_maxlength_5_0, grammarAccess.getSubstringAccess().getMaxlengthINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubstringRule());
					}
					setWithLastConsumed(
						$current,
						"maxlength",
						lv_maxlength_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getSubstringAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleCharacter
entryRuleCharacter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCharacterRule()); }
	iv_ruleCharacter=ruleCharacter
	{ $current=$iv_ruleCharacter.current; }
	EOF;

// Rule Character
ruleCharacter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCharacterAccess().getTypeCharacterTypeCharacterEnumRuleCall_0_0());
				}
				lv_typeCharacter_0_0=ruleTypeCharacter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharacterRule());
					}
					set(
						$current,
						"typeCharacter",
						lv_typeCharacter_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.TypeCharacter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCharacterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCharacterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getCharacterAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCharacterRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
	)
;

// Entry rule entryRuleDataSourceDescription
entryRuleDataSourceDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataSourceDescriptionRule()); }
	iv_ruleDataSourceDescription=ruleDataSourceDescription
	{ $current=$iv_ruleDataSourceDescription.current; }
	EOF;

// Rule DataSourceDescription
ruleDataSourceDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='description'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataSourceDescriptionAccess().getDescriptionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataSourceDescriptionAccess().getFormatFormatEnumRuleCall_1_0());
				}
				lv_format_1_0=ruleFormat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataSourceDescriptionRule());
					}
					set(
						$current,
						"format",
						lv_format_1_0,
						"eagledata.core.dsl.datadesc.DataDsl.Format");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDataSourceDescriptionAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataSourceDescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getDataSourceDescriptionAccess().getColonKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataSourceDescriptionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataSourceDescriptionAccess().getFragmentsDataFragmentCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getDataSourceDescriptionAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDataSourceDescriptionRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getDataSourceDescriptionAccess().getFragmentsDataFragmentCrossReference_3_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getDataSourceDescriptionAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataSourceDescriptionAccess().getNodesLeafNodeParserRuleCall_5_0_0());
					}
					lv_nodes_8_0=ruleLeafNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataSourceDescriptionRule());
						}
						add(
							$current,
							"nodes",
							lv_nodes_8_0,
							"eagledata.core.dsl.datadesc.DataDsl.LeafNode");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getDataSourceDescriptionAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataSourceDescriptionAccess().getNodesLeafNodeParserRuleCall_5_1_1_0());
						}
						lv_nodes_10_0=ruleLeafNode
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataSourceDescriptionRule());
							}
							add(
								$current,
								"nodes",
								lv_nodes_10_0,
								"eagledata.core.dsl.datadesc.DataDsl.LeafNode");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getDataSourceDescriptionAccess().getRightCurlyBracketKeyword_6());
		}
		(
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getDataSourceDescriptionAccess().getLeftCurlyBracketKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataSourceDescriptionAccess().getOptionsDataOptionParserRuleCall_7_1_0());
					}
					lv_options_13_0=ruleDataOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataSourceDescriptionRule());
						}
						add(
							$current,
							"options",
							lv_options_13_0,
							"eagledata.core.dsl.datadesc.DataDsl.DataOption");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getDataSourceDescriptionAccess().getCommaKeyword_7_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataSourceDescriptionAccess().getOptionsDataOptionParserRuleCall_7_2_1_0());
						}
						lv_options_15_0=ruleDataOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataSourceDescriptionRule());
							}
							add(
								$current,
								"options",
								lv_options_15_0,
								"eagledata.core.dsl.datadesc.DataDsl.DataOption");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getDataSourceDescriptionAccess().getRightCurlyBracketKeyword_7_3());
			}
		)?
	)
;

// Entry rule entryRuleDataFragment
entryRuleDataFragment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataFragmentRule()); }
	iv_ruleDataFragment=ruleDataFragment
	{ $current=$iv_ruleDataFragment.current; }
	EOF;

// Rule DataFragment
ruleDataFragment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='fragment'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataFragmentAccess().getFragmentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataFragmentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataFragmentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getDataFragmentAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataFragmentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataFragmentAccess().getFragmentsDataFragmentCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getDataFragmentAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDataFragmentRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getDataFragmentAccess().getFragmentsDataFragmentCrossReference_2_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getDataFragmentAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataFragmentAccess().getNodesLeafNodeParserRuleCall_4_0_0());
					}
					lv_nodes_7_0=ruleLeafNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataFragmentRule());
						}
						add(
							$current,
							"nodes",
							lv_nodes_7_0,
							"eagledata.core.dsl.datadesc.DataDsl.LeafNode");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getDataFragmentAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataFragmentAccess().getNodesLeafNodeParserRuleCall_4_1_1_0());
						}
						lv_nodes_9_0=ruleLeafNode
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataFragmentRule());
							}
							add(
								$current,
								"nodes",
								lv_nodes_9_0,
								"eagledata.core.dsl.datadesc.DataDsl.LeafNode");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getDataFragmentAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleTypeSpecification
entryRuleTypeSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSpecificationRule()); }
	iv_ruleTypeSpecification=ruleTypeSpecification
	{ $current=$iv_ruleTypeSpecification.current; }
	EOF;

// Rule TypeSpecification
ruleTypeSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeSpecificationAccess().getDataTypeParserRuleCall_0());
		}
		this_DataType_0=ruleDataType
		{
			$current = $this_DataType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeSpecificationAccess().getEnumerationParserRuleCall_1());
		}
		this_Enumeration_1=ruleEnumeration
		{
			$current = $this_Enumeration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeSpecificationAccess().getStructDataTypeParserRuleCall_2());
		}
		this_StructDataType_2=ruleStructDataType
		{
			$current = $this_StructDataType_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='datatype'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataTypeAccess().getDatatypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataTypeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataTypeAccess().getRefineBasicTypeEnumRuleCall_3_0());
				}
				lv_refine_3_0=ruleBasicType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataTypeRule());
					}
					set(
						$current,
						"refine",
						lv_refine_3_0,
						"eagledata.core.dsl.datadesc.DataDsl.BasicType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataTypeAccess().getOptionsOptionParserRuleCall_4_1_0());
					}
					lv_options_5_0=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataTypeRule());
						}
						add(
							$current,
							"options",
							lv_options_5_0,
							"eagledata.core.dsl.datadesc.DataDsl.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getDataTypeAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataTypeAccess().getOptionsOptionParserRuleCall_4_2_1_0());
						}
						lv_options_7_0=ruleOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataTypeRule());
							}
							add(
								$current,
								"options",
								lv_options_7_0,
								"eagledata.core.dsl.datadesc.DataDsl.Option");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_4_3());
			}
		)?
	)
;

// Entry rule entryRuleEnumeration
entryRuleEnumeration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationRule()); }
	iv_ruleEnumeration=ruleEnumeration
	{ $current=$iv_ruleEnumeration.current; }
	EOF;

// Rule Enumeration
ruleEnumeration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enumeration'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumerationAccess().getEnumerationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumerationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumerationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				lv_values_3_0=RULE_STRING
				{
					newLeafNode(lv_values_3_0, grammarAccess.getEnumerationAccess().getValuesSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationRule());
					}
					addWithLastConsumed(
						$current,
						"values",
						lv_values_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getEnumerationAccess().getCommaKeyword_4_0());
			}
			(
				(
					lv_values_5_0=RULE_STRING
					{
						newLeafNode(lv_values_5_0, grammarAccess.getEnumerationAccess().getValuesSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumerationRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getEnumerationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleStructDataType
entryRuleStructDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructDataTypeRule()); }
	iv_ruleStructDataType=ruleStructDataType
	{ $current=$iv_ruleStructDataType.current; }
	EOF;

// Rule StructDataType
ruleStructDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='struct'
		{
			newLeafNode(otherlv_0, grammarAccess.getStructDataTypeAccess().getStructKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStructDataTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStructDataTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getStructDataTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStructDataTypeAccess().getSubnodesLeafNodeParserRuleCall_3_0_0());
					}
					lv_subnodes_3_0=ruleLeafNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStructDataTypeRule());
						}
						add(
							$current,
							"subnodes",
							lv_subnodes_3_0,
							"eagledata.core.dsl.datadesc.DataDsl.LeafNode");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getStructDataTypeAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStructDataTypeAccess().getSubnodesLeafNodeParserRuleCall_3_1_1_0());
						}
						lv_subnodes_5_0=ruleLeafNode
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStructDataTypeRule());
							}
							add(
								$current,
								"subnodes",
								lv_subnodes_5_0,
								"eagledata.core.dsl.datadesc.DataDsl.LeafNode");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getStructDataTypeAccess().getRightCurlyBracketKeyword_4());
		}
		(
			otherlv_7='{'
			{
				newLeafNode(otherlv_7, grammarAccess.getStructDataTypeAccess().getLeftCurlyBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStructDataTypeAccess().getOptionsOptionParserRuleCall_5_1_0());
					}
					lv_options_8_0=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStructDataTypeRule());
						}
						add(
							$current,
							"options",
							lv_options_8_0,
							"eagledata.core.dsl.datadesc.DataDsl.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getStructDataTypeAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStructDataTypeAccess().getOptionsOptionParserRuleCall_5_2_1_0());
						}
						lv_options_10_0=ruleOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStructDataTypeRule());
							}
							add(
								$current,
								"options",
								lv_options_10_0,
								"eagledata.core.dsl.datadesc.DataDsl.Option");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getStructDataTypeAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
	)
;

// Entry rule entryRuleLeafNode
entryRuleLeafNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLeafNodeRule()); }
	iv_ruleLeafNode=ruleLeafNode
	{ $current=$iv_ruleLeafNode.current; }
	EOF;

// Rule LeafNode
ruleLeafNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_key_0_0='key'
					{
						newLeafNode(lv_key_0_0, grammarAccess.getLeafNodeAccess().getKeyKeyKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLeafNodeRule());
						}
						setWithLastConsumed($current, "key", true, "key");
					}
				)
			)
			    |
			(
				(
					lv_unique_1_0='unique'
					{
						newLeafNode(lv_unique_1_0, grammarAccess.getLeafNodeAccess().getUniqueUniqueKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLeafNodeRule());
						}
						setWithLastConsumed($current, "unique", true, "unique");
					}
				)
			)
			    |
			(
				(
					lv_list_2_0='list'
					{
						newLeafNode(lv_list_2_0, grammarAccess.getLeafNodeAccess().getListListKeyword_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLeafNodeRule());
						}
						setWithLastConsumed($current, "list", true, "list");
					}
				)
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLeafNodeAccess().getTypeBasicTypeEnumRuleCall_1_0_0());
					}
					lv_type_3_0=ruleBasicType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLeafNodeRule());
						}
						set(
							$current,
							"type",
							lv_type_3_0,
							"eagledata.core.dsl.datadesc.DataDsl.BasicType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLeafNodeRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getLeafNodeAccess().getTypeCallTypeSpecificationCrossReference_1_1_0());
					}
				)
			)
		)
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getLeafNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLeafNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getLeafNodeAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLeafNodeAccess().getOptionsOptionParserRuleCall_3_1_0());
					}
					lv_options_7_0=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLeafNodeRule());
						}
						add(
							$current,
							"options",
							lv_options_7_0,
							"eagledata.core.dsl.datadesc.DataDsl.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getLeafNodeAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLeafNodeAccess().getOptionsOptionParserRuleCall_3_2_1_0());
						}
						lv_options_9_0=ruleOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLeafNodeRule());
							}
							add(
								$current,
								"options",
								lv_options_9_0,
								"eagledata.core.dsl.datadesc.DataDsl.Option");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getLeafNodeAccess().getRightCurlyBracketKeyword_3_3());
			}
		)?
	)
;

// Entry rule entryRuleOption
entryRuleOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionRule()); }
	iv_ruleOption=ruleOption
	{ $current=$iv_ruleOption.current; }
	EOF;

// Rule Option
ruleOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOptionAccess().getStringOptionParserRuleCall_0());
		}
		this_StringOption_0=ruleStringOption
		{
			$current = $this_StringOption_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getIntOptionParserRuleCall_1());
		}
		this_IntOption_1=ruleIntOption
		{
			$current = $this_IntOption_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getBooleanOptionParserRuleCall_2());
		}
		this_BooleanOption_2=ruleBooleanOption
		{
			$current = $this_BooleanOption_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getSequenceOptionParserRuleCall_3());
		}
		this_SequenceOption_3=ruleSequenceOption
		{
			$current = $this_SequenceOption_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getDoubleOptionParserRuleCall_4());
		}
		this_DoubleOption_4=ruleDoubleOption
		{
			$current = $this_DoubleOption_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStringOption
entryRuleStringOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringOptionRule()); }
	iv_ruleStringOption=ruleStringOption
	{ $current=$iv_ruleStringOption.current; }
	EOF;

// Rule StringOption
ruleStringOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStringOptionAccess().getKeyStringOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleStringOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.StringOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getStringOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getStringOptionAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringOptionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleIntOption
entryRuleIntOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntOptionRule()); }
	iv_ruleIntOption=ruleIntOption
	{ $current=$iv_ruleIntOption.current; }
	EOF;

// Rule IntOption
ruleIntOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIntOptionAccess().getKeyIntOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleIntOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.IntOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getIntOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getIntOptionAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntOptionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleDoubleOption
entryRuleDoubleOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoubleOptionRule()); }
	iv_ruleDoubleOption=ruleDoubleOption
	{ $current=$iv_ruleDoubleOption.current; }
	EOF;

// Rule DoubleOption
ruleDoubleOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDoubleOptionAccess().getKeyDoubleOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleDoubleOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoubleOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.DoubleOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getDoubleOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_DOUBLE
				{
					newLeafNode(lv_value_2_0, grammarAccess.getDoubleOptionAccess().getValueDOUBLETerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDoubleOptionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"eagledata.core.dsl.datadesc.DataDsl.DOUBLE");
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanOption
entryRuleBooleanOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanOptionRule()); }
	iv_ruleBooleanOption=ruleBooleanOption
	{ $current=$iv_ruleBooleanOption.current; }
	EOF;

// Rule BooleanOption
ruleBooleanOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanOptionAccess().getKeyBooleanOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleBooleanOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.BooleanOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_BOOLEAN
				{
					newLeafNode(lv_value_2_0, grammarAccess.getBooleanOptionAccess().getValueBOOLEANTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanOptionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"eagledata.core.dsl.datadesc.DataDsl.BOOLEAN");
				}
			)
		)
	)
;

// Entry rule entryRuleSequenceOption
entryRuleSequenceOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceOptionRule()); }
	iv_ruleSequenceOption=ruleSequenceOption
	{ $current=$iv_ruleSequenceOption.current; }
	EOF;

// Rule SequenceOption
ruleSequenceOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSequenceOptionAccess().getKeySequenceOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleSequenceOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSequenceOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.SequenceOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getSequenceOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSequenceOptionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSequenceOptionAccess().getValueStringConceptCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDataOption
entryRuleDataOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataOptionRule()); }
	iv_ruleDataOption=ruleDataOption
	{ $current=$iv_ruleDataOption.current; }
	EOF;

// Rule DataOption
ruleDataOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataOptionAccess().getKeyDataOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleDataOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.DataOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getDataOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getDataOptionAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataOptionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Rule TypeCharacter
ruleTypeCharacter returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='char'
			{
				$current = grammarAccess.getTypeCharacterAccess().getCharEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeCharacterAccess().getCharEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='digit'
			{
				$current = grammarAccess.getTypeCharacterAccess().getDigitEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeCharacterAccess().getDigitEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule TypeString
ruleTypeString returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='anycase_string'
			{
				$current = grammarAccess.getTypeStringAccess().getAnycaseEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeStringAccess().getAnycaseEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='lowercase_string'
			{
				$current = grammarAccess.getTypeStringAccess().getLowercaseEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeStringAccess().getLowercaseEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='uppercase_string'
			{
				$current = grammarAccess.getTypeStringAccess().getUppercaseEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTypeStringAccess().getUppercaseEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='digits'
			{
				$current = grammarAccess.getTypeStringAccess().getNumbersEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTypeStringAccess().getNumbersEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule SequenceOptionKey
ruleSequenceOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='regex_form'
		{
			$current = grammarAccess.getSequenceOptionKeyAccess().getRegex_formEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getSequenceOptionKeyAccess().getRegex_formEnumLiteralDeclaration());
		}
	)
;

// Rule BasicType
ruleBasicType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='string'
			{
				$current = grammarAccess.getBasicTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBasicTypeAccess().getStringEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='url'
			{
				$current = grammarAccess.getBasicTypeAccess().getUrlEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBasicTypeAccess().getUrlEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='int'
			{
				$current = grammarAccess.getBasicTypeAccess().getIntEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBasicTypeAccess().getIntEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='real'
			{
				$current = grammarAccess.getBasicTypeAccess().getRealEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getBasicTypeAccess().getRealEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='date'
			{
				$current = grammarAccess.getBasicTypeAccess().getDateEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getBasicTypeAccess().getDateEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='time'
			{
				$current = grammarAccess.getBasicTypeAccess().getTimeEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getBasicTypeAccess().getTimeEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='year'
			{
				$current = grammarAccess.getBasicTypeAccess().getYearEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getBasicTypeAccess().getYearEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='month'
			{
				$current = grammarAccess.getBasicTypeAccess().getMonthEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getBasicTypeAccess().getMonthEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='day'
			{
				$current = grammarAccess.getBasicTypeAccess().getDayEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getBasicTypeAccess().getDayEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='boolean'
			{
				$current = grammarAccess.getBasicTypeAccess().getBooleanEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getBasicTypeAccess().getBooleanEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='lat'
			{
				$current = grammarAccess.getBasicTypeAccess().getLatEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getBasicTypeAccess().getLatEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='long'
			{
				$current = grammarAccess.getBasicTypeAccess().getLongEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getBasicTypeAccess().getLongEnumLiteralDeclaration_11());
			}
		)
	)
;

// Rule StringOptionKey
ruleStringOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='casesensitive'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getCasesensitiveEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getStringOptionKeyAccess().getCasesensitiveEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='null'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getNullEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getStringOptionKeyAccess().getNullEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='separator'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getSeparatorEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getStringOptionKeyAccess().getSeparatorEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='default'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getDefaultEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getStringOptionKeyAccess().getDefaultEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='regex'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getRegexEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getStringOptionKeyAccess().getRegexEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='flags'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getFlagsEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getStringOptionKeyAccess().getFlagsEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='decimalchar'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getDecimalcharEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getStringOptionKeyAccess().getDecimalcharEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='pattern'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getPatternEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getStringOptionKeyAccess().getPatternEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='format'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getFormatEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getStringOptionKeyAccess().getFormatEnumLiteralDeclaration_8());
			}
		)
	)
;

// Rule IntOptionKey
ruleIntOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='minLength'
			{
				$current = grammarAccess.getIntOptionKeyAccess().getMinLengthEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getIntOptionKeyAccess().getMinLengthEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='maxLength'
			{
				$current = grammarAccess.getIntOptionKeyAccess().getMaxLengthEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getIntOptionKeyAccess().getMaxLengthEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='min'
			{
				$current = grammarAccess.getIntOptionKeyAccess().getMinEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getIntOptionKeyAccess().getMinEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='max'
			{
				$current = grammarAccess.getIntOptionKeyAccess().getMaxEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getIntOptionKeyAccess().getMaxEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='defaultvalue'
			{
				$current = grammarAccess.getIntOptionKeyAccess().getDefaultEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getIntOptionKeyAccess().getDefaultEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule DoubleOptionKey
ruleDoubleOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='minDouble'
			{
				$current = grammarAccess.getDoubleOptionKeyAccess().getMinEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDoubleOptionKeyAccess().getMinEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='maxDouble'
			{
				$current = grammarAccess.getDoubleOptionKeyAccess().getMaxEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDoubleOptionKeyAccess().getMaxEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='defaultvalueDouble'
			{
				$current = grammarAccess.getDoubleOptionKeyAccess().getDefaultEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDoubleOptionKeyAccess().getDefaultEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule BooleanOptionKey
ruleBooleanOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='nullable'
		{
			$current = grammarAccess.getBooleanOptionKeyAccess().getNullableEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getBooleanOptionKeyAccess().getNullableEnumLiteralDeclaration());
		}
	)
;

// Rule DataOptionKey
ruleDataOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='format'
			{
				$current = grammarAccess.getDataOptionKeyAccess().getFormatEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataOptionKeyAccess().getFormatEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='separator'
			{
				$current = grammarAccess.getDataOptionKeyAccess().getSeparatorEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataOptionKeyAccess().getSeparatorEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='header'
			{
				$current = grammarAccess.getDataOptionKeyAccess().getHeaderEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDataOptionKeyAccess().getHeaderEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='squema'
			{
				$current = grammarAccess.getDataOptionKeyAccess().getSquemaEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDataOptionKeyAccess().getSquemaEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule Format
ruleFormat returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='CSV'
			{
				$current = grammarAccess.getFormatAccess().getCSVEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getFormatAccess().getCSVEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='JSON'
			{
				$current = grammarAccess.getFormatAccess().getJSONEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getFormatAccess().getJSONEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='XML'
			{
				$current = grammarAccess.getFormatAccess().getXMLEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getFormatAccess().getXMLEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_DELETATION_MARK : 'REMOVE';

RULE_MODIFICATION_MARK : ('RENAME'|'RETYPE');

RULE_BOOLEAN : ('true'|'false');

RULE_DOUBLE : '-'? RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
