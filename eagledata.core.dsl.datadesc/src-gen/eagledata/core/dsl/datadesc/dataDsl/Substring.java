/**
 * generated by Xtext 2.9.2
 */
package eagledata.core.dsl.datadesc.dataDsl;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Substring</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link eagledata.core.dsl.datadesc.dataDsl.Substring#getTypeString <em>Type String</em>}</li>
 *   <li>{@link eagledata.core.dsl.datadesc.dataDsl.Substring#getMinlength <em>Minlength</em>}</li>
 *   <li>{@link eagledata.core.dsl.datadesc.dataDsl.Substring#getMaxlength <em>Maxlength</em>}</li>
 * </ul>
 *
 * @see eagledata.core.dsl.datadesc.dataDsl.DataDslPackage#getSubstring()
 * @model
 * @generated
 */
public interface Substring extends SubstringConcept
{
  /**
   * Returns the value of the '<em><b>Type String</b></em>' attribute.
   * The literals are from the enumeration {@link eagledata.core.dsl.datadesc.dataDsl.TypeString}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Type String</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type String</em>' attribute.
   * @see eagledata.core.dsl.datadesc.dataDsl.TypeString
   * @see #setTypeString(TypeString)
   * @see eagledata.core.dsl.datadesc.dataDsl.DataDslPackage#getSubstring_TypeString()
   * @model
   * @generated
   */
  TypeString getTypeString();

  /**
   * Sets the value of the '{@link eagledata.core.dsl.datadesc.dataDsl.Substring#getTypeString <em>Type String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Type String</em>' attribute.
   * @see eagledata.core.dsl.datadesc.dataDsl.TypeString
   * @see #getTypeString()
   * @generated
   */
  void setTypeString(TypeString value);

  /**
   * Returns the value of the '<em><b>Minlength</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Minlength</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Minlength</em>' attribute.
   * @see #setMinlength(int)
   * @see eagledata.core.dsl.datadesc.dataDsl.DataDslPackage#getSubstring_Minlength()
   * @model
   * @generated
   */
  int getMinlength();

  /**
   * Sets the value of the '{@link eagledata.core.dsl.datadesc.dataDsl.Substring#getMinlength <em>Minlength</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Minlength</em>' attribute.
   * @see #getMinlength()
   * @generated
   */
  void setMinlength(int value);

  /**
   * Returns the value of the '<em><b>Maxlength</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Maxlength</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Maxlength</em>' attribute.
   * @see #setMaxlength(int)
   * @see eagledata.core.dsl.datadesc.dataDsl.DataDslPackage#getSubstring_Maxlength()
   * @model
   * @generated
   */
  int getMaxlength();

  /**
   * Sets the value of the '{@link eagledata.core.dsl.datadesc.dataDsl.Substring#getMaxlength <em>Maxlength</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Maxlength</em>' attribute.
   * @see #getMaxlength()
   * @generated
   */
  void setMaxlength(int value);

} // Substring
