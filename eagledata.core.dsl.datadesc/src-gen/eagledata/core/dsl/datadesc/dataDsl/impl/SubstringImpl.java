/**
 * generated by Xtext 2.9.2
 */
package eagledata.core.dsl.datadesc.dataDsl.impl;

import eagledata.core.dsl.datadesc.dataDsl.DataDslPackage;
import eagledata.core.dsl.datadesc.dataDsl.Substring;
import eagledata.core.dsl.datadesc.dataDsl.TypeString;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Substring</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link eagledata.core.dsl.datadesc.dataDsl.impl.SubstringImpl#getTypeString <em>Type String</em>}</li>
 *   <li>{@link eagledata.core.dsl.datadesc.dataDsl.impl.SubstringImpl#getMinlength <em>Minlength</em>}</li>
 *   <li>{@link eagledata.core.dsl.datadesc.dataDsl.impl.SubstringImpl#getMaxlength <em>Maxlength</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SubstringImpl extends SubstringConceptImpl implements Substring
{
  /**
   * The default value of the '{@link #getTypeString() <em>Type String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeString()
   * @generated
   * @ordered
   */
  protected static final TypeString TYPE_STRING_EDEFAULT = TypeString.ANYCASE;

  /**
   * The cached value of the '{@link #getTypeString() <em>Type String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeString()
   * @generated
   * @ordered
   */
  protected TypeString typeString = TYPE_STRING_EDEFAULT;

  /**
   * The default value of the '{@link #getMinlength() <em>Minlength</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinlength()
   * @generated
   * @ordered
   */
  protected static final int MINLENGTH_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMinlength() <em>Minlength</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinlength()
   * @generated
   * @ordered
   */
  protected int minlength = MINLENGTH_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxlength() <em>Maxlength</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxlength()
   * @generated
   * @ordered
   */
  protected static final int MAXLENGTH_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMaxlength() <em>Maxlength</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxlength()
   * @generated
   * @ordered
   */
  protected int maxlength = MAXLENGTH_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SubstringImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DataDslPackage.Literals.SUBSTRING;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypeString getTypeString()
  {
    return typeString;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTypeString(TypeString newTypeString)
  {
    TypeString oldTypeString = typeString;
    typeString = newTypeString == null ? TYPE_STRING_EDEFAULT : newTypeString;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataDslPackage.SUBSTRING__TYPE_STRING, oldTypeString, typeString));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getMinlength()
  {
    return minlength;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMinlength(int newMinlength)
  {
    int oldMinlength = minlength;
    minlength = newMinlength;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataDslPackage.SUBSTRING__MINLENGTH, oldMinlength, minlength));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getMaxlength()
  {
    return maxlength;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaxlength(int newMaxlength)
  {
    int oldMaxlength = maxlength;
    maxlength = newMaxlength;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataDslPackage.SUBSTRING__MAXLENGTH, oldMaxlength, maxlength));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DataDslPackage.SUBSTRING__TYPE_STRING:
        return getTypeString();
      case DataDslPackage.SUBSTRING__MINLENGTH:
        return getMinlength();
      case DataDslPackage.SUBSTRING__MAXLENGTH:
        return getMaxlength();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DataDslPackage.SUBSTRING__TYPE_STRING:
        setTypeString((TypeString)newValue);
        return;
      case DataDslPackage.SUBSTRING__MINLENGTH:
        setMinlength((Integer)newValue);
        return;
      case DataDslPackage.SUBSTRING__MAXLENGTH:
        setMaxlength((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DataDslPackage.SUBSTRING__TYPE_STRING:
        setTypeString(TYPE_STRING_EDEFAULT);
        return;
      case DataDslPackage.SUBSTRING__MINLENGTH:
        setMinlength(MINLENGTH_EDEFAULT);
        return;
      case DataDslPackage.SUBSTRING__MAXLENGTH:
        setMaxlength(MAXLENGTH_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DataDslPackage.SUBSTRING__TYPE_STRING:
        return typeString != TYPE_STRING_EDEFAULT;
      case DataDslPackage.SUBSTRING__MINLENGTH:
        return minlength != MINLENGTH_EDEFAULT;
      case DataDslPackage.SUBSTRING__MAXLENGTH:
        return maxlength != MAXLENGTH_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (typeString: ");
    result.append(typeString);
    result.append(", minlength: ");
    result.append(minlength);
    result.append(", maxlength: ");
    result.append(maxlength);
    result.append(')');
    return result.toString();
  }

} //SubstringImpl
