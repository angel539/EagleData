/**
 * generated by Xtext 2.9.2
 */
package eagledata.core.dsl.datadesc.dataDsl.impl;

import eagledata.core.dsl.datadesc.dataDsl.AbstractDescription;
import eagledata.core.dsl.datadesc.dataDsl.BasicType;
import eagledata.core.dsl.datadesc.dataDsl.BooleanOption;
import eagledata.core.dsl.datadesc.dataDsl.BooleanOptionKey;
import eagledata.core.dsl.datadesc.dataDsl.Cardinality;
import eagledata.core.dsl.datadesc.dataDsl.CompositeNode;
import eagledata.core.dsl.datadesc.dataDsl.DataDescription;
import eagledata.core.dsl.datadesc.dataDsl.DataDslFactory;
import eagledata.core.dsl.datadesc.dataDsl.DataDslPackage;
import eagledata.core.dsl.datadesc.dataDsl.DataModel;
import eagledata.core.dsl.datadesc.dataDsl.DataModelElement;
import eagledata.core.dsl.datadesc.dataDsl.DataOption;
import eagledata.core.dsl.datadesc.dataDsl.DataTypeRefinement;
import eagledata.core.dsl.datadesc.dataDsl.DoubleOption;
import eagledata.core.dsl.datadesc.dataDsl.DoubleOptionKey;
import eagledata.core.dsl.datadesc.dataDsl.Enumeration;
import eagledata.core.dsl.datadesc.dataDsl.Fragment;
import eagledata.core.dsl.datadesc.dataDsl.FragmentNode;
import eagledata.core.dsl.datadesc.dataDsl.Import;
import eagledata.core.dsl.datadesc.dataDsl.IntOption;
import eagledata.core.dsl.datadesc.dataDsl.IntOptionKey;
import eagledata.core.dsl.datadesc.dataDsl.ListQualifiedNameOption;
import eagledata.core.dsl.datadesc.dataDsl.ListQualifiedNameOptionKey;
import eagledata.core.dsl.datadesc.dataDsl.Node;
import eagledata.core.dsl.datadesc.dataDsl.Option;
import eagledata.core.dsl.datadesc.dataDsl.PrimitiveNode;
import eagledata.core.dsl.datadesc.dataDsl.SpecificationElement;
import eagledata.core.dsl.datadesc.dataDsl.StringOption;
import eagledata.core.dsl.datadesc.dataDsl.StringOptionKey;
import eagledata.core.dsl.datadesc.dataDsl.Substring;
import eagledata.core.dsl.datadesc.dataDsl.SubstringConcept;
import eagledata.core.dsl.datadesc.dataDsl.Tag;
import eagledata.core.dsl.datadesc.dataDsl.TypeCharacter;
import eagledata.core.dsl.datadesc.dataDsl.TypeSpecification;
import eagledata.core.dsl.datadesc.dataDsl.TypeString;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DataDslPackageImpl extends EPackageImpl implements DataDslPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataModelElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass packageEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tagEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass specificationElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeSpecificationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractDescriptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass substringConceptEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass substringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass characterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass nodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass compositeNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fragmentNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primitiveNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cardinalityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataDescriptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fragmentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataTypeRefinementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumerationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass optionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stringOptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass intOptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass doubleOptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass booleanOptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listQualifiedNameOptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataOptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum typeCharacterEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum typeStringEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum basicTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum stringOptionKeyEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum intOptionKeyEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum doubleOptionKeyEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum booleanOptionKeyEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum listQualifiedNameOptionKeyEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see eagledata.core.dsl.datadesc.dataDsl.DataDslPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private DataDslPackageImpl()
  {
    super(eNS_URI, DataDslFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link DataDslPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static DataDslPackage init()
  {
    if (isInited) return (DataDslPackage)EPackage.Registry.INSTANCE.getEPackage(DataDslPackage.eNS_URI);

    // Obtain or create and register package
    DataDslPackageImpl theDataDslPackage = (DataDslPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof DataDslPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new DataDslPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theDataDslPackage.createPackageContents();

    // Initialize created meta-data
    theDataDslPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theDataDslPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(DataDslPackage.eNS_URI, theDataDslPackage);
    return theDataDslPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDataModel()
  {
    return dataModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDataModel_Elements()
  {
    return (EReference)dataModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getImport()
  {
    return importEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getImport_ImportedNamespace()
  {
    return (EAttribute)importEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDataModelElement()
  {
    return dataModelElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPackage()
  {
    return packageEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPackage_Tags()
  {
    return (EReference)packageEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPackage_Name()
  {
    return (EAttribute)packageEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPackage_Elements()
  {
    return (EReference)packageEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTag()
  {
    return tagEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTag_Tag()
  {
    return (EAttribute)tagEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSpecificationElement()
  {
    return specificationElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSpecificationElement_Name()
  {
    return (EAttribute)specificationElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypeSpecification()
  {
    return typeSpecificationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAbstractDescription()
  {
    return abstractDescriptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAbstractDescription_Fragments()
  {
    return (EReference)abstractDescriptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAbstractDescription_Nodes()
  {
    return (EReference)abstractDescriptionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSubstringConcept()
  {
    return substringConceptEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSubstringConcept_Name()
  {
    return (EAttribute)substringConceptEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSubstring()
  {
    return substringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSubstring_TypeString()
  {
    return (EAttribute)substringEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSubstring_Minlength()
  {
    return (EAttribute)substringEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSubstring_Maxlength()
  {
    return (EAttribute)substringEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCharacter()
  {
    return characterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCharacter_TypeCharacter()
  {
    return (EAttribute)characterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCharacter_Value()
  {
    return (EAttribute)characterEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNode()
  {
    return nodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getNode_Name()
  {
    return (EAttribute)nodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNode_Cardinality()
  {
    return (EReference)nodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNode_Options()
  {
    return (EReference)nodeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCompositeNode()
  {
    return compositeNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCompositeNode_Key()
  {
    return (EAttribute)compositeNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCompositeNode_Unique()
  {
    return (EAttribute)compositeNodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCompositeNode_Type()
  {
    return (EReference)compositeNodeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFragmentNode()
  {
    return fragmentNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFragmentNode_Type()
  {
    return (EReference)fragmentNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPrimitiveNode()
  {
    return primitiveNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPrimitiveNode_Key()
  {
    return (EAttribute)primitiveNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPrimitiveNode_Unique()
  {
    return (EAttribute)primitiveNodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPrimitiveNode_Type()
  {
    return (EAttribute)primitiveNodeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCardinality()
  {
    return cardinalityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCardinality_Min()
  {
    return (EAttribute)cardinalityEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCardinality_Max()
  {
    return (EAttribute)cardinalityEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDataDescription()
  {
    return dataDescriptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDataDescription_Format()
  {
    return (EAttribute)dataDescriptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDataDescription_Options()
  {
    return (EReference)dataDescriptionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFragment()
  {
    return fragmentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDataTypeRefinement()
  {
    return dataTypeRefinementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDataTypeRefinement_Refine()
  {
    return (EAttribute)dataTypeRefinementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDataTypeRefinement_Subsequences()
  {
    return (EReference)dataTypeRefinementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDataTypeRefinement_Options()
  {
    return (EReference)dataTypeRefinementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEnumeration()
  {
    return enumerationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEnumeration_Values()
  {
    return (EAttribute)enumerationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOption()
  {
    return optionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStringOption()
  {
    return stringOptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getStringOption_Key()
  {
    return (EAttribute)stringOptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getStringOption_Value()
  {
    return (EAttribute)stringOptionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getIntOption()
  {
    return intOptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getIntOption_Key()
  {
    return (EAttribute)intOptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getIntOption_Value()
  {
    return (EAttribute)intOptionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDoubleOption()
  {
    return doubleOptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDoubleOption_Key()
  {
    return (EAttribute)doubleOptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDoubleOption_Value()
  {
    return (EAttribute)doubleOptionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBooleanOption()
  {
    return booleanOptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getBooleanOption_Key()
  {
    return (EAttribute)booleanOptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getBooleanOption_Value()
  {
    return (EAttribute)booleanOptionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getListQualifiedNameOption()
  {
    return listQualifiedNameOptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getListQualifiedNameOption_Key()
  {
    return (EAttribute)listQualifiedNameOptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getListQualifiedNameOption_Fragments()
  {
    return (EReference)listQualifiedNameOptionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDataOption()
  {
    return dataOptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDataOption_Key()
  {
    return (EAttribute)dataOptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDataOption_Value()
  {
    return (EAttribute)dataOptionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getTypeCharacter()
  {
    return typeCharacterEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getTypeString()
  {
    return typeStringEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getBasicType()
  {
    return basicTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getStringOptionKey()
  {
    return stringOptionKeyEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getIntOptionKey()
  {
    return intOptionKeyEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getDoubleOptionKey()
  {
    return doubleOptionKeyEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getBooleanOptionKey()
  {
    return booleanOptionKeyEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getListQualifiedNameOptionKey()
  {
    return listQualifiedNameOptionKeyEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataDslFactory getDataDslFactory()
  {
    return (DataDslFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    dataModelEClass = createEClass(DATA_MODEL);
    createEReference(dataModelEClass, DATA_MODEL__ELEMENTS);

    importEClass = createEClass(IMPORT);
    createEAttribute(importEClass, IMPORT__IMPORTED_NAMESPACE);

    dataModelElementEClass = createEClass(DATA_MODEL_ELEMENT);

    packageEClass = createEClass(PACKAGE);
    createEReference(packageEClass, PACKAGE__TAGS);
    createEAttribute(packageEClass, PACKAGE__NAME);
    createEReference(packageEClass, PACKAGE__ELEMENTS);

    tagEClass = createEClass(TAG);
    createEAttribute(tagEClass, TAG__TAG);

    specificationElementEClass = createEClass(SPECIFICATION_ELEMENT);
    createEAttribute(specificationElementEClass, SPECIFICATION_ELEMENT__NAME);

    typeSpecificationEClass = createEClass(TYPE_SPECIFICATION);

    abstractDescriptionEClass = createEClass(ABSTRACT_DESCRIPTION);
    createEReference(abstractDescriptionEClass, ABSTRACT_DESCRIPTION__FRAGMENTS);
    createEReference(abstractDescriptionEClass, ABSTRACT_DESCRIPTION__NODES);

    substringConceptEClass = createEClass(SUBSTRING_CONCEPT);
    createEAttribute(substringConceptEClass, SUBSTRING_CONCEPT__NAME);

    substringEClass = createEClass(SUBSTRING);
    createEAttribute(substringEClass, SUBSTRING__TYPE_STRING);
    createEAttribute(substringEClass, SUBSTRING__MINLENGTH);
    createEAttribute(substringEClass, SUBSTRING__MAXLENGTH);

    characterEClass = createEClass(CHARACTER);
    createEAttribute(characterEClass, CHARACTER__TYPE_CHARACTER);
    createEAttribute(characterEClass, CHARACTER__VALUE);

    nodeEClass = createEClass(NODE);
    createEAttribute(nodeEClass, NODE__NAME);
    createEReference(nodeEClass, NODE__CARDINALITY);
    createEReference(nodeEClass, NODE__OPTIONS);

    compositeNodeEClass = createEClass(COMPOSITE_NODE);
    createEAttribute(compositeNodeEClass, COMPOSITE_NODE__KEY);
    createEAttribute(compositeNodeEClass, COMPOSITE_NODE__UNIQUE);
    createEReference(compositeNodeEClass, COMPOSITE_NODE__TYPE);

    fragmentNodeEClass = createEClass(FRAGMENT_NODE);
    createEReference(fragmentNodeEClass, FRAGMENT_NODE__TYPE);

    primitiveNodeEClass = createEClass(PRIMITIVE_NODE);
    createEAttribute(primitiveNodeEClass, PRIMITIVE_NODE__KEY);
    createEAttribute(primitiveNodeEClass, PRIMITIVE_NODE__UNIQUE);
    createEAttribute(primitiveNodeEClass, PRIMITIVE_NODE__TYPE);

    cardinalityEClass = createEClass(CARDINALITY);
    createEAttribute(cardinalityEClass, CARDINALITY__MIN);
    createEAttribute(cardinalityEClass, CARDINALITY__MAX);

    dataDescriptionEClass = createEClass(DATA_DESCRIPTION);
    createEAttribute(dataDescriptionEClass, DATA_DESCRIPTION__FORMAT);
    createEReference(dataDescriptionEClass, DATA_DESCRIPTION__OPTIONS);

    fragmentEClass = createEClass(FRAGMENT);

    dataTypeRefinementEClass = createEClass(DATA_TYPE_REFINEMENT);
    createEAttribute(dataTypeRefinementEClass, DATA_TYPE_REFINEMENT__REFINE);
    createEReference(dataTypeRefinementEClass, DATA_TYPE_REFINEMENT__SUBSEQUENCES);
    createEReference(dataTypeRefinementEClass, DATA_TYPE_REFINEMENT__OPTIONS);

    enumerationEClass = createEClass(ENUMERATION);
    createEAttribute(enumerationEClass, ENUMERATION__VALUES);

    optionEClass = createEClass(OPTION);

    stringOptionEClass = createEClass(STRING_OPTION);
    createEAttribute(stringOptionEClass, STRING_OPTION__KEY);
    createEAttribute(stringOptionEClass, STRING_OPTION__VALUE);

    intOptionEClass = createEClass(INT_OPTION);
    createEAttribute(intOptionEClass, INT_OPTION__KEY);
    createEAttribute(intOptionEClass, INT_OPTION__VALUE);

    doubleOptionEClass = createEClass(DOUBLE_OPTION);
    createEAttribute(doubleOptionEClass, DOUBLE_OPTION__KEY);
    createEAttribute(doubleOptionEClass, DOUBLE_OPTION__VALUE);

    booleanOptionEClass = createEClass(BOOLEAN_OPTION);
    createEAttribute(booleanOptionEClass, BOOLEAN_OPTION__KEY);
    createEAttribute(booleanOptionEClass, BOOLEAN_OPTION__VALUE);

    listQualifiedNameOptionEClass = createEClass(LIST_QUALIFIED_NAME_OPTION);
    createEAttribute(listQualifiedNameOptionEClass, LIST_QUALIFIED_NAME_OPTION__KEY);
    createEReference(listQualifiedNameOptionEClass, LIST_QUALIFIED_NAME_OPTION__FRAGMENTS);

    dataOptionEClass = createEClass(DATA_OPTION);
    createEAttribute(dataOptionEClass, DATA_OPTION__KEY);
    createEAttribute(dataOptionEClass, DATA_OPTION__VALUE);

    // Create enums
    typeCharacterEEnum = createEEnum(TYPE_CHARACTER);
    typeStringEEnum = createEEnum(TYPE_STRING);
    basicTypeEEnum = createEEnum(BASIC_TYPE);
    stringOptionKeyEEnum = createEEnum(STRING_OPTION_KEY);
    intOptionKeyEEnum = createEEnum(INT_OPTION_KEY);
    doubleOptionKeyEEnum = createEEnum(DOUBLE_OPTION_KEY);
    booleanOptionKeyEEnum = createEEnum(BOOLEAN_OPTION_KEY);
    listQualifiedNameOptionKeyEEnum = createEEnum(LIST_QUALIFIED_NAME_OPTION_KEY);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    importEClass.getESuperTypes().add(this.getDataModelElement());
    packageEClass.getESuperTypes().add(this.getDataModelElement());
    specificationElementEClass.getESuperTypes().add(this.getDataModelElement());
    typeSpecificationEClass.getESuperTypes().add(this.getSpecificationElement());
    abstractDescriptionEClass.getESuperTypes().add(this.getSpecificationElement());
    substringEClass.getESuperTypes().add(this.getSubstringConcept());
    characterEClass.getESuperTypes().add(this.getSubstringConcept());
    compositeNodeEClass.getESuperTypes().add(this.getNode());
    fragmentNodeEClass.getESuperTypes().add(this.getNode());
    primitiveNodeEClass.getESuperTypes().add(this.getNode());
    dataDescriptionEClass.getESuperTypes().add(this.getAbstractDescription());
    fragmentEClass.getESuperTypes().add(this.getAbstractDescription());
    dataTypeRefinementEClass.getESuperTypes().add(this.getTypeSpecification());
    enumerationEClass.getESuperTypes().add(this.getTypeSpecification());
    stringOptionEClass.getESuperTypes().add(this.getOption());
    intOptionEClass.getESuperTypes().add(this.getOption());
    doubleOptionEClass.getESuperTypes().add(this.getOption());
    booleanOptionEClass.getESuperTypes().add(this.getOption());
    listQualifiedNameOptionEClass.getESuperTypes().add(this.getOption());

    // Initialize classes and features; add operations and parameters
    initEClass(dataModelEClass, DataModel.class, "DataModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDataModel_Elements(), this.getDataModelElement(), null, "elements", null, 0, -1, DataModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(importEClass, Import.class, "Import", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getImport_ImportedNamespace(), ecorePackage.getEString(), "importedNamespace", null, 0, 1, Import.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataModelElementEClass, DataModelElement.class, "DataModelElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(packageEClass, eagledata.core.dsl.datadesc.dataDsl.Package.class, "Package", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPackage_Tags(), this.getTag(), null, "tags", null, 0, -1, eagledata.core.dsl.datadesc.dataDsl.Package.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPackage_Name(), ecorePackage.getEString(), "name", null, 0, 1, eagledata.core.dsl.datadesc.dataDsl.Package.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPackage_Elements(), this.getSpecificationElement(), null, "elements", null, 0, -1, eagledata.core.dsl.datadesc.dataDsl.Package.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tagEClass, Tag.class, "Tag", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTag_Tag(), ecorePackage.getEString(), "tag", null, 0, 1, Tag.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(specificationElementEClass, SpecificationElement.class, "SpecificationElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSpecificationElement_Name(), ecorePackage.getEString(), "name", null, 0, 1, SpecificationElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeSpecificationEClass, TypeSpecification.class, "TypeSpecification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(abstractDescriptionEClass, AbstractDescription.class, "AbstractDescription", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAbstractDescription_Fragments(), this.getFragment(), null, "fragments", null, 0, -1, AbstractDescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAbstractDescription_Nodes(), this.getNode(), null, "nodes", null, 0, -1, AbstractDescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(substringConceptEClass, SubstringConcept.class, "SubstringConcept", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSubstringConcept_Name(), ecorePackage.getEString(), "name", null, 0, 1, SubstringConcept.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(substringEClass, Substring.class, "Substring", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSubstring_TypeString(), this.getTypeString(), "typeString", null, 0, 1, Substring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSubstring_Minlength(), ecorePackage.getEInt(), "minlength", null, 0, 1, Substring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSubstring_Maxlength(), ecorePackage.getEInt(), "maxlength", null, 0, 1, Substring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(characterEClass, eagledata.core.dsl.datadesc.dataDsl.Character.class, "Character", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCharacter_TypeCharacter(), this.getTypeCharacter(), "typeCharacter", null, 0, 1, eagledata.core.dsl.datadesc.dataDsl.Character.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCharacter_Value(), ecorePackage.getEString(), "value", null, 0, 1, eagledata.core.dsl.datadesc.dataDsl.Character.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(nodeEClass, Node.class, "Node", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNode_Name(), ecorePackage.getEString(), "name", null, 0, 1, Node.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNode_Cardinality(), this.getCardinality(), null, "cardinality", null, 0, 1, Node.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNode_Options(), this.getOption(), null, "options", null, 0, -1, Node.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(compositeNodeEClass, CompositeNode.class, "CompositeNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCompositeNode_Key(), ecorePackage.getEBoolean(), "key", null, 0, 1, CompositeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCompositeNode_Unique(), ecorePackage.getEBoolean(), "unique", null, 0, 1, CompositeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCompositeNode_Type(), this.getTypeSpecification(), null, "type", null, 0, 1, CompositeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fragmentNodeEClass, FragmentNode.class, "FragmentNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFragmentNode_Type(), this.getFragment(), null, "type", null, 0, 1, FragmentNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(primitiveNodeEClass, PrimitiveNode.class, "PrimitiveNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPrimitiveNode_Key(), ecorePackage.getEBoolean(), "key", null, 0, 1, PrimitiveNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPrimitiveNode_Unique(), ecorePackage.getEBoolean(), "unique", null, 0, 1, PrimitiveNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPrimitiveNode_Type(), this.getBasicType(), "type", null, 0, 1, PrimitiveNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cardinalityEClass, Cardinality.class, "Cardinality", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCardinality_Min(), ecorePackage.getEInt(), "min", null, 0, 1, Cardinality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCardinality_Max(), ecorePackage.getEInt(), "max", null, 0, 1, Cardinality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataDescriptionEClass, DataDescription.class, "DataDescription", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDataDescription_Format(), ecorePackage.getEString(), "format", null, 0, 1, DataDescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataDescription_Options(), this.getDataOption(), null, "options", null, 0, -1, DataDescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fragmentEClass, Fragment.class, "Fragment", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(dataTypeRefinementEClass, DataTypeRefinement.class, "DataTypeRefinement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDataTypeRefinement_Refine(), this.getBasicType(), "refine", null, 0, 1, DataTypeRefinement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataTypeRefinement_Subsequences(), this.getSubstringConcept(), null, "subsequences", null, 0, -1, DataTypeRefinement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataTypeRefinement_Options(), this.getOption(), null, "options", null, 0, -1, DataTypeRefinement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumerationEClass, Enumeration.class, "Enumeration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEnumeration_Values(), ecorePackage.getEString(), "values", null, 0, -1, Enumeration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(optionEClass, Option.class, "Option", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(stringOptionEClass, StringOption.class, "StringOption", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStringOption_Key(), this.getStringOptionKey(), "key", null, 0, 1, StringOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStringOption_Value(), ecorePackage.getEString(), "value", null, 0, 1, StringOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(intOptionEClass, IntOption.class, "IntOption", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getIntOption_Key(), this.getIntOptionKey(), "key", null, 0, 1, IntOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getIntOption_Value(), ecorePackage.getEInt(), "value", null, 0, 1, IntOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(doubleOptionEClass, DoubleOption.class, "DoubleOption", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDoubleOption_Key(), this.getDoubleOptionKey(), "key", null, 0, 1, DoubleOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDoubleOption_Value(), ecorePackage.getEDouble(), "value", null, 0, 1, DoubleOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(booleanOptionEClass, BooleanOption.class, "BooleanOption", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBooleanOption_Key(), this.getBooleanOptionKey(), "key", null, 0, 1, BooleanOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBooleanOption_Value(), ecorePackage.getEString(), "value", null, 0, 1, BooleanOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listQualifiedNameOptionEClass, ListQualifiedNameOption.class, "ListQualifiedNameOption", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getListQualifiedNameOption_Key(), this.getListQualifiedNameOptionKey(), "key", null, 0, 1, ListQualifiedNameOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getListQualifiedNameOption_Fragments(), this.getNode(), null, "fragments", null, 0, -1, ListQualifiedNameOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataOptionEClass, DataOption.class, "DataOption", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDataOption_Key(), ecorePackage.getEString(), "key", null, 0, 1, DataOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDataOption_Value(), ecorePackage.getEString(), "value", null, 0, 1, DataOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(typeCharacterEEnum, TypeCharacter.class, "TypeCharacter");
    addEEnumLiteral(typeCharacterEEnum, TypeCharacter.CHAR);
    addEEnumLiteral(typeCharacterEEnum, TypeCharacter.DIGIT);

    initEEnum(typeStringEEnum, TypeString.class, "TypeString");
    addEEnumLiteral(typeStringEEnum, TypeString.ANYCASE);
    addEEnumLiteral(typeStringEEnum, TypeString.LOWERCASE);
    addEEnumLiteral(typeStringEEnum, TypeString.UPPERCASE);
    addEEnumLiteral(typeStringEEnum, TypeString.NUMBERS);

    initEEnum(basicTypeEEnum, BasicType.class, "BasicType");
    addEEnumLiteral(basicTypeEEnum, BasicType.STRING);
    addEEnumLiteral(basicTypeEEnum, BasicType.URL);
    addEEnumLiteral(basicTypeEEnum, BasicType.INT);
    addEEnumLiteral(basicTypeEEnum, BasicType.LONG_INT);
    addEEnumLiteral(basicTypeEEnum, BasicType.REAL);
    addEEnumLiteral(basicTypeEEnum, BasicType.DATE);
    addEEnumLiteral(basicTypeEEnum, BasicType.TIME);
    addEEnumLiteral(basicTypeEEnum, BasicType.YEAR);
    addEEnumLiteral(basicTypeEEnum, BasicType.MONTH);
    addEEnumLiteral(basicTypeEEnum, BasicType.DAY);
    addEEnumLiteral(basicTypeEEnum, BasicType.BOOLEAN);
    addEEnumLiteral(basicTypeEEnum, BasicType.LAT);
    addEEnumLiteral(basicTypeEEnum, BasicType.LONG);
    addEEnumLiteral(basicTypeEEnum, BasicType.PERCENT);
    addEEnumLiteral(basicTypeEEnum, BasicType.EMAIL);
    addEEnumLiteral(basicTypeEEnum, BasicType.CURRENCY);
    addEEnumLiteral(basicTypeEEnum, BasicType.CREDITCARD);
    addEEnumLiteral(basicTypeEEnum, BasicType.IBAN);
    addEEnumLiteral(basicTypeEEnum, BasicType.ISBN);
    addEEnumLiteral(basicTypeEEnum, BasicType.ISSN);
    addEEnumLiteral(basicTypeEEnum, BasicType.INET);

    initEEnum(stringOptionKeyEEnum, StringOptionKey.class, "StringOptionKey");
    addEEnumLiteral(stringOptionKeyEEnum, StringOptionKey.NULL);
    addEEnumLiteral(stringOptionKeyEEnum, StringOptionKey.SEPARATOR);
    addEEnumLiteral(stringOptionKeyEEnum, StringOptionKey.DEFAULT);
    addEEnumLiteral(stringOptionKeyEEnum, StringOptionKey.REGEX);
    addEEnumLiteral(stringOptionKeyEEnum, StringOptionKey.FLAGS);
    addEEnumLiteral(stringOptionKeyEEnum, StringOptionKey.DECIMALCHAR);
    addEEnumLiteral(stringOptionKeyEEnum, StringOptionKey.PATTERN);
    addEEnumLiteral(stringOptionKeyEEnum, StringOptionKey.FORMAT);

    initEEnum(intOptionKeyEEnum, IntOptionKey.class, "IntOptionKey");
    addEEnumLiteral(intOptionKeyEEnum, IntOptionKey.MIN_LENGTH);
    addEEnumLiteral(intOptionKeyEEnum, IntOptionKey.MAX_LENGTH);
    addEEnumLiteral(intOptionKeyEEnum, IntOptionKey.MIN);
    addEEnumLiteral(intOptionKeyEEnum, IntOptionKey.MAX);
    addEEnumLiteral(intOptionKeyEEnum, IntOptionKey.DEFAULT);

    initEEnum(doubleOptionKeyEEnum, DoubleOptionKey.class, "DoubleOptionKey");
    addEEnumLiteral(doubleOptionKeyEEnum, DoubleOptionKey.MIN);
    addEEnumLiteral(doubleOptionKeyEEnum, DoubleOptionKey.MAX);
    addEEnumLiteral(doubleOptionKeyEEnum, DoubleOptionKey.DEFAULT);

    initEEnum(booleanOptionKeyEEnum, BooleanOptionKey.class, "BooleanOptionKey");
    addEEnumLiteral(booleanOptionKeyEEnum, BooleanOptionKey.NULLABLE);
    addEEnumLiteral(booleanOptionKeyEEnum, BooleanOptionKey.CASESENSITIVE);

    initEEnum(listQualifiedNameOptionKeyEEnum, ListQualifiedNameOptionKey.class, "ListQualifiedNameOptionKey");
    addEEnumLiteral(listQualifiedNameOptionKeyEEnum, ListQualifiedNameOptionKey.ORDER);

    // Create resource
    createResource(eNS_URI);
  }

} //DataDslPackageImpl
