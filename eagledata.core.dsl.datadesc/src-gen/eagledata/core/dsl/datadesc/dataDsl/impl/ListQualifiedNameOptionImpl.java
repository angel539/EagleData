/**
 * generated by Xtext 2.9.2
 */
package eagledata.core.dsl.datadesc.dataDsl.impl;

import eagledata.core.dsl.datadesc.dataDsl.DataDslPackage;
import eagledata.core.dsl.datadesc.dataDsl.ListQualifiedNameOption;
import eagledata.core.dsl.datadesc.dataDsl.ListQualifiedNameOptionKey;
import eagledata.core.dsl.datadesc.dataDsl.Node;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>List Qualified Name Option</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link eagledata.core.dsl.datadesc.dataDsl.impl.ListQualifiedNameOptionImpl#getKey <em>Key</em>}</li>
 *   <li>{@link eagledata.core.dsl.datadesc.dataDsl.impl.ListQualifiedNameOptionImpl#getFragments <em>Fragments</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ListQualifiedNameOptionImpl extends OptionImpl implements ListQualifiedNameOption
{
  /**
   * The default value of the '{@link #getKey() <em>Key</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKey()
   * @generated
   * @ordered
   */
  protected static final ListQualifiedNameOptionKey KEY_EDEFAULT = ListQualifiedNameOptionKey.ORDER;

  /**
   * The cached value of the '{@link #getKey() <em>Key</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKey()
   * @generated
   * @ordered
   */
  protected ListQualifiedNameOptionKey key = KEY_EDEFAULT;

  /**
   * The cached value of the '{@link #getFragments() <em>Fragments</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFragments()
   * @generated
   * @ordered
   */
  protected EList<Node> fragments;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ListQualifiedNameOptionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DataDslPackage.Literals.LIST_QUALIFIED_NAME_OPTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ListQualifiedNameOptionKey getKey()
  {
    return key;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setKey(ListQualifiedNameOptionKey newKey)
  {
    ListQualifiedNameOptionKey oldKey = key;
    key = newKey == null ? KEY_EDEFAULT : newKey;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataDslPackage.LIST_QUALIFIED_NAME_OPTION__KEY, oldKey, key));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Node> getFragments()
  {
    if (fragments == null)
    {
      fragments = new EObjectResolvingEList<Node>(Node.class, this, DataDslPackage.LIST_QUALIFIED_NAME_OPTION__FRAGMENTS);
    }
    return fragments;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DataDslPackage.LIST_QUALIFIED_NAME_OPTION__KEY:
        return getKey();
      case DataDslPackage.LIST_QUALIFIED_NAME_OPTION__FRAGMENTS:
        return getFragments();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DataDslPackage.LIST_QUALIFIED_NAME_OPTION__KEY:
        setKey((ListQualifiedNameOptionKey)newValue);
        return;
      case DataDslPackage.LIST_QUALIFIED_NAME_OPTION__FRAGMENTS:
        getFragments().clear();
        getFragments().addAll((Collection<? extends Node>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DataDslPackage.LIST_QUALIFIED_NAME_OPTION__KEY:
        setKey(KEY_EDEFAULT);
        return;
      case DataDslPackage.LIST_QUALIFIED_NAME_OPTION__FRAGMENTS:
        getFragments().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DataDslPackage.LIST_QUALIFIED_NAME_OPTION__KEY:
        return key != KEY_EDEFAULT;
      case DataDslPackage.LIST_QUALIFIED_NAME_OPTION__FRAGMENTS:
        return fragments != null && !fragments.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (key: ");
    result.append(key);
    result.append(')');
    return result.toString();
  }

} //ListQualifiedNameOptionImpl
