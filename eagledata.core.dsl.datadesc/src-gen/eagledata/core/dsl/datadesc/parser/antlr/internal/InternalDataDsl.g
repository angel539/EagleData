/*
 * generated by Xtext 2.9.2
 */
grammar InternalDataDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package eagledata.core.dsl.datadesc.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package eagledata.core.dsl.datadesc.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import eagledata.core.dsl.datadesc.services.DataDslGrammarAccess;

}

@parser::members {

 	private DataDslGrammarAccess grammarAccess;

    public InternalDataDslParser(TokenStream input, DataDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DataModel";
   	}

   	@Override
   	protected DataDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDataModel
entryRuleDataModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataModelRule()); }
	iv_ruleDataModel=ruleDataModel
	{ $current=$iv_ruleDataModel.current; }
	EOF;

// Rule DataModel
ruleDataModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDataModelAccess().getDataModelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelAccess().getElementsDataModelElementParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleDataModelElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"eagledata.core.dsl.datadesc.DataDsl.DataModelElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelAccess().getElementsDataModelElementParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleDataModelElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"eagledata.core.dsl.datadesc.DataDsl.DataModelElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"eagledata.core.dsl.datadesc.DataDsl.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleDataModelElement
entryRuleDataModelElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataModelElementRule()); }
	iv_ruleDataModelElement=ruleDataModelElement
	{ $current=$iv_ruleDataModelElement.current; }
	EOF;

// Rule DataModelElement
ruleDataModelElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDataModelElementAccess().getImportParserRuleCall_0());
		}
		this_Import_0=ruleImport
		{
			$current = $this_Import_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataModelElementAccess().getPackageParserRuleCall_1());
		}
		this_Package_1=rulePackage
		{
			$current = $this_Package_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataModelElementAccess().getSpecificationElementParserRuleCall_2());
		}
		this_SpecificationElement_2=ruleSpecificationElement
		{
			$current = $this_SpecificationElement_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	iv_rulePackage=rulePackage
	{ $current=$iv_rulePackage.current; }
	EOF;

// Rule Package
rulePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageAccess().getTagsTagParserRuleCall_0_0_0());
					}
					lv_tags_0_0=ruleTag
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageRule());
						}
						add(
							$current,
							"tags",
							lv_tags_0_0,
							"eagledata.core.dsl.datadesc.DataDsl.Tag");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageAccess().getTagsTagParserRuleCall_0_1_0());
					}
					lv_tags_1_0=ruleTag
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageRule());
						}
						add(
							$current,
							"tags",
							lv_tags_1_0,
							"eagledata.core.dsl.datadesc.DataDsl.Tag");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_2='package'
		{
			newLeafNode(otherlv_2, grammarAccess.getPackageAccess().getPackageKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageAccess().getNameQualifiedNameParserRuleCall_2_0());
				}
				lv_name_3_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"eagledata.core.dsl.datadesc.DataDsl.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageAccess().getElementsSpecificationElementParserRuleCall_4_0());
				}
				lv_elements_5_0=ruleSpecificationElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageRule());
					}
					add(
						$current,
						"elements",
						lv_elements_5_0,
						"eagledata.core.dsl.datadesc.DataDsl.SpecificationElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageAccess().getElementsSpecificationElementParserRuleCall_5_0());
				}
				lv_elements_6_0=ruleSpecificationElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageRule());
					}
					add(
						$current,
						"elements",
						lv_elements_6_0,
						"eagledata.core.dsl.datadesc.DataDsl.SpecificationElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleTag
entryRuleTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTagRule()); }
	iv_ruleTag=ruleTag
	{ $current=$iv_ruleTag.current; }
	EOF;

// Rule Tag
ruleTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getTagAccess().getCommercialAtKeyword_0());
		}
		(
			(
				lv_tag_1_0=RULE_STRING
				{
					newLeafNode(lv_tag_1_0, grammarAccess.getTagAccess().getTagSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTagRule());
					}
					setWithLastConsumed(
						$current,
						"tag",
						lv_tag_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSpecificationElement
entryRuleSpecificationElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecificationElementRule()); }
	iv_ruleSpecificationElement=ruleSpecificationElement
	{ $current=$iv_ruleSpecificationElement.current; }
	EOF;

// Rule SpecificationElement
ruleSpecificationElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSpecificationElementAccess().getTypeSpecificationParserRuleCall_0());
		}
		this_TypeSpecification_0=ruleTypeSpecification
		{
			$current = $this_TypeSpecification_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSpecificationElementAccess().getAbstractDescriptionParserRuleCall_1());
		}
		this_AbstractDescription_1=ruleAbstractDescription
		{
			$current = $this_AbstractDescription_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeSpecification
entryRuleTypeSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSpecificationRule()); }
	iv_ruleTypeSpecification=ruleTypeSpecification
	{ $current=$iv_ruleTypeSpecification.current; }
	EOF;

// Rule TypeSpecification
ruleTypeSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeSpecificationAccess().getDataTypeRefinementParserRuleCall_0());
		}
		this_DataTypeRefinement_0=ruleDataTypeRefinement
		{
			$current = $this_DataTypeRefinement_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeSpecificationAccess().getEnumerationParserRuleCall_1());
		}
		this_Enumeration_1=ruleEnumeration
		{
			$current = $this_Enumeration_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAbstractDescription
entryRuleAbstractDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractDescriptionRule()); }
	iv_ruleAbstractDescription=ruleAbstractDescription
	{ $current=$iv_ruleAbstractDescription.current; }
	EOF;

// Rule AbstractDescription
ruleAbstractDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractDescriptionAccess().getDataDescriptionParserRuleCall_0());
		}
		this_DataDescription_0=ruleDataDescription
		{
			$current = $this_DataDescription_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractDescriptionAccess().getFragmentParserRuleCall_1());
		}
		this_Fragment_1=ruleFragment
		{
			$current = $this_Fragment_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractDescriptionAccess().getFeedParserRuleCall_2());
		}
		this_Feed_2=ruleFeed
		{
			$current = $this_Feed_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSubstringConcept
entryRuleSubstringConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubstringConceptRule()); }
	iv_ruleSubstringConcept=ruleSubstringConcept
	{ $current=$iv_ruleSubstringConcept.current; }
	EOF;

// Rule SubstringConcept
ruleSubstringConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSubstringConceptAccess().getCharacterParserRuleCall_0());
		}
		this_Character_0=ruleCharacter
		{
			$current = $this_Character_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSubstringConceptAccess().getSubstringParserRuleCall_1());
		}
		this_Substring_1=ruleSubstring
		{
			$current = $this_Substring_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSubstring
entryRuleSubstring returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubstringRule()); }
	iv_ruleSubstring=ruleSubstring
	{ $current=$iv_ruleSubstring.current; }
	EOF;

// Rule Substring
ruleSubstring returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSubstringAccess().getTypeStringTypeStringEnumRuleCall_0_0());
				}
				lv_typeString_0_0=ruleTypeString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubstringRule());
					}
					set(
						$current,
						"typeString",
						lv_typeString_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.TypeString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSubstringAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubstringRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getSubstringAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				lv_minlength_3_0=RULE_INT
				{
					newLeafNode(lv_minlength_3_0, grammarAccess.getSubstringAccess().getMinlengthINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubstringRule());
					}
					setWithLastConsumed(
						$current,
						"minlength",
						lv_minlength_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getSubstringAccess().getCommaKeyword_4());
		}
		(
			(
				lv_maxlength_5_0=RULE_INT
				{
					newLeafNode(lv_maxlength_5_0, grammarAccess.getSubstringAccess().getMaxlengthINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubstringRule());
					}
					setWithLastConsumed(
						$current,
						"maxlength",
						lv_maxlength_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getSubstringAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleCharacter
entryRuleCharacter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCharacterRule()); }
	iv_ruleCharacter=ruleCharacter
	{ $current=$iv_ruleCharacter.current; }
	EOF;

// Rule Character
ruleCharacter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCharacterAccess().getTypeCharacterTypeCharacterEnumRuleCall_0_0());
				}
				lv_typeCharacter_0_0=ruleTypeCharacter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharacterRule());
					}
					set(
						$current,
						"typeCharacter",
						lv_typeCharacter_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.TypeCharacter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCharacterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCharacterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getCharacterAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCharacterRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
	)
;

// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	iv_ruleNode=ruleNode
	{ $current=$iv_ruleNode.current; }
	EOF;

// Rule Node
ruleNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNodeAccess().getPrimitiveNodeParserRuleCall_0());
		}
		this_PrimitiveNode_0=rulePrimitiveNode
		{
			$current = $this_PrimitiveNode_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNodeAccess().getCompositeNodeParserRuleCall_1());
		}
		this_CompositeNode_1=ruleCompositeNode
		{
			$current = $this_CompositeNode_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNodeAccess().getFragmentNodeParserRuleCall_2());
		}
		this_FragmentNode_2=ruleFragmentNode
		{
			$current = $this_FragmentNode_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCompositeNode
entryRuleCompositeNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositeNodeRule()); }
	iv_ruleCompositeNode=ruleCompositeNode
	{ $current=$iv_ruleCompositeNode.current; }
	EOF;

// Rule CompositeNode
ruleCompositeNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_key_0_0='key'
					{
						newLeafNode(lv_key_0_0, grammarAccess.getCompositeNodeAccess().getKeyKeyKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCompositeNodeRule());
						}
						setWithLastConsumed($current, "key", true, "key");
					}
				)
			)
			    |
			(
				(
					lv_unique_1_0='unique'
					{
						newLeafNode(lv_unique_1_0, grammarAccess.getCompositeNodeAccess().getUniqueUniqueKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCompositeNodeRule());
						}
						setWithLastConsumed($current, "unique", true, "unique");
					}
				)
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompositeNodeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getCompositeNodeAccess().getTypeTypeSpecificationCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getCompositeNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompositeNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getCompositeNodeAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositeNodeAccess().getCardinalityCardinalityParserRuleCall_3_1_0());
					}
					lv_cardinality_5_0=ruleCardinality
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositeNodeRule());
						}
						set(
							$current,
							"cardinality",
							lv_cardinality_5_0,
							"eagledata.core.dsl.datadesc.DataDsl.Cardinality");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getCompositeNodeAccess().getRightSquareBracketKeyword_3_2());
			}
		)?
		(
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getCompositeNodeAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositeNodeAccess().getOptionsOptionParserRuleCall_4_1_0());
					}
					lv_options_8_0=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositeNodeRule());
						}
						add(
							$current,
							"options",
							lv_options_8_0,
							"eagledata.core.dsl.datadesc.DataDsl.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getCompositeNodeAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCompositeNodeAccess().getOptionsOptionParserRuleCall_4_2_1_0());
						}
						lv_options_10_0=ruleOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompositeNodeRule());
							}
							add(
								$current,
								"options",
								lv_options_10_0,
								"eagledata.core.dsl.datadesc.DataDsl.Option");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getCompositeNodeAccess().getRightParenthesisKeyword_4_3());
			}
		)?
	)
;

// Entry rule entryRuleFragmentNode
entryRuleFragmentNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFragmentNodeRule()); }
	iv_ruleFragmentNode=ruleFragmentNode
	{ $current=$iv_ruleFragmentNode.current; }
	EOF;

// Rule FragmentNode
ruleFragmentNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.'
		{
			newLeafNode(otherlv_0, grammarAccess.getFragmentNodeAccess().getFullStopKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFragmentNodeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFragmentNodeAccess().getTypeFragmentCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFragmentNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFragmentNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getFragmentNodeAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFragmentNodeAccess().getCardinalityCardinalityParserRuleCall_3_1_0());
					}
					lv_cardinality_4_0=ruleCardinality
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFragmentNodeRule());
						}
						set(
							$current,
							"cardinality",
							lv_cardinality_4_0,
							"eagledata.core.dsl.datadesc.DataDsl.Cardinality");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getFragmentNodeAccess().getRightSquareBracketKeyword_3_2());
			}
		)?
		(
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getFragmentNodeAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFragmentNodeAccess().getOptionsOptionParserRuleCall_4_1_0());
					}
					lv_options_7_0=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFragmentNodeRule());
						}
						add(
							$current,
							"options",
							lv_options_7_0,
							"eagledata.core.dsl.datadesc.DataDsl.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getFragmentNodeAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFragmentNodeAccess().getOptionsOptionParserRuleCall_4_2_1_0());
						}
						lv_options_9_0=ruleOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFragmentNodeRule());
							}
							add(
								$current,
								"options",
								lv_options_9_0,
								"eagledata.core.dsl.datadesc.DataDsl.Option");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getFragmentNodeAccess().getRightParenthesisKeyword_4_3());
			}
		)?
	)
;

// Entry rule entryRulePrimitiveNode
entryRulePrimitiveNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveNodeRule()); }
	iv_rulePrimitiveNode=rulePrimitiveNode
	{ $current=$iv_rulePrimitiveNode.current; }
	EOF;

// Rule PrimitiveNode
rulePrimitiveNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_key_0_0='key'
					{
						newLeafNode(lv_key_0_0, grammarAccess.getPrimitiveNodeAccess().getKeyKeyKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimitiveNodeRule());
						}
						setWithLastConsumed($current, "key", true, "key");
					}
				)
			)
			    |
			(
				(
					lv_unique_1_0='unique'
					{
						newLeafNode(lv_unique_1_0, grammarAccess.getPrimitiveNodeAccess().getUniqueUniqueKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimitiveNodeRule());
						}
						setWithLastConsumed($current, "unique", true, "unique");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimitiveNodeAccess().getTypeBasicTypeEnumRuleCall_1_0());
				}
				lv_type_2_0=ruleBasicType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimitiveNodeRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"eagledata.core.dsl.datadesc.DataDsl.BasicType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getPrimitiveNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimitiveNodeAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitiveNodeAccess().getCardinalityCardinalityParserRuleCall_3_1_0());
					}
					lv_cardinality_5_0=ruleCardinality
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitiveNodeRule());
						}
						set(
							$current,
							"cardinality",
							lv_cardinality_5_0,
							"eagledata.core.dsl.datadesc.DataDsl.Cardinality");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getPrimitiveNodeAccess().getRightSquareBracketKeyword_3_2());
			}
		)?
		(
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getPrimitiveNodeAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitiveNodeAccess().getOptionsOptionParserRuleCall_4_1_0());
					}
					lv_options_8_0=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitiveNodeRule());
						}
						add(
							$current,
							"options",
							lv_options_8_0,
							"eagledata.core.dsl.datadesc.DataDsl.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getPrimitiveNodeAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimitiveNodeAccess().getOptionsOptionParserRuleCall_4_2_1_0());
						}
						lv_options_10_0=ruleOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimitiveNodeRule());
							}
							add(
								$current,
								"options",
								lv_options_10_0,
								"eagledata.core.dsl.datadesc.DataDsl.Option");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getPrimitiveNodeAccess().getRightParenthesisKeyword_4_3());
			}
		)?
	)
;

// Entry rule entryRuleCardinality
entryRuleCardinality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCardinalityRule()); }
	iv_ruleCardinality=ruleCardinality
	{ $current=$iv_ruleCardinality.current; }
	EOF;

// Rule Cardinality
ruleCardinality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_min_0_0=RULE_CARDINALITY_SYMBOLS
				{
					newLeafNode(lv_min_0_0, grammarAccess.getCardinalityAccess().getMinCARDINALITY_SYMBOLSTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCardinalityRule());
					}
					setWithLastConsumed(
						$current,
						"min",
						lv_min_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.CARDINALITY_SYMBOLS");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getCardinalityAccess().getCommaKeyword_1_0());
			}
			(
				(
					lv_max_2_0=RULE_CARDINALITY_SYMBOLS
					{
						newLeafNode(lv_max_2_0, grammarAccess.getCardinalityAccess().getMaxCARDINALITY_SYMBOLSTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCardinalityRule());
						}
						setWithLastConsumed(
							$current,
							"max",
							lv_max_2_0,
							"eagledata.core.dsl.datadesc.DataDsl.CARDINALITY_SYMBOLS");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDataDescription
entryRuleDataDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataDescriptionRule()); }
	iv_ruleDataDescription=ruleDataDescription
	{ $current=$iv_ruleDataDescription.current; }
	EOF;

// Rule DataDescription
ruleDataDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='description'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataDescriptionAccess().getDescriptionKeyword_0());
		}
		(
			(
				lv_format_1_0=RULE_STRING
				{
					newLeafNode(lv_format_1_0, grammarAccess.getDataDescriptionAccess().getFormatSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataDescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"format",
						lv_format_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDataDescriptionAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataDescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getDataDescriptionAccess().getColonKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataDescriptionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataDescriptionAccess().getFragmentsFragmentCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getDataDescriptionAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDataDescriptionRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getDataDescriptionAccess().getFragmentsFragmentCrossReference_3_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getDataDescriptionAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataDescriptionAccess().getNodesNodeParserRuleCall_5_0_0());
					}
					lv_nodes_8_0=ruleNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataDescriptionRule());
						}
						add(
							$current,
							"nodes",
							lv_nodes_8_0,
							"eagledata.core.dsl.datadesc.DataDsl.Node");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDataDescriptionAccess().getNodesNodeParserRuleCall_5_1_0());
					}
					lv_nodes_9_0=ruleNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataDescriptionRule());
						}
						add(
							$current,
							"nodes",
							lv_nodes_9_0,
							"eagledata.core.dsl.datadesc.DataDsl.Node");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getDataDescriptionAccess().getRightCurlyBracketKeyword_6());
		}
		(
			otherlv_11='('
			{
				newLeafNode(otherlv_11, grammarAccess.getDataDescriptionAccess().getLeftParenthesisKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataDescriptionAccess().getOptionsOptionParserRuleCall_7_1_0());
					}
					lv_options_12_0=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataDescriptionRule());
						}
						add(
							$current,
							"options",
							lv_options_12_0,
							"eagledata.core.dsl.datadesc.DataDsl.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getDataDescriptionAccess().getCommaKeyword_7_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataDescriptionAccess().getOptionsOptionParserRuleCall_7_2_1_0());
						}
						lv_options_14_0=ruleOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataDescriptionRule());
							}
							add(
								$current,
								"options",
								lv_options_14_0,
								"eagledata.core.dsl.datadesc.DataDsl.Option");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15=')'
			{
				newLeafNode(otherlv_15, grammarAccess.getDataDescriptionAccess().getRightParenthesisKeyword_7_3());
			}
		)?
	)
;

// Entry rule entryRuleFragment
entryRuleFragment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFragmentRule()); }
	iv_ruleFragment=ruleFragment
	{ $current=$iv_ruleFragment.current; }
	EOF;

// Rule Fragment
ruleFragment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='fragment'
		{
			newLeafNode(otherlv_0, grammarAccess.getFragmentAccess().getFragmentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFragmentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFragmentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getFragmentAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFragmentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getFragmentAccess().getFragmentsFragmentCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getFragmentAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFragmentRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getFragmentAccess().getFragmentsFragmentCrossReference_2_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getFragmentAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFragmentAccess().getNodesNodeParserRuleCall_4_0());
				}
				lv_nodes_7_0=ruleNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFragmentRule());
					}
					add(
						$current,
						"nodes",
						lv_nodes_7_0,
						"eagledata.core.dsl.datadesc.DataDsl.Node");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFragmentAccess().getNodesNodeParserRuleCall_5_0());
				}
				lv_nodes_8_0=ruleNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFragmentRule());
					}
					add(
						$current,
						"nodes",
						lv_nodes_8_0,
						"eagledata.core.dsl.datadesc.DataDsl.Node");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getFragmentAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleFeed
entryRuleFeed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeedRule()); }
	iv_ruleFeed=ruleFeed
	{ $current=$iv_ruleFeed.current; }
	EOF;

// Rule Feed
ruleFeed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='feed'
		{
			newLeafNode(otherlv_0, grammarAccess.getFeedAccess().getFeedKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFeedAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeedRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getFeedAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeedRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFeedAccess().getDescriptionDataDescriptionCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getFeedAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				lv_paths_5_0=RULE_STRING
				{
					newLeafNode(lv_paths_5_0, grammarAccess.getFeedAccess().getPathsSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeedRule());
					}
					addWithLastConsumed(
						$current,
						"paths",
						lv_paths_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_paths_6_0=RULE_STRING
				{
					newLeafNode(lv_paths_6_0, grammarAccess.getFeedAccess().getPathsSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeedRule());
					}
					addWithLastConsumed(
						$current,
						"paths",
						lv_paths_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getFeedAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleDataTypeRefinement
entryRuleDataTypeRefinement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRefinementRule()); }
	iv_ruleDataTypeRefinement=ruleDataTypeRefinement
	{ $current=$iv_ruleDataTypeRefinement.current; }
	EOF;

// Rule DataTypeRefinement
ruleDataTypeRefinement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='datatype'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataTypeRefinementAccess().getDatatypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataTypeRefinementAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRefinementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataTypeRefinementAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataTypeRefinementAccess().getRefineBasicTypeEnumRuleCall_3_0());
				}
				lv_refine_3_0=ruleBasicType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataTypeRefinementRule());
					}
					set(
						$current,
						"refine",
						lv_refine_3_0,
						"eagledata.core.dsl.datadesc.DataDsl.BasicType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getDataTypeRefinementAccess().getLeftCurlyBracketKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDataTypeRefinementAccess().getSubsequencesSubstringConceptParserRuleCall_4_1_0_0());
						}
						lv_subsequences_5_0=ruleSubstringConcept
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataTypeRefinementRule());
							}
							add(
								$current,
								"subsequences",
								lv_subsequences_5_0,
								"eagledata.core.dsl.datadesc.DataDsl.SubstringConcept");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getDataTypeRefinementAccess().getSubsequencesSubstringConceptParserRuleCall_4_1_1_0());
						}
						lv_subsequences_6_0=ruleSubstringConcept
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataTypeRefinementRule());
							}
							add(
								$current,
								"subsequences",
								lv_subsequences_6_0,
								"eagledata.core.dsl.datadesc.DataDsl.SubstringConcept");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)?
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getDataTypeRefinementAccess().getRightCurlyBracketKeyword_4_2());
			}
		)?
		(
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getDataTypeRefinementAccess().getLeftParenthesisKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataTypeRefinementAccess().getOptionsOptionParserRuleCall_5_1_0());
					}
					lv_options_9_0=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataTypeRefinementRule());
						}
						add(
							$current,
							"options",
							lv_options_9_0,
							"eagledata.core.dsl.datadesc.DataDsl.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getDataTypeRefinementAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataTypeRefinementAccess().getOptionsOptionParserRuleCall_5_2_1_0());
						}
						lv_options_11_0=ruleOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataTypeRefinementRule());
							}
							add(
								$current,
								"options",
								lv_options_11_0,
								"eagledata.core.dsl.datadesc.DataDsl.Option");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getDataTypeRefinementAccess().getRightParenthesisKeyword_5_3());
			}
		)?
	)
;

// Entry rule entryRuleEnumeration
entryRuleEnumeration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationRule()); }
	iv_ruleEnumeration=ruleEnumeration
	{ $current=$iv_ruleEnumeration.current; }
	EOF;

// Rule Enumeration
ruleEnumeration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enumeration'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumerationAccess().getEnumerationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumerationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumerationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				lv_values_3_0=RULE_STRING
				{
					newLeafNode(lv_values_3_0, grammarAccess.getEnumerationAccess().getValuesSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationRule());
					}
					addWithLastConsumed(
						$current,
						"values",
						lv_values_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getEnumerationAccess().getCommaKeyword_4_0());
			}
			(
				(
					lv_values_5_0=RULE_STRING
					{
						newLeafNode(lv_values_5_0, grammarAccess.getEnumerationAccess().getValuesSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumerationRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getEnumerationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleOption
entryRuleOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionRule()); }
	iv_ruleOption=ruleOption
	{ $current=$iv_ruleOption.current; }
	EOF;

// Rule Option
ruleOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOptionAccess().getStringOptionParserRuleCall_0());
		}
		this_StringOption_0=ruleStringOption
		{
			$current = $this_StringOption_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getIntOptionParserRuleCall_1());
		}
		this_IntOption_1=ruleIntOption
		{
			$current = $this_IntOption_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getBooleanOptionParserRuleCall_2());
		}
		this_BooleanOption_2=ruleBooleanOption
		{
			$current = $this_BooleanOption_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getDoubleOptionParserRuleCall_3());
		}
		this_DoubleOption_3=ruleDoubleOption
		{
			$current = $this_DoubleOption_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getListQualifiedNameOptionParserRuleCall_4());
		}
		this_ListQualifiedNameOption_4=ruleListQualifiedNameOption
		{
			$current = $this_ListQualifiedNameOption_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStringOption
entryRuleStringOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringOptionRule()); }
	iv_ruleStringOption=ruleStringOption
	{ $current=$iv_ruleStringOption.current; }
	EOF;

// Rule StringOption
ruleStringOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStringOptionAccess().getKeyStringOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleStringOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.StringOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getStringOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getStringOptionAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringOptionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleIntOption
entryRuleIntOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntOptionRule()); }
	iv_ruleIntOption=ruleIntOption
	{ $current=$iv_ruleIntOption.current; }
	EOF;

// Rule IntOption
ruleIntOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIntOptionAccess().getKeyIntOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleIntOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.IntOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getIntOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getIntOptionAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntOptionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleDoubleOption
entryRuleDoubleOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoubleOptionRule()); }
	iv_ruleDoubleOption=ruleDoubleOption
	{ $current=$iv_ruleDoubleOption.current; }
	EOF;

// Rule DoubleOption
ruleDoubleOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDoubleOptionAccess().getKeyDoubleOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleDoubleOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoubleOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.DoubleOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getDoubleOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_DOUBLE
				{
					newLeafNode(lv_value_2_0, grammarAccess.getDoubleOptionAccess().getValueDOUBLETerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDoubleOptionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"eagledata.core.dsl.datadesc.DataDsl.DOUBLE");
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanOption
entryRuleBooleanOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanOptionRule()); }
	iv_ruleBooleanOption=ruleBooleanOption
	{ $current=$iv_ruleBooleanOption.current; }
	EOF;

// Rule BooleanOption
ruleBooleanOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanOptionAccess().getKeyBooleanOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleBooleanOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.BooleanOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_BOOLEAN
				{
					newLeafNode(lv_value_2_0, grammarAccess.getBooleanOptionAccess().getValueBOOLEANTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanOptionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"eagledata.core.dsl.datadesc.DataDsl.BOOLEAN");
				}
			)
		)
	)
;

// Entry rule entryRuleListQualifiedNameOption
entryRuleListQualifiedNameOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListQualifiedNameOptionRule()); }
	iv_ruleListQualifiedNameOption=ruleListQualifiedNameOption
	{ $current=$iv_ruleListQualifiedNameOption.current; }
	EOF;

// Rule ListQualifiedNameOption
ruleListQualifiedNameOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getListQualifiedNameOptionAccess().getKeyListQualifiedNameOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleListQualifiedNameOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListQualifiedNameOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.datadesc.DataDsl.ListQualifiedNameOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getListQualifiedNameOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListQualifiedNameOptionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getListQualifiedNameOptionAccess().getFragmentsNodeCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule TypeCharacter
ruleTypeCharacter returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='char'
			{
				$current = grammarAccess.getTypeCharacterAccess().getCharEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeCharacterAccess().getCharEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='digit'
			{
				$current = grammarAccess.getTypeCharacterAccess().getDigitEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeCharacterAccess().getDigitEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule TypeString
ruleTypeString returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='anycase_string'
			{
				$current = grammarAccess.getTypeStringAccess().getAnycaseEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeStringAccess().getAnycaseEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='lowercase_string'
			{
				$current = grammarAccess.getTypeStringAccess().getLowercaseEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeStringAccess().getLowercaseEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='uppercase_string'
			{
				$current = grammarAccess.getTypeStringAccess().getUppercaseEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTypeStringAccess().getUppercaseEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='digits'
			{
				$current = grammarAccess.getTypeStringAccess().getNumbersEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTypeStringAccess().getNumbersEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule BasicType
ruleBasicType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='String'
			{
				$current = grammarAccess.getBasicTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBasicTypeAccess().getStringEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Url'
			{
				$current = grammarAccess.getBasicTypeAccess().getUrlEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBasicTypeAccess().getUrlEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Int'
			{
				$current = grammarAccess.getBasicTypeAccess().getIntEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBasicTypeAccess().getIntEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='LongInt'
			{
				$current = grammarAccess.getBasicTypeAccess().getLongIntEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getBasicTypeAccess().getLongIntEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Real'
			{
				$current = grammarAccess.getBasicTypeAccess().getRealEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getBasicTypeAccess().getRealEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Date'
			{
				$current = grammarAccess.getBasicTypeAccess().getDateEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getBasicTypeAccess().getDateEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='Time'
			{
				$current = grammarAccess.getBasicTypeAccess().getTimeEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getBasicTypeAccess().getTimeEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='Year'
			{
				$current = grammarAccess.getBasicTypeAccess().getYearEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getBasicTypeAccess().getYearEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='Month'
			{
				$current = grammarAccess.getBasicTypeAccess().getMonthEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getBasicTypeAccess().getMonthEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='Day'
			{
				$current = grammarAccess.getBasicTypeAccess().getDayEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getBasicTypeAccess().getDayEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='Boolean'
			{
				$current = grammarAccess.getBasicTypeAccess().getBooleanEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getBasicTypeAccess().getBooleanEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='Lat'
			{
				$current = grammarAccess.getBasicTypeAccess().getLatEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getBasicTypeAccess().getLatEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='Long'
			{
				$current = grammarAccess.getBasicTypeAccess().getLongEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getBasicTypeAccess().getLongEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='Percent'
			{
				$current = grammarAccess.getBasicTypeAccess().getPercentEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getBasicTypeAccess().getPercentEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='Email'
			{
				$current = grammarAccess.getBasicTypeAccess().getEmailEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getBasicTypeAccess().getEmailEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='Currency'
			{
				$current = grammarAccess.getBasicTypeAccess().getCurrencyEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getBasicTypeAccess().getCurrencyEnumLiteralDeclaration_15());
			}
		)
		    |
		(
			enumLiteral_16='CreditCard'
			{
				$current = grammarAccess.getBasicTypeAccess().getCreditcardEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_16, grammarAccess.getBasicTypeAccess().getCreditcardEnumLiteralDeclaration_16());
			}
		)
		    |
		(
			enumLiteral_17='IBAN'
			{
				$current = grammarAccess.getBasicTypeAccess().getIBANEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_17, grammarAccess.getBasicTypeAccess().getIBANEnumLiteralDeclaration_17());
			}
		)
		    |
		(
			enumLiteral_18='ISBN'
			{
				$current = grammarAccess.getBasicTypeAccess().getISBNEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_18, grammarAccess.getBasicTypeAccess().getISBNEnumLiteralDeclaration_18());
			}
		)
		    |
		(
			enumLiteral_19='ISSN'
			{
				$current = grammarAccess.getBasicTypeAccess().getISSNEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_19, grammarAccess.getBasicTypeAccess().getISSNEnumLiteralDeclaration_19());
			}
		)
		    |
		(
			enumLiteral_20='Inet'
			{
				$current = grammarAccess.getBasicTypeAccess().getInetEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_20, grammarAccess.getBasicTypeAccess().getInetEnumLiteralDeclaration_20());
			}
		)
	)
;

// Rule StringOptionKey
ruleStringOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='null'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getNullEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getStringOptionKeyAccess().getNullEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='separator'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getSeparatorEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getStringOptionKeyAccess().getSeparatorEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='default'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getDefaultEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getStringOptionKeyAccess().getDefaultEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='regex'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getRegexEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getStringOptionKeyAccess().getRegexEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='flags'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getFlagsEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getStringOptionKeyAccess().getFlagsEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='decimalchar'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getDecimalcharEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getStringOptionKeyAccess().getDecimalcharEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='pattern'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getPatternEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getStringOptionKeyAccess().getPatternEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='format'
			{
				$current = grammarAccess.getStringOptionKeyAccess().getFormatEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getStringOptionKeyAccess().getFormatEnumLiteralDeclaration_7());
			}
		)
	)
;

// Rule IntOptionKey
ruleIntOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='minLength'
			{
				$current = grammarAccess.getIntOptionKeyAccess().getMinLengthEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getIntOptionKeyAccess().getMinLengthEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='maxLength'
			{
				$current = grammarAccess.getIntOptionKeyAccess().getMaxLengthEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getIntOptionKeyAccess().getMaxLengthEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='min'
			{
				$current = grammarAccess.getIntOptionKeyAccess().getMinEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getIntOptionKeyAccess().getMinEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='max'
			{
				$current = grammarAccess.getIntOptionKeyAccess().getMaxEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getIntOptionKeyAccess().getMaxEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='defaultvalue'
			{
				$current = grammarAccess.getIntOptionKeyAccess().getDefaultEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getIntOptionKeyAccess().getDefaultEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule DoubleOptionKey
ruleDoubleOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='minDouble'
			{
				$current = grammarAccess.getDoubleOptionKeyAccess().getMinEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDoubleOptionKeyAccess().getMinEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='maxDouble'
			{
				$current = grammarAccess.getDoubleOptionKeyAccess().getMaxEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDoubleOptionKeyAccess().getMaxEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='defaultvalueDouble'
			{
				$current = grammarAccess.getDoubleOptionKeyAccess().getDefaultEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDoubleOptionKeyAccess().getDefaultEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule BooleanOptionKey
ruleBooleanOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='nullable'
			{
				$current = grammarAccess.getBooleanOptionKeyAccess().getNullableEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBooleanOptionKeyAccess().getNullableEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='casesensitive'
			{
				$current = grammarAccess.getBooleanOptionKeyAccess().getCasesensitiveEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBooleanOptionKeyAccess().getCasesensitiveEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ListQualifiedNameOptionKey
ruleListQualifiedNameOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='order'
		{
			$current = grammarAccess.getListQualifiedNameOptionKeyAccess().getOrderEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getListQualifiedNameOptionKeyAccess().getOrderEnumLiteralDeclaration());
		}
	)
;

RULE_BOOLEAN : ('true'|'false');

RULE_CARDINALITY_SYMBOLS : ('0'|'1'|'2'|'-1');

RULE_DOUBLE : '-'? RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
