/*
 * generated by Xtext 2.9.1
 */
grammar InternalDataDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package eagledata.core.dsl.datadsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package eagledata.core.dsl.datadsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import eagledata.core.dsl.datadsl.services.DataDslGrammarAccess;

}
@parser::members {
	private DataDslGrammarAccess grammarAccess;

	public void setGrammarAccess(DataDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDataModel
entryRuleDataModel
:
{ before(grammarAccess.getDataModelRule()); }
	 ruleDataModel
{ after(grammarAccess.getDataModelRule()); } 
	 EOF 
;

// Rule DataModel
ruleDataModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataModelAccess().getGroup()); }
		(rule__DataModel__Group__0)
		{ after(grammarAccess.getDataModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataDescription
entryRuleDataDescription
:
{ before(grammarAccess.getDataDescriptionRule()); }
	 ruleDataDescription
{ after(grammarAccess.getDataDescriptionRule()); } 
	 EOF 
;

// Rule DataDescription
ruleDataDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataDescriptionAccess().getAlternatives()); }
		(rule__DataDescription__Alternatives)
		{ after(grammarAccess.getDataDescriptionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataSource
entryRuleDataSource
:
{ before(grammarAccess.getDataSourceRule()); }
	 ruleDataSource
{ after(grammarAccess.getDataSourceRule()); } 
	 EOF 
;

// Rule DataSource
ruleDataSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataSourceAccess().getGroup()); }
		(rule__DataSource__Group__0)
		{ after(grammarAccess.getDataSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataFragment
entryRuleDataFragment
:
{ before(grammarAccess.getDataFragmentRule()); }
	 ruleDataFragment
{ after(grammarAccess.getDataFragmentRule()); } 
	 EOF 
;

// Rule DataFragment
ruleDataFragment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataFragmentAccess().getGroup()); }
		(rule__DataFragment__Group__0)
		{ after(grammarAccess.getDataFragmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormatSpecification
entryRuleFormatSpecification
:
{ before(grammarAccess.getFormatSpecificationRule()); }
	 ruleFormatSpecification
{ after(grammarAccess.getFormatSpecificationRule()); } 
	 EOF 
;

// Rule FormatSpecification
ruleFormatSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormatSpecificationAccess().getAlternatives()); }
		(rule__FormatSpecification__Alternatives)
		{ after(grammarAccess.getFormatSpecificationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOption
entryRuleOption
:
{ before(grammarAccess.getOptionRule()); }
	 ruleOption
{ after(grammarAccess.getOptionRule()); } 
	 EOF 
;

// Rule Option
ruleOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOptionAccess().getGroup()); }
		(rule__Option__Group__0)
		{ after(grammarAccess.getOptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNode
entryRuleNode
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeAccess().getAlternatives()); }
		(rule__Node__Alternatives)
		{ after(grammarAccess.getNodeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositeNode
entryRuleCompositeNode
:
{ before(grammarAccess.getCompositeNodeRule()); }
	 ruleCompositeNode
{ after(grammarAccess.getCompositeNodeRule()); } 
	 EOF 
;

// Rule CompositeNode
ruleCompositeNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositeNodeAccess().getGroup()); }
		(rule__CompositeNode__Group__0)
		{ after(grammarAccess.getCompositeNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeafNode
entryRuleLeafNode
:
{ before(grammarAccess.getLeafNodeRule()); }
	 ruleLeafNode
{ after(grammarAccess.getLeafNodeRule()); } 
	 EOF 
;

// Rule LeafNode
ruleLeafNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeafNodeAccess().getGroup()); }
		(rule__LeafNode__Group__0)
		{ after(grammarAccess.getLeafNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSpecification
entryRuleTypeSpecification
:
{ before(grammarAccess.getTypeSpecificationRule()); }
	 ruleTypeSpecification
{ after(grammarAccess.getTypeSpecificationRule()); } 
	 EOF 
;

// Rule TypeSpecification
ruleTypeSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSpecificationAccess().getAlternatives()); }
		(rule__TypeSpecification__Alternatives)
		{ after(grammarAccess.getTypeSpecificationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReference
entryRuleReference
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceAccess().getGroup()); }
		(rule__Reference__Group__0)
		{ after(grammarAccess.getReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule FormatKind
ruleFormatKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormatKindAccess().getAlternatives()); }
		(rule__FormatKind__Alternatives)
		{ after(grammarAccess.getFormatKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TypeKind
ruleTypeKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeKindAccess().getAlternatives()); }
		(rule__TypeKind__Alternatives)
		{ after(grammarAccess.getTypeKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDescription__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataDescriptionAccess().getDataSourceParserRuleCall_0()); }
		ruleDataSource
		{ after(grammarAccess.getDataDescriptionAccess().getDataSourceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataDescriptionAccess().getDataFragmentParserRuleCall_1()); }
		ruleDataFragment
		{ after(grammarAccess.getDataDescriptionAccess().getDataFragmentParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormatSpecification__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormatSpecificationAccess().getSpecialFormatAssignment_0()); }
		(rule__FormatSpecification__SpecialFormatAssignment_0)
		{ after(grammarAccess.getFormatSpecificationAccess().getSpecialFormatAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getFormatSpecificationAccess().getFormatAssignment_1()); }
		(rule__FormatSpecification__FormatAssignment_1)
		{ after(grammarAccess.getFormatSpecificationAccess().getFormatAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getCompositeNodeParserRuleCall_0()); }
		ruleCompositeNode
		{ after(grammarAccess.getNodeAccess().getCompositeNodeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeAccess().getLeafNodeParserRuleCall_1()); }
		ruleLeafNode
		{ after(grammarAccess.getNodeAccess().getLeafNodeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecification__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecificationAccess().getDataTypeParserRuleCall_0()); }
		ruleDataType
		{ after(grammarAccess.getTypeSpecificationAccess().getDataTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSpecificationAccess().getReferenceParserRuleCall_1()); }
		ruleReference
		{ after(grammarAccess.getTypeSpecificationAccess().getReferenceParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getSpecialTypeAssignment_1_0()); }
		(rule__DataType__SpecialTypeAssignment_1_0)
		{ after(grammarAccess.getDataTypeAccess().getSpecialTypeAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_1_1()); }
		(rule__DataType__TypeAssignment_1_1)
		{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormatKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormatKindAccess().getCSVEnumLiteralDeclaration_0()); }
		('CSV')
		{ after(grammarAccess.getFormatKindAccess().getCSVEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getFormatKindAccess().getJSONEnumLiteralDeclaration_1()); }
		('JSON')
		{ after(grammarAccess.getFormatKindAccess().getJSONEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getFormatKindAccess().getXMLEnumLiteralDeclaration_2()); }
		('XML')
		{ after(grammarAccess.getFormatKindAccess().getXMLEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeKindAccess().getStringEnumLiteralDeclaration_0()); }
		('string')
		{ after(grammarAccess.getTypeKindAccess().getStringEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getNumeralEnumLiteralDeclaration_1()); }
		('numeral')
		{ after(grammarAccess.getTypeKindAccess().getNumeralEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getDateEnumLiteralDeclaration_2()); }
		('date')
		{ after(grammarAccess.getTypeKindAccess().getDateEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getTimeEnumLiteralDeclaration_3()); }
		('time')
		{ after(grammarAccess.getTypeKindAccess().getTimeEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getYearEnumLiteralDeclaration_4()); }
		('year')
		{ after(grammarAccess.getTypeKindAccess().getYearEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getMonthEnumLiteralDeclaration_5()); }
		('month')
		{ after(grammarAccess.getTypeKindAccess().getMonthEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getDayEnumLiteralDeclaration_6()); }
		('day')
		{ after(grammarAccess.getTypeKindAccess().getDayEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getBooleanEnumLiteralDeclaration_7()); }
		('boolean')
		{ after(grammarAccess.getTypeKindAccess().getBooleanEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getPlaceEnumLiteralDeclaration_8()); }
		('place')
		{ after(grammarAccess.getTypeKindAccess().getPlaceEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getLatitudeEnumLiteralDeclaration_9()); }
		('latitude')
		{ after(grammarAccess.getTypeKindAccess().getLatitudeEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getLongitudeEnumLiteralDeclaration_10()); }
		('longitude')
		{ after(grammarAccess.getTypeKindAccess().getLongitudeEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getUTMeEnumLiteralDeclaration_11()); }
		('UTMe')
		{ after(grammarAccess.getTypeKindAccess().getUTMeEnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getUTMnEnumLiteralDeclaration_12()); }
		('UTMn')
		{ after(grammarAccess.getTypeKindAccess().getUTMnEnumLiteralDeclaration_12()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getUTMzEnumLiteralDeclaration_13()); }
		('UTMz')
		{ after(grammarAccess.getTypeKindAccess().getUTMzEnumLiteralDeclaration_13()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getUTMHemiEnumLiteralDeclaration_14()); }
		('UTMHemi')
		{ after(grammarAccess.getTypeKindAccess().getUTMHemiEnumLiteralDeclaration_14()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getNameEnumLiteralDeclaration_15()); }
		('name')
		{ after(grammarAccess.getTypeKindAccess().getNameEnumLiteralDeclaration_15()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getFamilynameEnumLiteralDeclaration_16()); }
		('familyname')
		{ after(grammarAccess.getTypeKindAccess().getFamilynameEnumLiteralDeclaration_16()); }
	)
	|
	(
		{ before(grammarAccess.getTypeKindAccess().getPersonalIDEnumLiteralDeclaration_17()); }
		('personalID')
		{ after(grammarAccess.getTypeKindAccess().getPersonalIDEnumLiteralDeclaration_17()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__0__Impl
	rule__DataModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getDataModelAction_0()); }
	()
	{ after(grammarAccess.getDataModelAccess().getDataModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__1__Impl
	rule__DataModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getGroup_1()); }
	(rule__DataModel__Group_1__0)?
	{ after(grammarAccess.getDataModelAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__2__Impl
	rule__DataModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__3__Impl
	rule__DataModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getDescriptionsAssignment_3()); }
	(rule__DataModel__DescriptionsAssignment_3)
	{ after(grammarAccess.getDataModelAccess().getDescriptionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__4__Impl
	rule__DataModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getGroup_4()); }
	(rule__DataModel__Group_4__0)*
	{ after(grammarAccess.getDataModelAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group_1__0__Impl
	rule__DataModel__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getImportKeyword_1_0()); }
	'import'
	{ after(grammarAccess.getDataModelAccess().getImportKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group_1__1__Impl
	rule__DataModel__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getImportURIAssignment_1_1()); }
	(rule__DataModel__ImportURIAssignment_1_1)
	{ after(grammarAccess.getDataModelAccess().getImportURIAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getGroup_1_2()); }
	(rule__DataModel__Group_1_2__0)*
	{ after(grammarAccess.getDataModelAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group_1_2__0__Impl
	rule__DataModel__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getDataModelAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getImportURIAssignment_1_2_1()); }
	(rule__DataModel__ImportURIAssignment_1_2_1)
	{ after(grammarAccess.getDataModelAccess().getImportURIAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group_4__0__Impl
	rule__DataModel__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getDataModelAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getDescriptionsAssignment_4_1()); }
	(rule__DataModel__DescriptionsAssignment_4_1)
	{ after(grammarAccess.getDataModelAccess().getDescriptionsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__0__Impl
	rule__DataSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getDescriptionKeyword_0()); }
	'description'
	{ after(grammarAccess.getDataSourceAccess().getDescriptionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__1__Impl
	rule__DataSource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getFormatAssignment_1()); }
	(rule__DataSource__FormatAssignment_1)
	{ after(grammarAccess.getDataSourceAccess().getFormatAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__2__Impl
	rule__DataSource__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getNameAssignment_2()); }
	(rule__DataSource__NameAssignment_2)
	{ after(grammarAccess.getDataSourceAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__3__Impl
	rule__DataSource__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getGroup_3()); }
	(rule__DataSource__Group_3__0)?
	{ after(grammarAccess.getDataSourceAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__4__Impl
	rule__DataSource__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getGroup_4()); }
	(rule__DataSource__Group_4__0)?
	{ after(grammarAccess.getDataSourceAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__5__Impl
	rule__DataSource__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getEqualsSignKeyword_5()); }
	'='
	{ after(grammarAccess.getDataSourceAccess().getEqualsSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__6__Impl
	rule__DataSource__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getDataSourceAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__7__Impl
	rule__DataSource__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getGroup_7()); }
	(rule__DataSource__Group_7__0)?
	{ after(grammarAccess.getDataSourceAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__8__Impl
	rule__DataSource__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getDataSourceAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getGroup_9()); }
	(rule__DataSource__Group_9__0)?
	{ after(grammarAccess.getDataSourceAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataSource__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_3__0__Impl
	rule__DataSource__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getLinkAssignment_3_0()); }
	(rule__DataSource__LinkAssignment_3_0)
	{ after(grammarAccess.getDataSourceAccess().getLinkAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getGroup_3_1()); }
	(rule__DataSource__Group_3_1__0)*
	{ after(grammarAccess.getDataSourceAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataSource__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_3_1__0__Impl
	rule__DataSource__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getDataSourceAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getLinkAssignment_3_1_1()); }
	(rule__DataSource__LinkAssignment_3_1_1)
	{ after(grammarAccess.getDataSourceAccess().getLinkAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataSource__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_4__0__Impl
	rule__DataSource__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getUsesKeyword_4_0()); }
	'uses'
	{ after(grammarAccess.getDataSourceAccess().getUsesKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_4__1__Impl
	rule__DataSource__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getFragmentsAssignment_4_1()); }
	(rule__DataSource__FragmentsAssignment_4_1)
	{ after(grammarAccess.getDataSourceAccess().getFragmentsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getGroup_4_2()); }
	(rule__DataSource__Group_4_2__0)*
	{ after(grammarAccess.getDataSourceAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataSource__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_4_2__0__Impl
	rule__DataSource__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getDataSourceAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getFragmentsAssignment_4_2_1()); }
	(rule__DataSource__FragmentsAssignment_4_2_1)
	{ after(grammarAccess.getDataSourceAccess().getFragmentsAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataSource__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_7__0__Impl
	rule__DataSource__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getNodesAssignment_7_0()); }
	(rule__DataSource__NodesAssignment_7_0)
	{ after(grammarAccess.getDataSourceAccess().getNodesAssignment_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getGroup_7_1()); }
	(rule__DataSource__Group_7_1__0)*
	{ after(grammarAccess.getDataSourceAccess().getGroup_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataSource__Group_7_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_7_1__0__Impl
	rule__DataSource__Group_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_7_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getCommaKeyword_7_1_0()); }
	','
	{ after(grammarAccess.getDataSourceAccess().getCommaKeyword_7_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_7_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_7_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_7_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getNodesAssignment_7_1_1()); }
	(rule__DataSource__NodesAssignment_7_1_1)
	{ after(grammarAccess.getDataSourceAccess().getNodesAssignment_7_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataSource__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_9__0__Impl
	rule__DataSource__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getLeftSquareBracketKeyword_9_0()); }
	'['
	{ after(grammarAccess.getDataSourceAccess().getLeftSquareBracketKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_9__1__Impl
	rule__DataSource__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getOptionsAssignment_9_1()); }
	(rule__DataSource__OptionsAssignment_9_1)
	{ after(grammarAccess.getDataSourceAccess().getOptionsAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_9__2__Impl
	rule__DataSource__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getGroup_9_2()); }
	(rule__DataSource__Group_9_2__0)*
	{ after(grammarAccess.getDataSourceAccess().getGroup_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_9__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_9__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_9__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getRightSquareBracketKeyword_9_3()); }
	']'
	{ after(grammarAccess.getDataSourceAccess().getRightSquareBracketKeyword_9_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataSource__Group_9_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_9_2__0__Impl
	rule__DataSource__Group_9_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_9_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getCommaKeyword_9_2_0()); }
	','
	{ after(grammarAccess.getDataSourceAccess().getCommaKeyword_9_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_9_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group_9_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group_9_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getOptionsAssignment_9_2_1()); }
	(rule__DataSource__OptionsAssignment_9_2_1)
	{ after(grammarAccess.getDataSourceAccess().getOptionsAssignment_9_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataFragment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFragment__Group__0__Impl
	rule__DataFragment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFragmentAccess().getFragmentKeyword_0()); }
	'fragment'
	{ after(grammarAccess.getDataFragmentAccess().getFragmentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFragment__Group__1__Impl
	rule__DataFragment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFragmentAccess().getNameAssignment_1()); }
	(rule__DataFragment__NameAssignment_1)
	{ after(grammarAccess.getDataFragmentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFragment__Group__2__Impl
	rule__DataFragment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFragmentAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getDataFragmentAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFragment__Group__3__Impl
	rule__DataFragment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFragmentAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getDataFragmentAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFragment__Group__4__Impl
	rule__DataFragment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFragmentAccess().getGroup_4()); }
	(rule__DataFragment__Group_4__0)?
	{ after(grammarAccess.getDataFragmentAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFragment__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFragmentAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getDataFragmentAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataFragment__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFragment__Group_4__0__Impl
	rule__DataFragment__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFragmentAccess().getNodesAssignment_4_0()); }
	(rule__DataFragment__NodesAssignment_4_0)
	{ after(grammarAccess.getDataFragmentAccess().getNodesAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFragment__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFragmentAccess().getGroup_4_1()); }
	(rule__DataFragment__Group_4_1__0)*
	{ after(grammarAccess.getDataFragmentAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataFragment__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFragment__Group_4_1__0__Impl
	rule__DataFragment__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFragmentAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getDataFragmentAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFragment__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFragmentAccess().getNodesAssignment_4_1_1()); }
	(rule__DataFragment__NodesAssignment_4_1_1)
	{ after(grammarAccess.getDataFragmentAccess().getNodesAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group__0__Impl
	rule__Option__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getOptionAction_0()); }
	()
	{ after(grammarAccess.getOptionAccess().getOptionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group__1__Impl
	rule__Option__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getKeyAssignment_1()); }
	(rule__Option__KeyAssignment_1)
	{ after(grammarAccess.getOptionAccess().getKeyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group__2__Impl
	rule__Option__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getOptionAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group__3__Impl
	rule__Option__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getOptionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group__4__Impl
	rule__Option__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getValuesAssignment_4()); }
	(rule__Option__ValuesAssignment_4)
	{ after(grammarAccess.getOptionAccess().getValuesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group__5__Impl
	rule__Option__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getGroup_5()); }
	(rule__Option__Group_5__0)*
	{ after(grammarAccess.getOptionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getOptionAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group_5__0__Impl
	rule__Option__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getOptionAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getValuesAssignment_5_1()); }
	(rule__Option__ValuesAssignment_5_1)
	{ after(grammarAccess.getOptionAccess().getValuesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group__0__Impl
	rule__CompositeNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getCompositeNodeAction_0()); }
	()
	{ after(grammarAccess.getCompositeNodeAccess().getCompositeNodeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group__1__Impl
	rule__CompositeNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getEnvironmentAssignment_1()); }
	(rule__CompositeNode__EnvironmentAssignment_1)?
	{ after(grammarAccess.getCompositeNodeAccess().getEnvironmentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group__2__Impl
	rule__CompositeNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getNameAssignment_2()); }
	(rule__CompositeNode__NameAssignment_2)
	{ after(grammarAccess.getCompositeNodeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group__3__Impl
	rule__CompositeNode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getRepresentedAsAssignment_3()); }
	(rule__CompositeNode__RepresentedAsAssignment_3)?
	{ after(grammarAccess.getCompositeNodeAccess().getRepresentedAsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group__4__Impl
	rule__CompositeNode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getGroup_4()); }
	(rule__CompositeNode__Group_4__0)?
	{ after(grammarAccess.getCompositeNodeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group__5__Impl
	rule__CompositeNode__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getGroup_5()); }
	(rule__CompositeNode__Group_5__0)
	{ after(grammarAccess.getCompositeNodeAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getCompositeNodeAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeNode__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group_4__0__Impl
	rule__CompositeNode__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getExtendsKeyword_4_0()); }
	'extends'
	{ after(grammarAccess.getCompositeNodeAccess().getExtendsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group_4__1__Impl
	rule__CompositeNode__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getExtendsAssignment_4_1()); }
	(rule__CompositeNode__ExtendsAssignment_4_1)
	{ after(grammarAccess.getCompositeNodeAccess().getExtendsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getGroup_4_2()); }
	(rule__CompositeNode__Group_4_2__0)*
	{ after(grammarAccess.getCompositeNodeAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeNode__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group_4_2__0__Impl
	rule__CompositeNode__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getCompositeNodeAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getExtendsAssignment_4_2_1()); }
	(rule__CompositeNode__ExtendsAssignment_4_2_1)
	{ after(grammarAccess.getCompositeNodeAccess().getExtendsAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeNode__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group_5__0__Impl
	rule__CompositeNode__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getEqualsSignKeyword_5_0()); }
	'='
	{ after(grammarAccess.getCompositeNodeAccess().getEqualsSignKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group_5__1__Impl
	rule__CompositeNode__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getLeftParenthesisKeyword_5_1()); }
	'('
	{ after(grammarAccess.getCompositeNodeAccess().getLeftParenthesisKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getGroup_5_2()); }
	(rule__CompositeNode__Group_5_2__0)?
	{ after(grammarAccess.getCompositeNodeAccess().getGroup_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeNode__Group_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group_5_2__0__Impl
	rule__CompositeNode__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getSubnodesAssignment_5_2_0()); }
	(rule__CompositeNode__SubnodesAssignment_5_2_0)
	{ after(grammarAccess.getCompositeNodeAccess().getSubnodesAssignment_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getGroup_5_2_1()); }
	(rule__CompositeNode__Group_5_2_1__0)*
	{ after(grammarAccess.getCompositeNodeAccess().getGroup_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeNode__Group_5_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group_5_2_1__0__Impl
	rule__CompositeNode__Group_5_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_5_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getCommaKeyword_5_2_1_0()); }
	','
	{ after(grammarAccess.getCompositeNodeAccess().getCommaKeyword_5_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_5_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeNode__Group_5_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__Group_5_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeNodeAccess().getSubnodesAssignment_5_2_1_1()); }
	(rule__CompositeNode__SubnodesAssignment_5_2_1_1)
	{ after(grammarAccess.getCompositeNodeAccess().getSubnodesAssignment_5_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeafNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeafNode__Group__0__Impl
	rule__LeafNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeafNodeAccess().getLeafNodeAction_0()); }
	()
	{ after(grammarAccess.getLeafNodeAccess().getLeafNodeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeafNode__Group__1__Impl
	rule__LeafNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeafNodeAccess().getKeyAssignment_1()); }
	(rule__LeafNode__KeyAssignment_1)?
	{ after(grammarAccess.getLeafNodeAccess().getKeyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeafNode__Group__2__Impl
	rule__LeafNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeafNodeAccess().getUniqueAssignment_2()); }
	(rule__LeafNode__UniqueAssignment_2)?
	{ after(grammarAccess.getLeafNodeAccess().getUniqueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeafNode__Group__3__Impl
	rule__LeafNode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeafNodeAccess().getTypeAssignment_3()); }
	(rule__LeafNode__TypeAssignment_3)
	{ after(grammarAccess.getLeafNodeAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeafNode__Group__4__Impl
	rule__LeafNode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeafNodeAccess().getKeywordAssignment_4()); }
	(rule__LeafNode__KeywordAssignment_4)?
	{ after(grammarAccess.getLeafNodeAccess().getKeywordAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeafNode__Group__5__Impl
	rule__LeafNode__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeafNodeAccess().getNameAssignment_5()); }
	(rule__LeafNode__NameAssignment_5)
	{ after(grammarAccess.getLeafNodeAccess().getNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeafNode__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeafNodeAccess().getRepresentedAsAssignment_6()); }
	(rule__LeafNode__RepresentedAsAssignment_6)?
	{ after(grammarAccess.getLeafNodeAccess().getRepresentedAsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDataTypeAction_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getDataTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
	rule__DataType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getAlternatives_1()); }
	(rule__DataType__Alternatives_1)
	{ after(grammarAccess.getDataTypeAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getGroup_2()); }
	(rule__DataType__Group_2__0)?
	{ after(grammarAccess.getDataTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2__0__Impl
	rule__DataType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getDataTypeAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2__1__Impl
	rule__DataType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getMinAssignment_2_1()); }
	(rule__DataType__MinAssignment_2_1)
	{ after(grammarAccess.getDataTypeAccess().getMinAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2__2__Impl
	rule__DataType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getCommaKeyword_2_2()); }
	','
	{ after(grammarAccess.getDataTypeAccess().getCommaKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2__3__Impl
	rule__DataType__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getMaxAssignment_2_3()); }
	(rule__DataType__MaxAssignment_2_3)?
	{ after(grammarAccess.getDataTypeAccess().getMaxAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getRightSquareBracketKeyword_2_4()); }
	']'
	{ after(grammarAccess.getDataTypeAccess().getRightSquareBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__0__Impl
	rule__Reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getReferenceAction_0()); }
	()
	{ after(grammarAccess.getReferenceAccess().getReferenceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__1__Impl
	rule__Reference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getRefKeyword_1()); }
	'ref:'
	{ after(grammarAccess.getReferenceAccess().getRefKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__2__Impl
	rule__Reference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getReferenceTypeAssignment_2()); }
	(rule__Reference__ReferenceTypeAssignment_2)
	{ after(grammarAccess.getReferenceAccess().getReferenceTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getGroup_3()); }
	(rule__Reference__Group_3__0)?
	{ after(grammarAccess.getReferenceAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_3__0__Impl
	rule__Reference__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getLeftSquareBracketKeyword_3_0()); }
	'['
	{ after(grammarAccess.getReferenceAccess().getLeftSquareBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_3__1__Impl
	rule__Reference__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getMinAssignment_3_1()); }
	(rule__Reference__MinAssignment_3_1)
	{ after(grammarAccess.getReferenceAccess().getMinAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_3__2__Impl
	rule__Reference__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getCommaKeyword_3_2()); }
	','
	{ after(grammarAccess.getReferenceAccess().getCommaKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_3__3__Impl
	rule__Reference__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getMaxAssignment_3_3()); }
	(rule__Reference__MaxAssignment_3_3)?
	{ after(grammarAccess.getReferenceAccess().getMaxAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getRightSquareBracketKeyword_3_4()); }
	']'
	{ after(grammarAccess.getReferenceAccess().getRightSquareBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__ImportURIAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getImportURIEStringParserRuleCall_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getDataModelAccess().getImportURIEStringParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__ImportURIAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getImportURIEStringParserRuleCall_1_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getDataModelAccess().getImportURIEStringParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__DescriptionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getDescriptionsDataDescriptionParserRuleCall_3_0()); }
		ruleDataDescription
		{ after(grammarAccess.getDataModelAccess().getDescriptionsDataDescriptionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__DescriptionsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getDescriptionsDataDescriptionParserRuleCall_4_1_0()); }
		ruleDataDescription
		{ after(grammarAccess.getDataModelAccess().getDescriptionsDataDescriptionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__FormatAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getFormatFormatSpecificationParserRuleCall_1_0()); }
		ruleFormatSpecification
		{ after(grammarAccess.getDataSourceAccess().getFormatFormatSpecificationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getDataSourceAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__LinkAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getLinkEStringParserRuleCall_3_0_0()); }
		ruleEString
		{ after(grammarAccess.getDataSourceAccess().getLinkEStringParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__LinkAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getLinkEStringParserRuleCall_3_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getDataSourceAccess().getLinkEStringParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__FragmentsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getFragmentsDataFragmentCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getDataSourceAccess().getFragmentsDataFragmentEStringParserRuleCall_4_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getDataSourceAccess().getFragmentsDataFragmentEStringParserRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getDataSourceAccess().getFragmentsDataFragmentCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__FragmentsAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getFragmentsDataFragmentCrossReference_4_2_1_0()); }
		(
			{ before(grammarAccess.getDataSourceAccess().getFragmentsDataFragmentEStringParserRuleCall_4_2_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getDataSourceAccess().getFragmentsDataFragmentEStringParserRuleCall_4_2_1_0_1()); }
		)
		{ after(grammarAccess.getDataSourceAccess().getFragmentsDataFragmentCrossReference_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__NodesAssignment_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getNodesNodeParserRuleCall_7_0_0()); }
		ruleNode
		{ after(grammarAccess.getDataSourceAccess().getNodesNodeParserRuleCall_7_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__NodesAssignment_7_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getNodesNodeParserRuleCall_7_1_1_0()); }
		ruleNode
		{ after(grammarAccess.getDataSourceAccess().getNodesNodeParserRuleCall_7_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__OptionsAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getOptionsOptionParserRuleCall_9_1_0()); }
		ruleOption
		{ after(grammarAccess.getDataSourceAccess().getOptionsOptionParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__OptionsAssignment_9_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getOptionsOptionParserRuleCall_9_2_1_0()); }
		ruleOption
		{ after(grammarAccess.getDataSourceAccess().getOptionsOptionParserRuleCall_9_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataFragmentAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getDataFragmentAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__NodesAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataFragmentAccess().getNodesNodeParserRuleCall_4_0_0()); }
		ruleNode
		{ after(grammarAccess.getDataFragmentAccess().getNodesNodeParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFragment__NodesAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataFragmentAccess().getNodesNodeParserRuleCall_4_1_1_0()); }
		ruleNode
		{ after(grammarAccess.getDataFragmentAccess().getNodesNodeParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormatSpecification__SpecialFormatAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormatSpecificationAccess().getSpecialFormatEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getFormatSpecificationAccess().getSpecialFormatEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormatSpecification__FormatAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormatSpecificationAccess().getFormatFormatKindEnumRuleCall_1_0()); }
		ruleFormatKind
		{ after(grammarAccess.getFormatSpecificationAccess().getFormatFormatKindEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__KeyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionAccess().getKeyEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getOptionAccess().getKeyEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__ValuesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionAccess().getValuesEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getOptionAccess().getValuesEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__ValuesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionAccess().getValuesEStringParserRuleCall_5_1_0()); }
		ruleEString
		{ after(grammarAccess.getOptionAccess().getValuesEStringParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__EnvironmentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeNodeAccess().getEnvironmentGreaterThanSignKeyword_1_0()); }
		(
			{ before(grammarAccess.getCompositeNodeAccess().getEnvironmentGreaterThanSignKeyword_1_0()); }
			'>'
			{ after(grammarAccess.getCompositeNodeAccess().getEnvironmentGreaterThanSignKeyword_1_0()); }
		)
		{ after(grammarAccess.getCompositeNodeAccess().getEnvironmentGreaterThanSignKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeNodeAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getCompositeNodeAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__RepresentedAsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeNodeAccess().getRepresentedAsEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getCompositeNodeAccess().getRepresentedAsEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__ExtendsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeNodeAccess().getExtendsCompositeNodeCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getCompositeNodeAccess().getExtendsCompositeNodeEStringParserRuleCall_4_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getCompositeNodeAccess().getExtendsCompositeNodeEStringParserRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getCompositeNodeAccess().getExtendsCompositeNodeCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__ExtendsAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeNodeAccess().getExtendsCompositeNodeCrossReference_4_2_1_0()); }
		(
			{ before(grammarAccess.getCompositeNodeAccess().getExtendsCompositeNodeEStringParserRuleCall_4_2_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getCompositeNodeAccess().getExtendsCompositeNodeEStringParserRuleCall_4_2_1_0_1()); }
		)
		{ after(grammarAccess.getCompositeNodeAccess().getExtendsCompositeNodeCrossReference_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__SubnodesAssignment_5_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeNodeAccess().getSubnodesNodeParserRuleCall_5_2_0_0()); }
		ruleNode
		{ after(grammarAccess.getCompositeNodeAccess().getSubnodesNodeParserRuleCall_5_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeNode__SubnodesAssignment_5_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeNodeAccess().getSubnodesNodeParserRuleCall_5_2_1_1_0()); }
		ruleNode
		{ after(grammarAccess.getCompositeNodeAccess().getSubnodesNodeParserRuleCall_5_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__KeyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeafNodeAccess().getKeyKeyKeyword_1_0()); }
		(
			{ before(grammarAccess.getLeafNodeAccess().getKeyKeyKeyword_1_0()); }
			'key'
			{ after(grammarAccess.getLeafNodeAccess().getKeyKeyKeyword_1_0()); }
		)
		{ after(grammarAccess.getLeafNodeAccess().getKeyKeyKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__UniqueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeafNodeAccess().getUniqueUniqueKeyword_2_0()); }
		(
			{ before(grammarAccess.getLeafNodeAccess().getUniqueUniqueKeyword_2_0()); }
			'unique'
			{ after(grammarAccess.getLeafNodeAccess().getUniqueUniqueKeyword_2_0()); }
		)
		{ after(grammarAccess.getLeafNodeAccess().getUniqueUniqueKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeafNodeAccess().getTypeTypeSpecificationParserRuleCall_3_0()); }
		ruleTypeSpecification
		{ after(grammarAccess.getLeafNodeAccess().getTypeTypeSpecificationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__KeywordAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeafNodeAccess().getKeywordNumberSignKeyword_4_0()); }
		(
			{ before(grammarAccess.getLeafNodeAccess().getKeywordNumberSignKeyword_4_0()); }
			'#'
			{ after(grammarAccess.getLeafNodeAccess().getKeywordNumberSignKeyword_4_0()); }
		)
		{ after(grammarAccess.getLeafNodeAccess().getKeywordNumberSignKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__NameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeafNodeAccess().getNameEStringParserRuleCall_5_0()); }
		ruleEString
		{ after(grammarAccess.getLeafNodeAccess().getNameEStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__RepresentedAsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeafNodeAccess().getRepresentedAsEStringParserRuleCall_6_0()); }
		ruleEString
		{ after(grammarAccess.getLeafNodeAccess().getRepresentedAsEStringParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__SpecialTypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getSpecialTypeEStringParserRuleCall_1_0_0()); }
		ruleEString
		{ after(grammarAccess.getDataTypeAccess().getSpecialTypeEStringParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeTypeKindEnumRuleCall_1_1_0()); }
		ruleTypeKind
		{ after(grammarAccess.getDataTypeAccess().getTypeTypeKindEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__MinAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getMinEIntParserRuleCall_2_1_0()); }
		ruleEInt
		{ after(grammarAccess.getDataTypeAccess().getMinEIntParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__MaxAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getMaxEIntParserRuleCall_2_3_0()); }
		ruleEInt
		{ after(grammarAccess.getDataTypeAccess().getMaxEIntParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__ReferenceTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getReferenceTypeCompositeNodeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getReferenceAccess().getReferenceTypeCompositeNodeEStringParserRuleCall_2_0_1()); }
			ruleEString
			{ after(grammarAccess.getReferenceAccess().getReferenceTypeCompositeNodeEStringParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getReferenceAccess().getReferenceTypeCompositeNodeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__MinAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getMinEIntParserRuleCall_3_1_0()); }
		ruleEInt
		{ after(grammarAccess.getReferenceAccess().getMinEIntParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__MaxAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getMaxEIntParserRuleCall_3_3_0()); }
		ruleEInt
		{ after(grammarAccess.getReferenceAccess().getMaxEIntParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
