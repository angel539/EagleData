/*
 * generated by Xtext 2.9.1
 */
grammar InternalDataDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package eagledata.core.dsl.datadsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package eagledata.core.dsl.datadsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import eagledata.core.dsl.datadsl.services.DataDslGrammarAccess;

}

@parser::members {

 	private DataDslGrammarAccess grammarAccess;

    public InternalDataDslParser(TokenStream input, DataDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DataModel";
   	}

   	@Override
   	protected DataDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDataModel
entryRuleDataModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataModelRule()); }
	iv_ruleDataModel=ruleDataModel
	{ $current=$iv_ruleDataModel.current; }
	EOF;

// Rule DataModel
ruleDataModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDataModelAccess().getDataModelAction_0(),
					$current);
			}
		)
		(
			otherlv_1='import'
			{
				newLeafNode(otherlv_1, grammarAccess.getDataModelAccess().getImportKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataModelAccess().getImportURIEStringParserRuleCall_1_1_0());
					}
					lv_importURI_2_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataModelRule());
						}
						add(
							$current,
							"importURI",
							lv_importURI_2_0,
							"eagledata.core.dsl.datadsl.DataDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getDataModelAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataModelAccess().getImportURIEStringParserRuleCall_1_2_1_0());
						}
						lv_importURI_4_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataModelRule());
							}
							add(
								$current,
								"importURI",
								lv_importURI_4_0,
								"eagledata.core.dsl.datadsl.DataDsl.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelAccess().getDescriptionsDataDescriptionParserRuleCall_3_0());
				}
				lv_descriptions_6_0=ruleDataDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelRule());
					}
					add(
						$current,
						"descriptions",
						lv_descriptions_6_0,
						"eagledata.core.dsl.datadsl.DataDsl.DataDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getDataModelAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataModelAccess().getDescriptionsDataDescriptionParserRuleCall_4_1_0());
					}
					lv_descriptions_8_0=ruleDataDescription
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataModelRule());
						}
						add(
							$current,
							"descriptions",
							lv_descriptions_8_0,
							"eagledata.core.dsl.datadsl.DataDsl.DataDescription");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDataDescription
entryRuleDataDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataDescriptionRule()); }
	iv_ruleDataDescription=ruleDataDescription
	{ $current=$iv_ruleDataDescription.current; }
	EOF;

// Rule DataDescription
ruleDataDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDataDescriptionAccess().getDataSourceParserRuleCall_0());
		}
		this_DataSource_0=ruleDataSource
		{
			$current = $this_DataSource_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataDescriptionAccess().getDataFragmentParserRuleCall_1());
		}
		this_DataFragment_1=ruleDataFragment
		{
			$current = $this_DataFragment_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataSource
entryRuleDataSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataSourceRule()); }
	iv_ruleDataSource=ruleDataSource
	{ $current=$iv_ruleDataSource.current; }
	EOF;

// Rule DataSource
ruleDataSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='description'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataSourceAccess().getDescriptionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataSourceAccess().getFormatFormatSpecificationParserRuleCall_1_0());
				}
				lv_format_1_0=ruleFormatSpecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataSourceRule());
					}
					set(
						$current,
						"format",
						lv_format_1_0,
						"eagledata.core.dsl.datadsl.DataDsl.FormatSpecification");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDataSourceAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataSourceRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"eagledata.core.dsl.datadsl.DataDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataSourceAccess().getLinkEStringParserRuleCall_3_0_0());
					}
					lv_link_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataSourceRule());
						}
						add(
							$current,
							"link",
							lv_link_3_0,
							"eagledata.core.dsl.datadsl.DataDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getDataSourceAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataSourceAccess().getLinkEStringParserRuleCall_3_1_1_0());
						}
						lv_link_5_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataSourceRule());
							}
							add(
								$current,
								"link",
								lv_link_5_0,
								"eagledata.core.dsl.datadsl.DataDsl.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_6='uses'
			{
				newLeafNode(otherlv_6, grammarAccess.getDataSourceAccess().getUsesKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataSourceRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataSourceAccess().getFragmentsDataFragmentCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getDataSourceAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDataSourceRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getDataSourceAccess().getFragmentsDataFragmentCrossReference_4_2_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_10='='
		{
			newLeafNode(otherlv_10, grammarAccess.getDataSourceAccess().getEqualsSignKeyword_5());
		}
		otherlv_11='{'
		{
			newLeafNode(otherlv_11, grammarAccess.getDataSourceAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataSourceAccess().getNodesNodeParserRuleCall_7_0_0());
					}
					lv_nodes_12_0=ruleNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataSourceRule());
						}
						add(
							$current,
							"nodes",
							lv_nodes_12_0,
							"eagledata.core.dsl.datadsl.DataDsl.Node");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getDataSourceAccess().getCommaKeyword_7_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataSourceAccess().getNodesNodeParserRuleCall_7_1_1_0());
						}
						lv_nodes_14_0=ruleNode
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataSourceRule());
							}
							add(
								$current,
								"nodes",
								lv_nodes_14_0,
								"eagledata.core.dsl.datadsl.DataDsl.Node");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getDataSourceAccess().getRightCurlyBracketKeyword_8());
		}
		(
			otherlv_16='['
			{
				newLeafNode(otherlv_16, grammarAccess.getDataSourceAccess().getLeftSquareBracketKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataSourceAccess().getOptionsOptionParserRuleCall_9_1_0());
					}
					lv_options_17_0=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataSourceRule());
						}
						add(
							$current,
							"options",
							lv_options_17_0,
							"eagledata.core.dsl.datadsl.DataDsl.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getDataSourceAccess().getCommaKeyword_9_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataSourceAccess().getOptionsOptionParserRuleCall_9_2_1_0());
						}
						lv_options_19_0=ruleOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataSourceRule());
							}
							add(
								$current,
								"options",
								lv_options_19_0,
								"eagledata.core.dsl.datadsl.DataDsl.Option");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20=']'
			{
				newLeafNode(otherlv_20, grammarAccess.getDataSourceAccess().getRightSquareBracketKeyword_9_3());
			}
		)?
	)
;

// Entry rule entryRuleDataFragment
entryRuleDataFragment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataFragmentRule()); }
	iv_ruleDataFragment=ruleDataFragment
	{ $current=$iv_ruleDataFragment.current; }
	EOF;

// Rule DataFragment
ruleDataFragment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='fragment'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataFragmentAccess().getFragmentKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataFragmentAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataFragmentRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"eagledata.core.dsl.datadsl.DataDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getDataFragmentAccess().getEqualsSignKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDataFragmentAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataFragmentAccess().getNodesNodeParserRuleCall_4_0_0());
					}
					lv_nodes_4_0=ruleNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataFragmentRule());
						}
						add(
							$current,
							"nodes",
							lv_nodes_4_0,
							"eagledata.core.dsl.datadsl.DataDsl.Node");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getDataFragmentAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataFragmentAccess().getNodesNodeParserRuleCall_4_1_1_0());
						}
						lv_nodes_6_0=ruleNode
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataFragmentRule());
							}
							add(
								$current,
								"nodes",
								lv_nodes_6_0,
								"eagledata.core.dsl.datadsl.DataDsl.Node");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDataFragmentAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleFormatSpecification
entryRuleFormatSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormatSpecificationRule()); }
	iv_ruleFormatSpecification=ruleFormatSpecification
	{ $current=$iv_ruleFormatSpecification.current; }
	EOF;

// Rule FormatSpecification
ruleFormatSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFormatSpecificationAccess().getSpecialFormatEStringParserRuleCall_0_0());
				}
				lv_specialFormat_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormatSpecificationRule());
					}
					set(
						$current,
						"specialFormat",
						lv_specialFormat_0_0,
						"eagledata.core.dsl.datadsl.DataDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFormatSpecificationAccess().getFormatFormatKindEnumRuleCall_1_0());
				}
				lv_format_1_0=ruleFormatKind
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormatSpecificationRule());
					}
					set(
						$current,
						"format",
						lv_format_1_0,
						"eagledata.core.dsl.datadsl.DataDsl.FormatKind");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOption
entryRuleOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionRule()); }
	iv_ruleOption=ruleOption
	{ $current=$iv_ruleOption.current; }
	EOF;

// Rule Option
ruleOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOptionAccess().getOptionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOptionAccess().getKeyEStringParserRuleCall_1_0());
				}
				lv_key_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_1_0,
						"eagledata.core.dsl.datadsl.DataDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getOptionAccess().getEqualsSignKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getOptionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOptionAccess().getValuesEStringParserRuleCall_4_0());
				}
				lv_values_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOptionRule());
					}
					add(
						$current,
						"values",
						lv_values_4_0,
						"eagledata.core.dsl.datadsl.DataDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getOptionAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOptionAccess().getValuesEStringParserRuleCall_5_1_0());
					}
					lv_values_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOptionRule());
						}
						add(
							$current,
							"values",
							lv_values_6_0,
							"eagledata.core.dsl.datadsl.DataDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getOptionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	iv_ruleNode=ruleNode
	{ $current=$iv_ruleNode.current; }
	EOF;

// Rule Node
ruleNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNodeAccess().getCompositeNodeParserRuleCall_0());
		}
		this_CompositeNode_0=ruleCompositeNode
		{
			$current = $this_CompositeNode_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNodeAccess().getLeafNodeParserRuleCall_1());
		}
		this_LeafNode_1=ruleLeafNode
		{
			$current = $this_LeafNode_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCompositeNode
entryRuleCompositeNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositeNodeRule()); }
	iv_ruleCompositeNode=ruleCompositeNode
	{ $current=$iv_ruleCompositeNode.current; }
	EOF;

// Rule CompositeNode
ruleCompositeNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCompositeNodeAccess().getCompositeNodeAction_0(),
					$current);
			}
		)
		(
			(
				lv_environment_1_0='>'
				{
					newLeafNode(lv_environment_1_0, grammarAccess.getCompositeNodeAccess().getEnvironmentGreaterThanSignKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompositeNodeRule());
					}
					setWithLastConsumed($current, "environment", true, ">");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeNodeAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeNodeRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"eagledata.core.dsl.datadsl.DataDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeNodeAccess().getRepresentedAsEStringParserRuleCall_3_0());
				}
				lv_representedAs_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeNodeRule());
					}
					set(
						$current,
						"representedAs",
						lv_representedAs_3_0,
						"eagledata.core.dsl.datadsl.DataDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_4='extends'
			{
				newLeafNode(otherlv_4, grammarAccess.getCompositeNodeAccess().getExtendsKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCompositeNodeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCompositeNodeAccess().getExtendsCompositeNodeCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getCompositeNodeAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCompositeNodeRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getCompositeNodeAccess().getExtendsCompositeNodeCrossReference_4_2_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_8='='
			{
				newLeafNode(otherlv_8, grammarAccess.getCompositeNodeAccess().getEqualsSignKeyword_5_0());
			}
			otherlv_9='('
			{
				newLeafNode(otherlv_9, grammarAccess.getCompositeNodeAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCompositeNodeAccess().getSubnodesNodeParserRuleCall_5_2_0_0());
						}
						lv_subnodes_10_0=ruleNode
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompositeNodeRule());
							}
							add(
								$current,
								"subnodes",
								lv_subnodes_10_0,
								"eagledata.core.dsl.datadsl.DataDsl.Node");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_11=','
					{
						newLeafNode(otherlv_11, grammarAccess.getCompositeNodeAccess().getCommaKeyword_5_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCompositeNodeAccess().getSubnodesNodeParserRuleCall_5_2_1_1_0());
							}
							lv_subnodes_12_0=ruleNode
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCompositeNodeRule());
								}
								add(
									$current,
									"subnodes",
									lv_subnodes_12_0,
									"eagledata.core.dsl.datadsl.DataDsl.Node");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
		)
		otherlv_13=')'
		{
			newLeafNode(otherlv_13, grammarAccess.getCompositeNodeAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleLeafNode
entryRuleLeafNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLeafNodeRule()); }
	iv_ruleLeafNode=ruleLeafNode
	{ $current=$iv_ruleLeafNode.current; }
	EOF;

// Rule LeafNode
ruleLeafNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLeafNodeAccess().getLeafNodeAction_0(),
					$current);
			}
		)
		(
			(
				lv_key_1_0='key'
				{
					newLeafNode(lv_key_1_0, grammarAccess.getLeafNodeAccess().getKeyKeyKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLeafNodeRule());
					}
					setWithLastConsumed($current, "key", true, "key");
				}
			)
		)?
		(
			(
				lv_unique_2_0='unique'
				{
					newLeafNode(lv_unique_2_0, grammarAccess.getLeafNodeAccess().getUniqueUniqueKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLeafNodeRule());
					}
					setWithLastConsumed($current, "unique", true, "unique");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLeafNodeAccess().getTypeTypeSpecificationParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeSpecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLeafNodeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"eagledata.core.dsl.datadsl.DataDsl.TypeSpecification");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_keyword_4_0='#'
				{
					newLeafNode(lv_keyword_4_0, grammarAccess.getLeafNodeAccess().getKeywordNumberSignKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLeafNodeRule());
					}
					setWithLastConsumed($current, "keyword", true, "#");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLeafNodeAccess().getNameEStringParserRuleCall_5_0());
				}
				lv_name_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLeafNodeRule());
					}
					set(
						$current,
						"name",
						lv_name_5_0,
						"eagledata.core.dsl.datadsl.DataDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLeafNodeAccess().getRepresentedAsEStringParserRuleCall_6_0());
				}
				lv_representedAs_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLeafNodeRule());
					}
					set(
						$current,
						"representedAs",
						lv_representedAs_6_0,
						"eagledata.core.dsl.datadsl.DataDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleTypeSpecification
entryRuleTypeSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSpecificationRule()); }
	iv_ruleTypeSpecification=ruleTypeSpecification
	{ $current=$iv_ruleTypeSpecification.current; }
	EOF;

// Rule TypeSpecification
ruleTypeSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeSpecificationAccess().getDataTypeParserRuleCall_0());
		}
		this_DataType_0=ruleDataType
		{
			$current = $this_DataType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeSpecificationAccess().getReferenceParserRuleCall_1());
		}
		this_Reference_1=ruleReference
		{
			$current = $this_Reference_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDataTypeAccess().getDataTypeAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataTypeAccess().getSpecialTypeEStringParserRuleCall_1_0_0());
					}
					lv_specialType_1_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataTypeRule());
						}
						set(
							$current,
							"specialType",
							lv_specialType_1_0,
							"eagledata.core.dsl.datadsl.DataDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getDataTypeAccess().getTypeTypeKindEnumRuleCall_1_1_0());
					}
					lv_type_2_0=ruleTypeKind
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataTypeRule());
						}
						set(
							$current,
							"type",
							lv_type_2_0,
							"eagledata.core.dsl.datadsl.DataDsl.TypeKind");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getDataTypeAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataTypeAccess().getMinEIntParserRuleCall_2_1_0());
					}
					lv_min_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataTypeRule());
						}
						set(
							$current,
							"min",
							lv_min_4_0,
							"eagledata.core.dsl.datadsl.DataDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getDataTypeAccess().getCommaKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataTypeAccess().getMaxEIntParserRuleCall_2_3_0());
					}
					lv_max_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataTypeRule());
						}
						set(
							$current,
							"max",
							lv_max_6_0,
							"eagledata.core.dsl.datadsl.DataDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getDataTypeAccess().getRightSquareBracketKeyword_2_4());
			}
		)?
	)
;

// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	iv_ruleReference=ruleReference
	{ $current=$iv_ruleReference.current; }
	EOF;

// Rule Reference
ruleReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReferenceAccess().getReferenceAction_0(),
					$current);
			}
		)
		otherlv_1='ref:'
		{
			newLeafNode(otherlv_1, grammarAccess.getReferenceAccess().getRefKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getReferenceAccess().getReferenceTypeCompositeNodeCrossReference_2_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getReferenceAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceAccess().getMinEIntParserRuleCall_3_1_0());
					}
					lv_min_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceRule());
						}
						set(
							$current,
							"min",
							lv_min_4_0,
							"eagledata.core.dsl.datadsl.DataDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getReferenceAccess().getCommaKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceAccess().getMaxEIntParserRuleCall_3_3_0());
					}
					lv_max_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceRule());
						}
						set(
							$current,
							"max",
							lv_max_6_0,
							"eagledata.core.dsl.datadsl.DataDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getReferenceAccess().getRightSquareBracketKeyword_3_4());
			}
		)?
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Rule FormatKind
ruleFormatKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='CSV'
			{
				$current = grammarAccess.getFormatKindAccess().getCSVEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getFormatKindAccess().getCSVEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='JSON'
			{
				$current = grammarAccess.getFormatKindAccess().getJSONEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getFormatKindAccess().getJSONEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='XML'
			{
				$current = grammarAccess.getFormatKindAccess().getXMLEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getFormatKindAccess().getXMLEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule TypeKind
ruleTypeKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='string'
			{
				$current = grammarAccess.getTypeKindAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeKindAccess().getStringEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='numeral'
			{
				$current = grammarAccess.getTypeKindAccess().getNumeralEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeKindAccess().getNumeralEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='date'
			{
				$current = grammarAccess.getTypeKindAccess().getDateEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTypeKindAccess().getDateEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='time'
			{
				$current = grammarAccess.getTypeKindAccess().getTimeEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTypeKindAccess().getTimeEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='year'
			{
				$current = grammarAccess.getTypeKindAccess().getYearEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTypeKindAccess().getYearEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='month'
			{
				$current = grammarAccess.getTypeKindAccess().getMonthEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getTypeKindAccess().getMonthEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='day'
			{
				$current = grammarAccess.getTypeKindAccess().getDayEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getTypeKindAccess().getDayEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='boolean'
			{
				$current = grammarAccess.getTypeKindAccess().getBooleanEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getTypeKindAccess().getBooleanEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='place'
			{
				$current = grammarAccess.getTypeKindAccess().getPlaceEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getTypeKindAccess().getPlaceEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='latitude'
			{
				$current = grammarAccess.getTypeKindAccess().getLatitudeEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getTypeKindAccess().getLatitudeEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='longitude'
			{
				$current = grammarAccess.getTypeKindAccess().getLongitudeEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getTypeKindAccess().getLongitudeEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='UTMe'
			{
				$current = grammarAccess.getTypeKindAccess().getUTMeEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getTypeKindAccess().getUTMeEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='UTMn'
			{
				$current = grammarAccess.getTypeKindAccess().getUTMnEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getTypeKindAccess().getUTMnEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='UTMz'
			{
				$current = grammarAccess.getTypeKindAccess().getUTMzEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getTypeKindAccess().getUTMzEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='UTMHemi'
			{
				$current = grammarAccess.getTypeKindAccess().getUTMHemiEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getTypeKindAccess().getUTMHemiEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='name'
			{
				$current = grammarAccess.getTypeKindAccess().getNameEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getTypeKindAccess().getNameEnumLiteralDeclaration_15());
			}
		)
		    |
		(
			enumLiteral_16='familyname'
			{
				$current = grammarAccess.getTypeKindAccess().getFamilynameEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_16, grammarAccess.getTypeKindAccess().getFamilynameEnumLiteralDeclaration_16());
			}
		)
		    |
		(
			enumLiteral_17='personalID'
			{
				$current = grammarAccess.getTypeKindAccess().getPersonalIDEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_17, grammarAccess.getTypeKindAccess().getPersonalIDEnumLiteralDeclaration_17());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
