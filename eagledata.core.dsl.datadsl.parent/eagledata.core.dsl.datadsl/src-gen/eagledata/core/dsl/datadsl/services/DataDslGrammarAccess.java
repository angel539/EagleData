/*
 * generated by Xtext 2.9.1
 */
package eagledata.core.dsl.datadsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DataDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class DataModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.DataModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDataModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cImportKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cImportURIAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cImportURIEStringParserRuleCall_1_1_0 = (RuleCall)cImportURIAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cImportURIAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cImportURIEStringParserRuleCall_1_2_1_0 = (RuleCall)cImportURIAssignment_1_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDescriptionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionsDataDescriptionParserRuleCall_3_0 = (RuleCall)cDescriptionsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDescriptionsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDescriptionsDataDescriptionParserRuleCall_4_1_0 = (RuleCall)cDescriptionsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DataModel:
		//	{DataModel} ('import' importURI+=EString ("," importURI+=EString)*)?
		//	'{' descriptions+=DataDescription ("," descriptions+=DataDescription)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{DataModel} ('import' importURI+=EString ("," importURI+=EString)*)? '{' descriptions+=DataDescription (","
		//descriptions+=DataDescription)* '}'
		public Group getGroup() { return cGroup; }
		
		//{DataModel}
		public Action getDataModelAction_0() { return cDataModelAction_0; }
		
		//('import' importURI+=EString ("," importURI+=EString)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'import'
		public Keyword getImportKeyword_1_0() { return cImportKeyword_1_0; }
		
		//importURI+=EString
		public Assignment getImportURIAssignment_1_1() { return cImportURIAssignment_1_1; }
		
		//EString
		public RuleCall getImportURIEStringParserRuleCall_1_1_0() { return cImportURIEStringParserRuleCall_1_1_0; }
		
		//("," importURI+=EString)*
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//","
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }
		
		//importURI+=EString
		public Assignment getImportURIAssignment_1_2_1() { return cImportURIAssignment_1_2_1; }
		
		//EString
		public RuleCall getImportURIEStringParserRuleCall_1_2_1_0() { return cImportURIEStringParserRuleCall_1_2_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//descriptions+=DataDescription
		public Assignment getDescriptionsAssignment_3() { return cDescriptionsAssignment_3; }
		
		//DataDescription
		public RuleCall getDescriptionsDataDescriptionParserRuleCall_3_0() { return cDescriptionsDataDescriptionParserRuleCall_3_0; }
		
		//("," descriptions+=DataDescription)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//descriptions+=DataDescription
		public Assignment getDescriptionsAssignment_4_1() { return cDescriptionsAssignment_4_1; }
		
		//DataDescription
		public RuleCall getDescriptionsDataDescriptionParserRuleCall_4_1_0() { return cDescriptionsDataDescriptionParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DataDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.DataDescription");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataSourceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDataFragmentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//DataDescription:
		//	DataSource | DataFragment;
		@Override public ParserRule getRule() { return rule; }
		
		//DataSource | DataFragment
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DataSource
		public RuleCall getDataSourceParserRuleCall_0() { return cDataSourceParserRuleCall_0; }
		
		//DataFragment
		public RuleCall getDataFragmentParserRuleCall_1() { return cDataFragmentParserRuleCall_1; }
	}
	public class DataSourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.DataSource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDescriptionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFormatAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFormatFormatSpecificationParserRuleCall_1_0 = (RuleCall)cFormatAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cLinkAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cLinkEStringParserRuleCall_3_0_0 = (RuleCall)cLinkAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cLinkAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cLinkEStringParserRuleCall_3_1_1_0 = (RuleCall)cLinkAssignment_3_1_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cUsesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cFragmentsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cFragmentsDataFragmentCrossReference_4_1_0 = (CrossReference)cFragmentsAssignment_4_1.eContents().get(0);
		private final RuleCall cFragmentsDataFragmentEStringParserRuleCall_4_1_0_1 = (RuleCall)cFragmentsDataFragmentCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cFragmentsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cFragmentsDataFragmentCrossReference_4_2_1_0 = (CrossReference)cFragmentsAssignment_4_2_1.eContents().get(0);
		private final RuleCall cFragmentsDataFragmentEStringParserRuleCall_4_2_1_0_1 = (RuleCall)cFragmentsDataFragmentCrossReference_4_2_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cNodesAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cNodesNodeParserRuleCall_7_0_0 = (RuleCall)cNodesAssignment_7_0.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cGroup_7.eContents().get(1);
		private final Keyword cCommaKeyword_7_1_0 = (Keyword)cGroup_7_1.eContents().get(0);
		private final Assignment cNodesAssignment_7_1_1 = (Assignment)cGroup_7_1.eContents().get(1);
		private final RuleCall cNodesNodeParserRuleCall_7_1_1_0 = (RuleCall)cNodesAssignment_7_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cLeftSquareBracketKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cOptionsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cOptionsOptionParserRuleCall_9_1_0 = (RuleCall)cOptionsAssignment_9_1.eContents().get(0);
		private final Group cGroup_9_2 = (Group)cGroup_9.eContents().get(2);
		private final Keyword cCommaKeyword_9_2_0 = (Keyword)cGroup_9_2.eContents().get(0);
		private final Assignment cOptionsAssignment_9_2_1 = (Assignment)cGroup_9_2.eContents().get(1);
		private final RuleCall cOptionsOptionParserRuleCall_9_2_1_0 = (RuleCall)cOptionsAssignment_9_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		
		//DataSource:
		//	'description' format=FormatSpecification name=EString (link+=EString (',' link+=EString)*)? ('uses'
		//	fragments+=[DataFragment|EString] (',' fragments+=[DataFragment|EString])*)? '=' '{' (nodes+=Node (","
		//	nodes+=Node)*)?
		//	'}' ('[' options+=Option ("," options+=Option)* ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'description' format=FormatSpecification name=EString (link+=EString (',' link+=EString)*)? ('uses'
		//fragments+=[DataFragment|EString] (',' fragments+=[DataFragment|EString])*)? '=' '{' (nodes+=Node ("," nodes+=Node)*)?
		//'}' ('[' options+=Option ("," options+=Option)* ']')?
		public Group getGroup() { return cGroup; }
		
		//'description'
		public Keyword getDescriptionKeyword_0() { return cDescriptionKeyword_0; }
		
		//format=FormatSpecification
		public Assignment getFormatAssignment_1() { return cFormatAssignment_1; }
		
		//FormatSpecification
		public RuleCall getFormatFormatSpecificationParserRuleCall_1_0() { return cFormatFormatSpecificationParserRuleCall_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//(link+=EString (',' link+=EString)*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//link+=EString
		public Assignment getLinkAssignment_3_0() { return cLinkAssignment_3_0; }
		
		//EString
		public RuleCall getLinkEStringParserRuleCall_3_0_0() { return cLinkEStringParserRuleCall_3_0_0; }
		
		//(',' link+=EString)*
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//','
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }
		
		//link+=EString
		public Assignment getLinkAssignment_3_1_1() { return cLinkAssignment_3_1_1; }
		
		//EString
		public RuleCall getLinkEStringParserRuleCall_3_1_1_0() { return cLinkEStringParserRuleCall_3_1_1_0; }
		
		//('uses' fragments+=[DataFragment|EString] (',' fragments+=[DataFragment|EString])*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'uses'
		public Keyword getUsesKeyword_4_0() { return cUsesKeyword_4_0; }
		
		//fragments+=[DataFragment|EString]
		public Assignment getFragmentsAssignment_4_1() { return cFragmentsAssignment_4_1; }
		
		//[DataFragment|EString]
		public CrossReference getFragmentsDataFragmentCrossReference_4_1_0() { return cFragmentsDataFragmentCrossReference_4_1_0; }
		
		//EString
		public RuleCall getFragmentsDataFragmentEStringParserRuleCall_4_1_0_1() { return cFragmentsDataFragmentEStringParserRuleCall_4_1_0_1; }
		
		//(',' fragments+=[DataFragment|EString])*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//','
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//fragments+=[DataFragment|EString]
		public Assignment getFragmentsAssignment_4_2_1() { return cFragmentsAssignment_4_2_1; }
		
		//[DataFragment|EString]
		public CrossReference getFragmentsDataFragmentCrossReference_4_2_1_0() { return cFragmentsDataFragmentCrossReference_4_2_1_0; }
		
		//EString
		public RuleCall getFragmentsDataFragmentEStringParserRuleCall_4_2_1_0_1() { return cFragmentsDataFragmentEStringParserRuleCall_4_2_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_5() { return cEqualsSignKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//(nodes+=Node ("," nodes+=Node)*)?
		public Group getGroup_7() { return cGroup_7; }
		
		//nodes+=Node
		public Assignment getNodesAssignment_7_0() { return cNodesAssignment_7_0; }
		
		//Node
		public RuleCall getNodesNodeParserRuleCall_7_0_0() { return cNodesNodeParserRuleCall_7_0_0; }
		
		//("," nodes+=Node)*
		public Group getGroup_7_1() { return cGroup_7_1; }
		
		//","
		public Keyword getCommaKeyword_7_1_0() { return cCommaKeyword_7_1_0; }
		
		//nodes+=Node
		public Assignment getNodesAssignment_7_1_1() { return cNodesAssignment_7_1_1; }
		
		//Node
		public RuleCall getNodesNodeParserRuleCall_7_1_1_0() { return cNodesNodeParserRuleCall_7_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//('[' options+=Option ("," options+=Option)* ']')?
		public Group getGroup_9() { return cGroup_9; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_9_0() { return cLeftSquareBracketKeyword_9_0; }
		
		//options+=Option
		public Assignment getOptionsAssignment_9_1() { return cOptionsAssignment_9_1; }
		
		//Option
		public RuleCall getOptionsOptionParserRuleCall_9_1_0() { return cOptionsOptionParserRuleCall_9_1_0; }
		
		//("," options+=Option)*
		public Group getGroup_9_2() { return cGroup_9_2; }
		
		//","
		public Keyword getCommaKeyword_9_2_0() { return cCommaKeyword_9_2_0; }
		
		//options+=Option
		public Assignment getOptionsAssignment_9_2_1() { return cOptionsAssignment_9_2_1; }
		
		//Option
		public RuleCall getOptionsOptionParserRuleCall_9_2_1_0() { return cOptionsOptionParserRuleCall_9_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_9_3() { return cRightSquareBracketKeyword_9_3; }
	}
	public class DataFragmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.DataFragment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFragmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cNodesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cNodesNodeParserRuleCall_4_0_0 = (RuleCall)cNodesAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cNodesAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cNodesNodeParserRuleCall_4_1_1_0 = (RuleCall)cNodesAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DataFragment:
		//	'fragment' name=EString '=' '{' (nodes+=Node ("," nodes+=Node)*)?
		//	'}' // ('[' options+=Option ("," options+=Option)* ']')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'fragment' name=EString '=' '{' (nodes+=Node ("," nodes+=Node)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//'fragment'
		public Keyword getFragmentKeyword_0() { return cFragmentKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(nodes+=Node ("," nodes+=Node)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//nodes+=Node
		public Assignment getNodesAssignment_4_0() { return cNodesAssignment_4_0; }
		
		//Node
		public RuleCall getNodesNodeParserRuleCall_4_0_0() { return cNodesNodeParserRuleCall_4_0_0; }
		
		//("," nodes+=Node)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//nodes+=Node
		public Assignment getNodesAssignment_4_1_1() { return cNodesAssignment_4_1_1; }
		
		//Node
		public RuleCall getNodesNodeParserRuleCall_4_1_1_0() { return cNodesNodeParserRuleCall_4_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class FormatSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.FormatSpecification");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cSpecialFormatAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cSpecialFormatEStringParserRuleCall_0_0 = (RuleCall)cSpecialFormatAssignment_0.eContents().get(0);
		private final Assignment cFormatAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cFormatFormatKindEnumRuleCall_1_0 = (RuleCall)cFormatAssignment_1.eContents().get(0);
		
		//FormatSpecification:
		//	specialFormat=EString | format=FormatKind;
		@Override public ParserRule getRule() { return rule; }
		
		//specialFormat=EString | format=FormatKind
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//specialFormat=EString
		public Assignment getSpecialFormatAssignment_0() { return cSpecialFormatAssignment_0; }
		
		//EString
		public RuleCall getSpecialFormatEStringParserRuleCall_0_0() { return cSpecialFormatEStringParserRuleCall_0_0; }
		
		//format=FormatKind
		public Assignment getFormatAssignment_1() { return cFormatAssignment_1; }
		
		//FormatKind
		public RuleCall getFormatFormatKindEnumRuleCall_1_0() { return cFormatFormatKindEnumRuleCall_1_0; }
	}
	public class OptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.Option");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOptionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKeyEStringParserRuleCall_1_0 = (RuleCall)cKeyAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValuesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValuesEStringParserRuleCall_4_0 = (RuleCall)cValuesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cValuesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cValuesEStringParserRuleCall_5_1_0 = (RuleCall)cValuesAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Option:
		//	{Option} key=EString '=' '{' values+=EString (',' values+=EString)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Option} key=EString '=' '{' values+=EString (',' values+=EString)* '}'
		public Group getGroup() { return cGroup; }
		
		//{Option}
		public Action getOptionAction_0() { return cOptionAction_0; }
		
		//key=EString
		public Assignment getKeyAssignment_1() { return cKeyAssignment_1; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_1_0() { return cKeyEStringParserRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//values+=EString
		public Assignment getValuesAssignment_4() { return cValuesAssignment_4; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_4_0() { return cValuesEStringParserRuleCall_4_0; }
		
		//(',' values+=EString)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//values+=EString
		public Assignment getValuesAssignment_5_1() { return cValuesAssignment_5_1; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_5_1_0() { return cValuesEStringParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class NodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.Node");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCompositeNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLeafNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Node:
		//	CompositeNode | LeafNode;
		@Override public ParserRule getRule() { return rule; }
		
		//CompositeNode | LeafNode
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CompositeNode
		public RuleCall getCompositeNodeParserRuleCall_0() { return cCompositeNodeParserRuleCall_0; }
		
		//LeafNode
		public RuleCall getLeafNodeParserRuleCall_1() { return cLeafNodeParserRuleCall_1; }
	}
	public class CompositeNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.CompositeNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCompositeNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cEnvironmentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cEnvironmentGreaterThanSignKeyword_1_0 = (Keyword)cEnvironmentAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cRepresentedAsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRepresentedAsEStringParserRuleCall_3_0 = (RuleCall)cRepresentedAsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExtendsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cExtendsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cExtendsCompositeNodeCrossReference_4_1_0 = (CrossReference)cExtendsAssignment_4_1.eContents().get(0);
		private final RuleCall cExtendsCompositeNodeEStringParserRuleCall_4_1_0_1 = (RuleCall)cExtendsCompositeNodeCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cExtendsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cExtendsCompositeNodeCrossReference_4_2_1_0 = (CrossReference)cExtendsAssignment_4_2_1.eContents().get(0);
		private final RuleCall cExtendsCompositeNodeEStringParserRuleCall_4_2_1_0_1 = (RuleCall)cExtendsCompositeNodeCrossReference_4_2_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Assignment cSubnodesAssignment_5_2_0 = (Assignment)cGroup_5_2.eContents().get(0);
		private final RuleCall cSubnodesNodeParserRuleCall_5_2_0_0 = (RuleCall)cSubnodesAssignment_5_2_0.eContents().get(0);
		private final Group cGroup_5_2_1 = (Group)cGroup_5_2.eContents().get(1);
		private final Keyword cCommaKeyword_5_2_1_0 = (Keyword)cGroup_5_2_1.eContents().get(0);
		private final Assignment cSubnodesAssignment_5_2_1_1 = (Assignment)cGroup_5_2_1.eContents().get(1);
		private final RuleCall cSubnodesNodeParserRuleCall_5_2_1_1_0 = (RuleCall)cSubnodesAssignment_5_2_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//CompositeNode:
		//	{CompositeNode} environment?=">"? name=EString representedAs=EString? ('extends' extends+=[CompositeNode|EString]
		//	(',' extends+=[CompositeNode|EString])*)? ('=' '(' (subnodes+=Node ("," subnodes+=Node)*)?) ')'
		//	// ((",")? deprecations+=NodeDeprecation ("," deprecations+=NodeDeprecation)*)?')')? 
		//	//('{' options+=Option ( "," options+=Option)* '}')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{CompositeNode} environment?=">"? name=EString representedAs=EString? ('extends' extends+=[CompositeNode|EString] (','
		//extends+=[CompositeNode|EString])*)? ('=' '(' (subnodes+=Node ("," subnodes+=Node)*)?) ')'
		public Group getGroup() { return cGroup; }
		
		//{CompositeNode}
		public Action getCompositeNodeAction_0() { return cCompositeNodeAction_0; }
		
		//environment?=">"?
		public Assignment getEnvironmentAssignment_1() { return cEnvironmentAssignment_1; }
		
		//">"
		public Keyword getEnvironmentGreaterThanSignKeyword_1_0() { return cEnvironmentGreaterThanSignKeyword_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//representedAs=EString?
		public Assignment getRepresentedAsAssignment_3() { return cRepresentedAsAssignment_3; }
		
		//EString
		public RuleCall getRepresentedAsEStringParserRuleCall_3_0() { return cRepresentedAsEStringParserRuleCall_3_0; }
		
		//('extends' extends+=[CompositeNode|EString] (',' extends+=[CompositeNode|EString])*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'extends'
		public Keyword getExtendsKeyword_4_0() { return cExtendsKeyword_4_0; }
		
		//extends+=[CompositeNode|EString]
		public Assignment getExtendsAssignment_4_1() { return cExtendsAssignment_4_1; }
		
		//[CompositeNode|EString]
		public CrossReference getExtendsCompositeNodeCrossReference_4_1_0() { return cExtendsCompositeNodeCrossReference_4_1_0; }
		
		//EString
		public RuleCall getExtendsCompositeNodeEStringParserRuleCall_4_1_0_1() { return cExtendsCompositeNodeEStringParserRuleCall_4_1_0_1; }
		
		//(',' extends+=[CompositeNode|EString])*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//','
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//extends+=[CompositeNode|EString]
		public Assignment getExtendsAssignment_4_2_1() { return cExtendsAssignment_4_2_1; }
		
		//[CompositeNode|EString]
		public CrossReference getExtendsCompositeNodeCrossReference_4_2_1_0() { return cExtendsCompositeNodeCrossReference_4_2_1_0; }
		
		//EString
		public RuleCall getExtendsCompositeNodeEStringParserRuleCall_4_2_1_0_1() { return cExtendsCompositeNodeEStringParserRuleCall_4_2_1_0_1; }
		
		//('=' '(' (subnodes+=Node ("," subnodes+=Node)*)?)
		public Group getGroup_5() { return cGroup_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_0() { return cEqualsSignKeyword_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }
		
		//(subnodes+=Node ("," subnodes+=Node)*)?
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//subnodes+=Node
		public Assignment getSubnodesAssignment_5_2_0() { return cSubnodesAssignment_5_2_0; }
		
		//Node
		public RuleCall getSubnodesNodeParserRuleCall_5_2_0_0() { return cSubnodesNodeParserRuleCall_5_2_0_0; }
		
		//("," subnodes+=Node)*
		public Group getGroup_5_2_1() { return cGroup_5_2_1; }
		
		//","
		public Keyword getCommaKeyword_5_2_1_0() { return cCommaKeyword_5_2_1_0; }
		
		//subnodes+=Node
		public Assignment getSubnodesAssignment_5_2_1_1() { return cSubnodesAssignment_5_2_1_1; }
		
		//Node
		public RuleCall getSubnodesNodeParserRuleCall_5_2_1_1_0() { return cSubnodesNodeParserRuleCall_5_2_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class LeafNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.LeafNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLeafNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cKeyKeyKeyword_1_0 = (Keyword)cKeyAssignment_1.eContents().get(0);
		private final Assignment cUniqueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cUniqueUniqueKeyword_2_0 = (Keyword)cUniqueAssignment_2.eContents().get(0);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeTypeSpecificationParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Assignment cKeywordAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cKeywordNumberSignKeyword_4_0 = (Keyword)cKeywordAssignment_4.eContents().get(0);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameEStringParserRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Assignment cRepresentedAsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cRepresentedAsEStringParserRuleCall_6_0 = (RuleCall)cRepresentedAsAssignment_6.eContents().get(0);
		
		/// *NodeDeprecation returns NodeDeprecation:
		//	Remove | Retype | Rename
		//;* / LeafNode:
		//	{LeafNode} key?='key'? unique?='unique'? type=TypeSpecification keyword?="#"? name=EString representedAs=EString? // ('{' options+=Option ( "," options+=Option)* '}' )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{LeafNode} key?='key'? unique?='unique'? type=TypeSpecification keyword?="#"? name=EString representedAs=EString?
		public Group getGroup() { return cGroup; }
		
		//{LeafNode}
		public Action getLeafNodeAction_0() { return cLeafNodeAction_0; }
		
		//key?='key'?
		public Assignment getKeyAssignment_1() { return cKeyAssignment_1; }
		
		//'key'
		public Keyword getKeyKeyKeyword_1_0() { return cKeyKeyKeyword_1_0; }
		
		//unique?='unique'?
		public Assignment getUniqueAssignment_2() { return cUniqueAssignment_2; }
		
		//'unique'
		public Keyword getUniqueUniqueKeyword_2_0() { return cUniqueUniqueKeyword_2_0; }
		
		//type=TypeSpecification
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//TypeSpecification
		public RuleCall getTypeTypeSpecificationParserRuleCall_3_0() { return cTypeTypeSpecificationParserRuleCall_3_0; }
		
		//keyword?="#"?
		public Assignment getKeywordAssignment_4() { return cKeywordAssignment_4; }
		
		//"#"
		public Keyword getKeywordNumberSignKeyword_4_0() { return cKeywordNumberSignKeyword_4_0; }
		
		//name=EString
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_5_0() { return cNameEStringParserRuleCall_5_0; }
		
		//representedAs=EString?
		public Assignment getRepresentedAsAssignment_6() { return cRepresentedAsAssignment_6; }
		
		//EString
		public RuleCall getRepresentedAsEStringParserRuleCall_6_0() { return cRepresentedAsEStringParserRuleCall_6_0; }
	}
	public class TypeSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.TypeSpecification");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		/// *Remove returns Remove:
		//	{Remove}
		//	'remove' deprecated=[LeafNode|EString]
		//;
		//
		//Retype returns Retype:
		//	{Retype}
		//	'retype' deprecated=[LeafNode|EString] 'as' newType=TypeSpecification
		//;
		//
		//Rename returns Rename:
		//	{Rename}
		//	'rename' deprecated=[LeafNode|EString] 'as' newRepresentedAs=EString
		//;* / TypeSpecification:
		//	DataType | Reference;
		@Override public ParserRule getRule() { return rule; }
		
		//DataType | Reference
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DataType
		public RuleCall getDataTypeParserRuleCall_0() { return cDataTypeParserRuleCall_0; }
		
		//Reference
		public RuleCall getReferenceParserRuleCall_1() { return cReferenceParserRuleCall_1; }
	}
	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.DataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDataTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cSpecialTypeAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cSpecialTypeEStringParserRuleCall_1_0_0 = (RuleCall)cSpecialTypeAssignment_1_0.eContents().get(0);
		private final Assignment cTypeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cTypeTypeKindEnumRuleCall_1_1_0 = (RuleCall)cTypeAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMinAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cMinEIntParserRuleCall_2_1_0 = (RuleCall)cMinAssignment_2_1.eContents().get(0);
		private final Keyword cCommaKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cMaxAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cMaxEIntParserRuleCall_2_3_0 = (RuleCall)cMaxAssignment_2_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//DataType:
		//	{DataType} (specialType=EString | type=TypeKind) ('[' min=EInt ',' max=EInt? ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{DataType} (specialType=EString | type=TypeKind) ('[' min=EInt ',' max=EInt? ']')?
		public Group getGroup() { return cGroup; }
		
		//{DataType}
		public Action getDataTypeAction_0() { return cDataTypeAction_0; }
		
		//(specialType=EString | type=TypeKind)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//specialType=EString
		public Assignment getSpecialTypeAssignment_1_0() { return cSpecialTypeAssignment_1_0; }
		
		//EString
		public RuleCall getSpecialTypeEStringParserRuleCall_1_0_0() { return cSpecialTypeEStringParserRuleCall_1_0_0; }
		
		//type=TypeKind
		public Assignment getTypeAssignment_1_1() { return cTypeAssignment_1_1; }
		
		//TypeKind
		public RuleCall getTypeTypeKindEnumRuleCall_1_1_0() { return cTypeTypeKindEnumRuleCall_1_1_0; }
		
		//('[' min=EInt ',' max=EInt? ']')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }
		
		//min=EInt
		public Assignment getMinAssignment_2_1() { return cMinAssignment_2_1; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_2_1_0() { return cMinEIntParserRuleCall_2_1_0; }
		
		//','
		public Keyword getCommaKeyword_2_2() { return cCommaKeyword_2_2; }
		
		//max=EInt?
		public Assignment getMaxAssignment_2_3() { return cMaxAssignment_2_3; }
		
		//EInt
		public RuleCall getMaxEIntParserRuleCall_2_3_0() { return cMaxEIntParserRuleCall_2_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_4() { return cRightSquareBracketKeyword_2_4; }
	}
	public class ReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.Reference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReferenceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cReferenceTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cReferenceTypeCompositeNodeCrossReference_2_0 = (CrossReference)cReferenceTypeAssignment_2.eContents().get(0);
		private final RuleCall cReferenceTypeCompositeNodeEStringParserRuleCall_2_0_1 = (RuleCall)cReferenceTypeCompositeNodeCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMinAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMinEIntParserRuleCall_3_1_0 = (RuleCall)cMinAssignment_3_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cMaxAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cMaxEIntParserRuleCall_3_3_0 = (RuleCall)cMaxAssignment_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		
		//Reference:
		//	{Reference}
		//	"ref:" referenceType=[CompositeNode|EString] ('[' min=EInt ',' max=EInt? ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Reference} "ref:" referenceType=[CompositeNode|EString] ('[' min=EInt ',' max=EInt? ']')?
		public Group getGroup() { return cGroup; }
		
		//{Reference}
		public Action getReferenceAction_0() { return cReferenceAction_0; }
		
		//"ref:"
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//referenceType=[CompositeNode|EString]
		public Assignment getReferenceTypeAssignment_2() { return cReferenceTypeAssignment_2; }
		
		//[CompositeNode|EString]
		public CrossReference getReferenceTypeCompositeNodeCrossReference_2_0() { return cReferenceTypeCompositeNodeCrossReference_2_0; }
		
		//EString
		public RuleCall getReferenceTypeCompositeNodeEStringParserRuleCall_2_0_1() { return cReferenceTypeCompositeNodeEStringParserRuleCall_2_0_1; }
		
		//('[' min=EInt ',' max=EInt? ']')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }
		
		//min=EInt
		public Assignment getMinAssignment_3_1() { return cMinAssignment_3_1; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_3_1_0() { return cMinEIntParserRuleCall_3_1_0; }
		
		//','
		public Keyword getCommaKeyword_3_2() { return cCommaKeyword_3_2; }
		
		//max=EInt?
		public Assignment getMaxAssignment_3_3() { return cMaxAssignment_3_3; }
		
		//EInt
		public RuleCall getMaxEIntParserRuleCall_3_3_0() { return cMaxEIntParserRuleCall_3_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false'
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	
	public class FormatKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.FormatKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCSVEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCSVCSVKeyword_0_0 = (Keyword)cCSVEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cJSONEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cJSONJSONKeyword_1_0 = (Keyword)cJSONEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cXMLEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cXMLXMLKeyword_2_0 = (Keyword)cXMLEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum FormatKind:
		//	CSV | JSON | XML;
		public EnumRule getRule() { return rule; }
		
		//CSV | JSON | XML
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CSV
		public EnumLiteralDeclaration getCSVEnumLiteralDeclaration_0() { return cCSVEnumLiteralDeclaration_0; }
		
		//'CSV'
		public Keyword getCSVCSVKeyword_0_0() { return cCSVCSVKeyword_0_0; }
		
		//JSON
		public EnumLiteralDeclaration getJSONEnumLiteralDeclaration_1() { return cJSONEnumLiteralDeclaration_1; }
		
		//'JSON'
		public Keyword getJSONJSONKeyword_1_0() { return cJSONJSONKeyword_1_0; }
		
		//XML
		public EnumLiteralDeclaration getXMLEnumLiteralDeclaration_2() { return cXMLEnumLiteralDeclaration_2; }
		
		//'XML'
		public Keyword getXMLXMLKeyword_2_0() { return cXMLXMLKeyword_2_0; }
	}
	public class TypeKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "eagledata.core.dsl.datadsl.DataDsl.TypeKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStringStringKeyword_0_0 = (Keyword)cStringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNumeralEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNumeralNumeralKeyword_1_0 = (Keyword)cNumeralEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDateEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDateDateKeyword_2_0 = (Keyword)cDateEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cTimeEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cTimeTimeKeyword_3_0 = (Keyword)cTimeEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cYearEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cYearYearKeyword_4_0 = (Keyword)cYearEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cMonthEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cMonthMonthKeyword_5_0 = (Keyword)cMonthEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cDayEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cDayDayKeyword_6_0 = (Keyword)cDayEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cBooleanEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cBooleanBooleanKeyword_7_0 = (Keyword)cBooleanEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cPlaceEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cPlacePlaceKeyword_8_0 = (Keyword)cPlaceEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cLatitudeEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cLatitudeLatitudeKeyword_9_0 = (Keyword)cLatitudeEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cLongitudeEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cLongitudeLongitudeKeyword_10_0 = (Keyword)cLongitudeEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cUTMeEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cUTMeUTMeKeyword_11_0 = (Keyword)cUTMeEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cUTMnEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cUTMnUTMnKeyword_12_0 = (Keyword)cUTMnEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cUTMzEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cUTMzUTMzKeyword_13_0 = (Keyword)cUTMzEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cUTMHemiEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cUTMHemiUTMHemiKeyword_14_0 = (Keyword)cUTMHemiEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cNameEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cNameNameKeyword_15_0 = (Keyword)cNameEnumLiteralDeclaration_15.eContents().get(0);
		private final EnumLiteralDeclaration cFamilynameEnumLiteralDeclaration_16 = (EnumLiteralDeclaration)cAlternatives.eContents().get(16);
		private final Keyword cFamilynameFamilynameKeyword_16_0 = (Keyword)cFamilynameEnumLiteralDeclaration_16.eContents().get(0);
		private final EnumLiteralDeclaration cPersonalIDEnumLiteralDeclaration_17 = (EnumLiteralDeclaration)cAlternatives.eContents().get(17);
		private final Keyword cPersonalIDPersonalIDKeyword_17_0 = (Keyword)cPersonalIDEnumLiteralDeclaration_17.eContents().get(0);
		
		//enum TypeKind:
		//	string | numeral | date | time | year | month | day | boolean | place | latitude | longitude | UTMe | UTMn | UTMz |
		//	UTMHemi | name | familyname | personalID;
		public EnumRule getRule() { return rule; }
		
		//string | numeral | date | time | year | month | day | boolean | place | latitude | longitude | UTMe | UTMn | UTMz |
		//UTMHemi | name | familyname | personalID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//string
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_0() { return cStringEnumLiteralDeclaration_0; }
		
		//'string'
		public Keyword getStringStringKeyword_0_0() { return cStringStringKeyword_0_0; }
		
		//numeral
		public EnumLiteralDeclaration getNumeralEnumLiteralDeclaration_1() { return cNumeralEnumLiteralDeclaration_1; }
		
		//'numeral'
		public Keyword getNumeralNumeralKeyword_1_0() { return cNumeralNumeralKeyword_1_0; }
		
		//date
		public EnumLiteralDeclaration getDateEnumLiteralDeclaration_2() { return cDateEnumLiteralDeclaration_2; }
		
		//'date'
		public Keyword getDateDateKeyword_2_0() { return cDateDateKeyword_2_0; }
		
		//time
		public EnumLiteralDeclaration getTimeEnumLiteralDeclaration_3() { return cTimeEnumLiteralDeclaration_3; }
		
		//'time'
		public Keyword getTimeTimeKeyword_3_0() { return cTimeTimeKeyword_3_0; }
		
		//year
		public EnumLiteralDeclaration getYearEnumLiteralDeclaration_4() { return cYearEnumLiteralDeclaration_4; }
		
		//'year'
		public Keyword getYearYearKeyword_4_0() { return cYearYearKeyword_4_0; }
		
		//month
		public EnumLiteralDeclaration getMonthEnumLiteralDeclaration_5() { return cMonthEnumLiteralDeclaration_5; }
		
		//'month'
		public Keyword getMonthMonthKeyword_5_0() { return cMonthMonthKeyword_5_0; }
		
		//day
		public EnumLiteralDeclaration getDayEnumLiteralDeclaration_6() { return cDayEnumLiteralDeclaration_6; }
		
		//'day'
		public Keyword getDayDayKeyword_6_0() { return cDayDayKeyword_6_0; }
		
		//boolean
		public EnumLiteralDeclaration getBooleanEnumLiteralDeclaration_7() { return cBooleanEnumLiteralDeclaration_7; }
		
		//'boolean'
		public Keyword getBooleanBooleanKeyword_7_0() { return cBooleanBooleanKeyword_7_0; }
		
		//place
		public EnumLiteralDeclaration getPlaceEnumLiteralDeclaration_8() { return cPlaceEnumLiteralDeclaration_8; }
		
		//'place'
		public Keyword getPlacePlaceKeyword_8_0() { return cPlacePlaceKeyword_8_0; }
		
		//latitude
		public EnumLiteralDeclaration getLatitudeEnumLiteralDeclaration_9() { return cLatitudeEnumLiteralDeclaration_9; }
		
		//'latitude'
		public Keyword getLatitudeLatitudeKeyword_9_0() { return cLatitudeLatitudeKeyword_9_0; }
		
		//longitude
		public EnumLiteralDeclaration getLongitudeEnumLiteralDeclaration_10() { return cLongitudeEnumLiteralDeclaration_10; }
		
		//'longitude'
		public Keyword getLongitudeLongitudeKeyword_10_0() { return cLongitudeLongitudeKeyword_10_0; }
		
		//UTMe
		public EnumLiteralDeclaration getUTMeEnumLiteralDeclaration_11() { return cUTMeEnumLiteralDeclaration_11; }
		
		//'UTMe'
		public Keyword getUTMeUTMeKeyword_11_0() { return cUTMeUTMeKeyword_11_0; }
		
		//UTMn
		public EnumLiteralDeclaration getUTMnEnumLiteralDeclaration_12() { return cUTMnEnumLiteralDeclaration_12; }
		
		//'UTMn'
		public Keyword getUTMnUTMnKeyword_12_0() { return cUTMnUTMnKeyword_12_0; }
		
		//UTMz
		public EnumLiteralDeclaration getUTMzEnumLiteralDeclaration_13() { return cUTMzEnumLiteralDeclaration_13; }
		
		//'UTMz'
		public Keyword getUTMzUTMzKeyword_13_0() { return cUTMzUTMzKeyword_13_0; }
		
		//UTMHemi
		public EnumLiteralDeclaration getUTMHemiEnumLiteralDeclaration_14() { return cUTMHemiEnumLiteralDeclaration_14; }
		
		//'UTMHemi'
		public Keyword getUTMHemiUTMHemiKeyword_14_0() { return cUTMHemiUTMHemiKeyword_14_0; }
		
		//name
		public EnumLiteralDeclaration getNameEnumLiteralDeclaration_15() { return cNameEnumLiteralDeclaration_15; }
		
		//'name'
		public Keyword getNameNameKeyword_15_0() { return cNameNameKeyword_15_0; }
		
		//familyname
		public EnumLiteralDeclaration getFamilynameEnumLiteralDeclaration_16() { return cFamilynameEnumLiteralDeclaration_16; }
		
		//'familyname'
		public Keyword getFamilynameFamilynameKeyword_16_0() { return cFamilynameFamilynameKeyword_16_0; }
		
		//personalID
		public EnumLiteralDeclaration getPersonalIDEnumLiteralDeclaration_17() { return cPersonalIDEnumLiteralDeclaration_17; }
		
		//'personalID'
		public Keyword getPersonalIDPersonalIDKeyword_17_0() { return cPersonalIDPersonalIDKeyword_17_0; }
	}
	
	private final DataModelElements pDataModel;
	private final DataDescriptionElements pDataDescription;
	private final DataSourceElements pDataSource;
	private final DataFragmentElements pDataFragment;
	private final FormatSpecificationElements pFormatSpecification;
	private final FormatKindElements eFormatKind;
	private final OptionElements pOption;
	private final NodeElements pNode;
	private final CompositeNodeElements pCompositeNode;
	private final LeafNodeElements pLeafNode;
	private final TypeSpecificationElements pTypeSpecification;
	private final DataTypeElements pDataType;
	private final ReferenceElements pReference;
	private final TypeKindElements eTypeKind;
	private final EStringElements pEString;
	private final EBooleanElements pEBoolean;
	private final EIntElements pEInt;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DataDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDataModel = new DataModelElements();
		this.pDataDescription = new DataDescriptionElements();
		this.pDataSource = new DataSourceElements();
		this.pDataFragment = new DataFragmentElements();
		this.pFormatSpecification = new FormatSpecificationElements();
		this.eFormatKind = new FormatKindElements();
		this.pOption = new OptionElements();
		this.pNode = new NodeElements();
		this.pCompositeNode = new CompositeNodeElements();
		this.pLeafNode = new LeafNodeElements();
		this.pTypeSpecification = new TypeSpecificationElements();
		this.pDataType = new DataTypeElements();
		this.pReference = new ReferenceElements();
		this.eTypeKind = new TypeKindElements();
		this.pEString = new EStringElements();
		this.pEBoolean = new EBooleanElements();
		this.pEInt = new EIntElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("eagledata.core.dsl.datadsl.DataDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//DataModel:
	//	{DataModel} ('import' importURI+=EString ("," importURI+=EString)*)?
	//	'{' descriptions+=DataDescription ("," descriptions+=DataDescription)* '}';
	public DataModelElements getDataModelAccess() {
		return pDataModel;
	}
	
	public ParserRule getDataModelRule() {
		return getDataModelAccess().getRule();
	}
	
	//DataDescription:
	//	DataSource | DataFragment;
	public DataDescriptionElements getDataDescriptionAccess() {
		return pDataDescription;
	}
	
	public ParserRule getDataDescriptionRule() {
		return getDataDescriptionAccess().getRule();
	}
	
	//DataSource:
	//	'description' format=FormatSpecification name=EString (link+=EString (',' link+=EString)*)? ('uses'
	//	fragments+=[DataFragment|EString] (',' fragments+=[DataFragment|EString])*)? '=' '{' (nodes+=Node (","
	//	nodes+=Node)*)?
	//	'}' ('[' options+=Option ("," options+=Option)* ']')?;
	public DataSourceElements getDataSourceAccess() {
		return pDataSource;
	}
	
	public ParserRule getDataSourceRule() {
		return getDataSourceAccess().getRule();
	}
	
	//DataFragment:
	//	'fragment' name=EString '=' '{' (nodes+=Node ("," nodes+=Node)*)?
	//	'}' // ('[' options+=Option ("," options+=Option)* ']')?
	//;
	public DataFragmentElements getDataFragmentAccess() {
		return pDataFragment;
	}
	
	public ParserRule getDataFragmentRule() {
		return getDataFragmentAccess().getRule();
	}
	
	//FormatSpecification:
	//	specialFormat=EString | format=FormatKind;
	public FormatSpecificationElements getFormatSpecificationAccess() {
		return pFormatSpecification;
	}
	
	public ParserRule getFormatSpecificationRule() {
		return getFormatSpecificationAccess().getRule();
	}
	
	//enum FormatKind:
	//	CSV | JSON | XML;
	public FormatKindElements getFormatKindAccess() {
		return eFormatKind;
	}
	
	public EnumRule getFormatKindRule() {
		return getFormatKindAccess().getRule();
	}
	
	//Option:
	//	{Option} key=EString '=' '{' values+=EString (',' values+=EString)* '}';
	public OptionElements getOptionAccess() {
		return pOption;
	}
	
	public ParserRule getOptionRule() {
		return getOptionAccess().getRule();
	}
	
	//Node:
	//	CompositeNode | LeafNode;
	public NodeElements getNodeAccess() {
		return pNode;
	}
	
	public ParserRule getNodeRule() {
		return getNodeAccess().getRule();
	}
	
	//CompositeNode:
	//	{CompositeNode} environment?=">"? name=EString representedAs=EString? ('extends' extends+=[CompositeNode|EString]
	//	(',' extends+=[CompositeNode|EString])*)? ('=' '(' (subnodes+=Node ("," subnodes+=Node)*)?) ')'
	//	// ((",")? deprecations+=NodeDeprecation ("," deprecations+=NodeDeprecation)*)?')')? 
	//	//('{' options+=Option ( "," options+=Option)* '}')?
	//;
	public CompositeNodeElements getCompositeNodeAccess() {
		return pCompositeNode;
	}
	
	public ParserRule getCompositeNodeRule() {
		return getCompositeNodeAccess().getRule();
	}
	
	/// *NodeDeprecation returns NodeDeprecation:
	//	Remove | Retype | Rename
	//;* / LeafNode:
	//	{LeafNode} key?='key'? unique?='unique'? type=TypeSpecification keyword?="#"? name=EString representedAs=EString? // ('{' options+=Option ( "," options+=Option)* '}' )?
	//;
	public LeafNodeElements getLeafNodeAccess() {
		return pLeafNode;
	}
	
	public ParserRule getLeafNodeRule() {
		return getLeafNodeAccess().getRule();
	}
	
	/// *Remove returns Remove:
	//	{Remove}
	//	'remove' deprecated=[LeafNode|EString]
	//;
	//
	//Retype returns Retype:
	//	{Retype}
	//	'retype' deprecated=[LeafNode|EString] 'as' newType=TypeSpecification
	//;
	//
	//Rename returns Rename:
	//	{Rename}
	//	'rename' deprecated=[LeafNode|EString] 'as' newRepresentedAs=EString
	//;* / TypeSpecification:
	//	DataType | Reference;
	public TypeSpecificationElements getTypeSpecificationAccess() {
		return pTypeSpecification;
	}
	
	public ParserRule getTypeSpecificationRule() {
		return getTypeSpecificationAccess().getRule();
	}
	
	//DataType:
	//	{DataType} (specialType=EString | type=TypeKind) ('[' min=EInt ',' max=EInt? ']')?;
	public DataTypeElements getDataTypeAccess() {
		return pDataType;
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}
	
	//Reference:
	//	{Reference}
	//	"ref:" referenceType=[CompositeNode|EString] ('[' min=EInt ',' max=EInt? ']')?;
	public ReferenceElements getReferenceAccess() {
		return pReference;
	}
	
	public ParserRule getReferenceRule() {
		return getReferenceAccess().getRule();
	}
	
	//enum TypeKind:
	//	string | numeral | date | time | year | month | day | boolean | place | latitude | longitude | UTMe | UTMn | UTMz |
	//	UTMHemi | name | familyname | personalID;
	public TypeKindElements getTypeKindAccess() {
		return eTypeKind;
	}
	
	public EnumRule getTypeKindRule() {
		return getTypeKindAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false'
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
