/*
 * generated by Xtext 2.9.2
 */
grammar InternalPatternDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package eagledata.core.dsl.pattern.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package eagledata.core.dsl.pattern.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import eagledata.core.dsl.pattern.services.PatternDslGrammarAccess;

}
@parser::members {
	private PatternDslGrammarAccess grammarAccess;

	public void setGrammarAccess(PatternDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleStreamingModel
entryRuleStreamingModel
:
{ before(grammarAccess.getStreamingModelRule()); }
	 ruleStreamingModel
{ after(grammarAccess.getStreamingModelRule()); } 
	 EOF 
;

// Rule StreamingModel
ruleStreamingModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamingModelAccess().getGroup()); }
		(rule__StreamingModel__Group__0)
		{ after(grammarAccess.getStreamingModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStreamingDescription
entryRuleStreamingDescription
:
{ before(grammarAccess.getStreamingDescriptionRule()); }
	 ruleStreamingDescription
{ after(grammarAccess.getStreamingDescriptionRule()); } 
	 EOF 
;

// Rule StreamingDescription
ruleStreamingDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamingDescriptionAccess().getAlternatives()); }
		(rule__StreamingDescription__Alternatives)
		{ after(grammarAccess.getStreamingDescriptionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeographicalElement
entryRuleGeographicalElement
:
{ before(grammarAccess.getGeographicalElementRule()); }
	 ruleGeographicalElement
{ after(grammarAccess.getGeographicalElementRule()); } 
	 EOF 
;

// Rule GeographicalElement
ruleGeographicalElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeographicalElementAccess().getAlternatives()); }
		(rule__GeographicalElement__Alternatives)
		{ after(grammarAccess.getGeographicalElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlace
entryRulePlace
:
{ before(grammarAccess.getPlaceRule()); }
	 rulePlace
{ after(grammarAccess.getPlaceRule()); } 
	 EOF 
;

// Rule Place
rulePlace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlaceAccess().getGroup()); }
		(rule__Place__Group__0)
		{ after(grammarAccess.getPlaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePoint
entryRulePoint
:
{ before(grammarAccess.getPointRule()); }
	 rulePoint
{ after(grammarAccess.getPointRule()); } 
	 EOF 
;

// Rule Point
rulePoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointAccess().getGroup()); }
		(rule__Point__Group__0)
		{ after(grammarAccess.getPointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCoordinate
entryRuleCoordinate
:
{ before(grammarAccess.getCoordinateRule()); }
	 ruleCoordinate
{ after(grammarAccess.getCoordinateRule()); } 
	 EOF 
;

// Rule Coordinate
ruleCoordinate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCoordinateAccess().getAlternatives()); }
		(rule__Coordinate__Alternatives)
		{ after(grammarAccess.getCoordinateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLatLong
entryRuleLatLong
:
{ before(grammarAccess.getLatLongRule()); }
	 ruleLatLong
{ after(grammarAccess.getLatLongRule()); } 
	 EOF 
;

// Rule LatLong
ruleLatLong 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLatLongAccess().getGroup()); }
		(rule__LatLong__Group__0)
		{ after(grammarAccess.getLatLongAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUTM
entryRuleUTM
:
{ before(grammarAccess.getUTMRule()); }
	 ruleUTM
{ after(grammarAccess.getUTMRule()); } 
	 EOF 
;

// Rule UTM
ruleUTM 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUTMAccess().getGroup()); }
		(rule__UTM__Group__0)
		{ after(grammarAccess.getUTMAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegion
entryRuleRegion
:
{ before(grammarAccess.getRegionRule()); }
	 ruleRegion
{ after(grammarAccess.getRegionRule()); } 
	 EOF 
;

// Rule Region
ruleRegion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegionAccess().getGroup()); }
		(rule__Region__Group__0)
		{ after(grammarAccess.getRegionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePatternMatcherElement
entryRulePatternMatcherElement
:
{ before(grammarAccess.getPatternMatcherElementRule()); }
	 rulePatternMatcherElement
{ after(grammarAccess.getPatternMatcherElementRule()); } 
	 EOF 
;

// Rule PatternMatcherElement
rulePatternMatcherElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternMatcherElementAccess().getAlternatives()); }
		(rule__PatternMatcherElement__Alternatives)
		{ after(grammarAccess.getPatternMatcherElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcept
entryRuleConcept
:
{ before(grammarAccess.getConceptRule()); }
	 ruleConcept
{ after(grammarAccess.getConceptRule()); } 
	 EOF 
;

// Rule Concept
ruleConcept 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConceptAccess().getAlternatives()); }
		(rule__Concept__Alternatives)
		{ after(grammarAccess.getConceptAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTermList
entryRuleTermList
:
{ before(grammarAccess.getTermListRule()); }
	 ruleTermList
{ after(grammarAccess.getTermListRule()); } 
	 EOF 
;

// Rule TermList
ruleTermList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermListAccess().getGroup()); }
		(rule__TermList__Group__0)
		{ after(grammarAccess.getTermListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTermKey
entryRuleTermKey
:
{ before(grammarAccess.getTermKeyRule()); }
	 ruleTermKey
{ after(grammarAccess.getTermKeyRule()); } 
	 EOF 
;

// Rule TermKey
ruleTermKey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermKeyAccess().getGroup()); }
		(rule__TermKey__Group__0)
		{ after(grammarAccess.getTermKeyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePhrase
entryRulePhrase
:
{ before(grammarAccess.getPhraseRule()); }
	 rulePhrase
{ after(grammarAccess.getPhraseRule()); } 
	 EOF 
;

// Rule Phrase
rulePhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPhraseAccess().getGroup()); }
		(rule__Phrase__Group__0)
		{ after(grammarAccess.getPhraseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOption
entryRuleOption
:
{ before(grammarAccess.getOptionRule()); }
	 ruleOption
{ after(grammarAccess.getOptionRule()); } 
	 EOF 
;

// Rule Option
ruleOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOptionAccess().getAlternatives()); }
		(rule__Option__Alternatives)
		{ after(grammarAccess.getOptionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeoOption
entryRuleGeoOption
:
{ before(grammarAccess.getGeoOptionRule()); }
	 ruleGeoOption
{ after(grammarAccess.getGeoOptionRule()); } 
	 EOF 
;

// Rule GeoOption
ruleGeoOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeoOptionAccess().getGroup()); }
		(rule__GeoOption__Group__0)
		{ after(grammarAccess.getGeoOptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceOption
entryRuleSourceOption
:
{ before(grammarAccess.getSourceOptionRule()); }
	 ruleSourceOption
{ after(grammarAccess.getSourceOptionRule()); } 
	 EOF 
;

// Rule SourceOption
ruleSourceOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceOptionAccess().getGroup()); }
		(rule__SourceOption__Group__0)
		{ after(grammarAccess.getSourceOptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLanguageOption
entryRuleLanguageOption
:
{ before(grammarAccess.getLanguageOptionRule()); }
	 ruleLanguageOption
{ after(grammarAccess.getLanguageOptionRule()); } 
	 EOF 
;

// Rule LanguageOption
ruleLanguageOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLanguageOptionAccess().getGroup()); }
		(rule__LanguageOption__Group__0)
		{ after(grammarAccess.getLanguageOptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanOption
entryRuleBooleanOption
:
{ before(grammarAccess.getBooleanOptionRule()); }
	 ruleBooleanOption
{ after(grammarAccess.getBooleanOptionRule()); } 
	 EOF 
;

// Rule BooleanOption
ruleBooleanOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanOptionAccess().getGroup()); }
		(rule__BooleanOption__Group__0)
		{ after(grammarAccess.getBooleanOptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntOption
entryRuleIntOption
:
{ before(grammarAccess.getIntOptionRule()); }
	 ruleIntOption
{ after(grammarAccess.getIntOptionRule()); } 
	 EOF 
;

// Rule IntOption
ruleIntOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntOptionAccess().getGroup()); }
		(rule__IntOption__Group__0)
		{ after(grammarAccess.getIntOptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BasicType
ruleBasicType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getAlternatives()); }
		(rule__BasicType__Alternatives)
		{ after(grammarAccess.getBasicTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule GeoOptionKey
ruleGeoOptionKey
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeoOptionKeyAccess().getInEnumLiteralDeclaration()); }
		('in')
		{ after(grammarAccess.getGeoOptionKeyAccess().getInEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule SourceOptionKey
ruleSourceOptionKey
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceOptionKeyAccess().getSourceEnumLiteralDeclaration()); }
		('source')
		{ after(grammarAccess.getSourceOptionKeyAccess().getSourceEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule LanguageOptionKey
ruleLanguageOptionKey
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageOptionKeyAccess().getLangEnumLiteralDeclaration()); }
		('language')
		{ after(grammarAccess.getLanguageOptionKeyAccess().getLangEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule IntOptionKey
ruleIntOptionKey
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntOptionKeyAccess().getAlternatives()); }
		(rule__IntOptionKey__Alternatives)
		{ after(grammarAccess.getIntOptionKeyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BooleanOptionKey
ruleBooleanOptionKey
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOptionKeyAccess().getAlternatives()); }
		(rule__BooleanOptionKey__Alternatives)
		{ after(grammarAccess.getBooleanOptionKeyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule WordListProperty
ruleWordListProperty
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWordListPropertyAccess().getAlternatives()); }
		(rule__WordListProperty__Alternatives)
		{ after(grammarAccess.getWordListPropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Source
ruleSource
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getAlternatives()); }
		(rule__Source__Alternatives)
		{ after(grammarAccess.getSourceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DistanceMesurement
ruleDistanceMesurement
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDistanceMesurementAccess().getAlternatives()); }
		(rule__DistanceMesurement__Alternatives)
		{ after(grammarAccess.getDistanceMesurementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Language
ruleLanguage
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageAccess().getAlternatives()); }
		(rule__Language__Alternatives)
		{ after(grammarAccess.getLanguageAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamingDescription__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamingDescriptionAccess().getImportParserRuleCall_0()); }
		ruleImport
		{ after(grammarAccess.getStreamingDescriptionAccess().getImportParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStreamingDescriptionAccess().getGeographicalElementParserRuleCall_1()); }
		ruleGeographicalElement
		{ after(grammarAccess.getStreamingDescriptionAccess().getGeographicalElementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStreamingDescriptionAccess().getPatternMatcherElementParserRuleCall_2()); }
		rulePatternMatcherElement
		{ after(grammarAccess.getStreamingDescriptionAccess().getPatternMatcherElementParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeographicalElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeographicalElementAccess().getPlaceParserRuleCall_0()); }
		rulePlace
		{ after(grammarAccess.getGeographicalElementAccess().getPlaceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getGeographicalElementAccess().getRegionParserRuleCall_1()); }
		ruleRegion
		{ after(grammarAccess.getGeographicalElementAccess().getRegionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinateAccess().getLatLongParserRuleCall_0()); }
		ruleLatLong
		{ after(grammarAccess.getCoordinateAccess().getLatLongParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCoordinateAccess().getUTMParserRuleCall_1()); }
		ruleUTM
		{ after(grammarAccess.getCoordinateAccess().getUTMParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternMatcherElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternMatcherElementAccess().getPhraseParserRuleCall_0()); }
		rulePhrase
		{ after(grammarAccess.getPatternMatcherElementAccess().getPhraseParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPatternMatcherElementAccess().getConceptParserRuleCall_1()); }
		ruleConcept
		{ after(grammarAccess.getPatternMatcherElementAccess().getConceptParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concept__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConceptAccess().getTermListParserRuleCall_0()); }
		ruleTermList
		{ after(grammarAccess.getConceptAccess().getTermListParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConceptAccess().getTermKeyParserRuleCall_1()); }
		ruleTermKey
		{ after(grammarAccess.getConceptAccess().getTermKeyParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionAccess().getBooleanOptionParserRuleCall_0()); }
		ruleBooleanOption
		{ after(grammarAccess.getOptionAccess().getBooleanOptionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOptionAccess().getGeoOptionParserRuleCall_1()); }
		ruleGeoOption
		{ after(grammarAccess.getOptionAccess().getGeoOptionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOptionAccess().getIntOptionParserRuleCall_2()); }
		ruleIntOption
		{ after(grammarAccess.getOptionAccess().getIntOptionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getOptionAccess().getLanguageOptionParserRuleCall_3()); }
		ruleLanguageOption
		{ after(grammarAccess.getOptionAccess().getLanguageOptionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getOptionAccess().getSourceOptionParserRuleCall_4()); }
		ruleSourceOption
		{ after(grammarAccess.getOptionAccess().getSourceOptionParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getStringEnumLiteralDeclaration_0()); }
		('String')
		{ after(grammarAccess.getBasicTypeAccess().getStringEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getUrlEnumLiteralDeclaration_1()); }
		('Url')
		{ after(grammarAccess.getBasicTypeAccess().getUrlEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getIntEnumLiteralDeclaration_2()); }
		('Int')
		{ after(grammarAccess.getBasicTypeAccess().getIntEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getLongIntEnumLiteralDeclaration_3()); }
		('LongInt')
		{ after(grammarAccess.getBasicTypeAccess().getLongIntEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getRealEnumLiteralDeclaration_4()); }
		('Real')
		{ after(grammarAccess.getBasicTypeAccess().getRealEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getDateEnumLiteralDeclaration_5()); }
		('Date')
		{ after(grammarAccess.getBasicTypeAccess().getDateEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getTimeEnumLiteralDeclaration_6()); }
		('Time')
		{ after(grammarAccess.getBasicTypeAccess().getTimeEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getYearEnumLiteralDeclaration_7()); }
		('Year')
		{ after(grammarAccess.getBasicTypeAccess().getYearEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getMonthEnumLiteralDeclaration_8()); }
		('Month')
		{ after(grammarAccess.getBasicTypeAccess().getMonthEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getDayEnumLiteralDeclaration_9()); }
		('Day')
		{ after(grammarAccess.getBasicTypeAccess().getDayEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getBooleanEnumLiteralDeclaration_10()); }
		('Boolean')
		{ after(grammarAccess.getBasicTypeAccess().getBooleanEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getLatEnumLiteralDeclaration_11()); }
		('Lat')
		{ after(grammarAccess.getBasicTypeAccess().getLatEnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getLongEnumLiteralDeclaration_12()); }
		('Long')
		{ after(grammarAccess.getBasicTypeAccess().getLongEnumLiteralDeclaration_12()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getPercentEnumLiteralDeclaration_13()); }
		('Percent')
		{ after(grammarAccess.getBasicTypeAccess().getPercentEnumLiteralDeclaration_13()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getEmailEnumLiteralDeclaration_14()); }
		('Email')
		{ after(grammarAccess.getBasicTypeAccess().getEmailEnumLiteralDeclaration_14()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getCurrencyEnumLiteralDeclaration_15()); }
		('Currency')
		{ after(grammarAccess.getBasicTypeAccess().getCurrencyEnumLiteralDeclaration_15()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getCreditcardEnumLiteralDeclaration_16()); }
		('CreditCard')
		{ after(grammarAccess.getBasicTypeAccess().getCreditcardEnumLiteralDeclaration_16()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getIBANEnumLiteralDeclaration_17()); }
		('IBAN')
		{ after(grammarAccess.getBasicTypeAccess().getIBANEnumLiteralDeclaration_17()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getISBNEnumLiteralDeclaration_18()); }
		('ISBN')
		{ after(grammarAccess.getBasicTypeAccess().getISBNEnumLiteralDeclaration_18()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getISSNEnumLiteralDeclaration_19()); }
		('ISSN')
		{ after(grammarAccess.getBasicTypeAccess().getISSNEnumLiteralDeclaration_19()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getInetEnumLiteralDeclaration_20()); }
		('Inet')
		{ after(grammarAccess.getBasicTypeAccess().getInetEnumLiteralDeclaration_20()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOptionKey__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntOptionKeyAccess().getLangEnumLiteralDeclaration_0()); }
		('minretweet')
		{ after(grammarAccess.getIntOptionKeyAccess().getLangEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntOptionKeyAccess().getSourceEnumLiteralDeclaration_1()); }
		('minfavorite')
		{ after(grammarAccess.getIntOptionKeyAccess().getSourceEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOptionKey__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOptionKeyAccess().getInreplytoEnumLiteralDeclaration_0()); }
		('inreplyto')
		{ after(grammarAccess.getBooleanOptionKeyAccess().getInreplytoEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanOptionKeyAccess().getRetweetEnumLiteralDeclaration_1()); }
		('retweet')
		{ after(grammarAccess.getBooleanOptionKeyAccess().getRetweetEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanOptionKeyAccess().getFavoriteEnumLiteralDeclaration_2()); }
		('favorite')
		{ after(grammarAccess.getBooleanOptionKeyAccess().getFavoriteEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WordListProperty__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWordListPropertyAccess().getAllEnumLiteralDeclaration_0()); }
		('all')
		{ after(grammarAccess.getWordListPropertyAccess().getAllEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getWordListPropertyAccess().getAnyEnumLiteralDeclaration_1()); }
		('any')
		{ after(grammarAccess.getWordListPropertyAccess().getAnyEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getAndroidEnumLiteralDeclaration_0()); }
		('android')
		{ after(grammarAccess.getSourceAccess().getAndroidEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSourceAccess().getIosEnumLiteralDeclaration_1()); }
		('ios')
		{ after(grammarAccess.getSourceAccess().getIosEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getSourceAccess().getWebEnumLiteralDeclaration_2()); }
		('web')
		{ after(grammarAccess.getSourceAccess().getWebEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getSourceAccess().getAllEnumLiteralDeclaration_3()); }
		('all')
		{ after(grammarAccess.getSourceAccess().getAllEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceMesurement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDistanceMesurementAccess().getKmsEnumLiteralDeclaration_0()); }
		('kms')
		{ after(grammarAccess.getDistanceMesurementAccess().getKmsEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDistanceMesurementAccess().getMilesEnumLiteralDeclaration_1()); }
		('miles')
		{ after(grammarAccess.getDistanceMesurementAccess().getMilesEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDistanceMesurementAccess().getMtsEnumLiteralDeclaration_2()); }
		('mts')
		{ after(grammarAccess.getDistanceMesurementAccess().getMtsEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageAccess().getEnEnumLiteralDeclaration_0()); }
		('english')
		{ after(grammarAccess.getLanguageAccess().getEnEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLanguageAccess().getEsEnumLiteralDeclaration_1()); }
		('spanish')
		{ after(grammarAccess.getLanguageAccess().getEsEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getLanguageAccess().getZhEnumLiteralDeclaration_2()); }
		('chinese')
		{ after(grammarAccess.getLanguageAccess().getZhEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamingModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamingModel__Group__0__Impl
	rule__StreamingModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamingModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamingModelAccess().getDescriptionsAssignment_0()); }
	(rule__StreamingModel__DescriptionsAssignment_0)
	{ after(grammarAccess.getStreamingModelAccess().getDescriptionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamingModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamingModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamingModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamingModelAccess().getDescriptionsAssignment_1()); }
	(rule__StreamingModel__DescriptionsAssignment_1)*
	{ after(grammarAccess.getStreamingModelAccess().getDescriptionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
	(rule__Import__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	('.*')?
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Place__Group__0__Impl
	rule__Place__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaceAccess().getPlaceKeyword_0()); }
	'place'
	{ after(grammarAccess.getPlaceAccess().getPlaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Place__Group__1__Impl
	rule__Place__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaceAccess().getNameAssignment_1()); }
	(rule__Place__NameAssignment_1)
	{ after(grammarAccess.getPlaceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Place__Group__2__Impl
	rule__Place__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaceAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getPlaceAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Place__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaceAccess().getPointAssignment_3()); }
	(rule__Place__PointAssignment_3)
	{ after(grammarAccess.getPlaceAccess().getPointAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__0__Impl
	rule__Point__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getGroup_0()); }
	(rule__Point__Group_0__0)?
	{ after(grammarAccess.getPointAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getCoordinatesAssignment_1()); }
	(rule__Point__CoordinatesAssignment_1)
	{ after(grammarAccess.getPointAccess().getCoordinatesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group_0__0__Impl
	rule__Point__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getRadiusAssignment_0_0()); }
	(rule__Point__RadiusAssignment_0_0)
	{ after(grammarAccess.getPointAccess().getRadiusAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group_0__1__Impl
	rule__Point__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getMesurementAssignment_0_1()); }
	(rule__Point__MesurementAssignment_0_1)
	{ after(grammarAccess.getPointAccess().getMesurementAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getArroundKeyword_0_2()); }
	'arround'
	{ after(grammarAccess.getPointAccess().getArroundKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LatLong__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LatLong__Group__0__Impl
	rule__LatLong__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LatLong__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLatLongAccess().getLatAssignment_0()); }
	(rule__LatLong__LatAssignment_0)
	{ after(grammarAccess.getLatLongAccess().getLatAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LatLong__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LatLong__Group__1__Impl
	rule__LatLong__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LatLong__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLatLongAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getLatLongAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LatLong__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LatLong__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LatLong__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLatLongAccess().getLongAssignment_2()); }
	(rule__LatLong__LongAssignment_2)
	{ after(grammarAccess.getLatLongAccess().getLongAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UTM__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UTM__Group__0__Impl
	rule__UTM__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUTMAccess().getUTMKeyword_0()); }
	'UTM'
	{ after(grammarAccess.getUTMAccess().getUTMKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UTM__Group__1__Impl
	rule__UTM__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUTMAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getUTMAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UTM__Group__2__Impl
	rule__UTM__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUTMAccess().getEAssignment_2()); }
	(rule__UTM__EAssignment_2)
	{ after(grammarAccess.getUTMAccess().getEAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UTM__Group__3__Impl
	rule__UTM__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUTMAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getUTMAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UTM__Group__4__Impl
	rule__UTM__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUTMAccess().getNAssignment_4()); }
	(rule__UTM__NAssignment_4)
	{ after(grammarAccess.getUTMAccess().getNAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UTM__Group__5__Impl
	rule__UTM__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUTMAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getUTMAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UTM__Group__6__Impl
	rule__UTM__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUTMAccess().getZAssignment_6()); }
	(rule__UTM__ZAssignment_6)
	{ after(grammarAccess.getUTMAccess().getZAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UTM__Group__7__Impl
	rule__UTM__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUTMAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getUTMAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UTM__Group__8__Impl
	rule__UTM__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUTMAccess().getHemiAssignment_8()); }
	(rule__UTM__HemiAssignment_8)
	{ after(grammarAccess.getUTMAccess().getHemiAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UTM__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUTMAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getUTMAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__0__Impl
	rule__Region__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getRegionKeyword_0()); }
	'region'
	{ after(grammarAccess.getRegionAccess().getRegionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__1__Impl
	rule__Region__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getNameAssignment_1()); }
	(rule__Region__NameAssignment_1)
	{ after(grammarAccess.getRegionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__2__Impl
	rule__Region__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getRegionAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__3__Impl
	rule__Region__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getRegionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__4__Impl
	rule__Region__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getSouthWestBoundaryAssignment_4()); }
	(rule__Region__SouthWestBoundaryAssignment_4)
	{ after(grammarAccess.getRegionAccess().getSouthWestBoundaryAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__5__Impl
	rule__Region__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getRegionAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__6__Impl
	rule__Region__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getNorthEastBoundaryAssignment_6()); }
	(rule__Region__NorthEastBoundaryAssignment_6)
	{ after(grammarAccess.getRegionAccess().getNorthEastBoundaryAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getRegionAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TermList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermList__Group__0__Impl
	rule__TermList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermListAccess().getListKeyword_0()); }
	'list'
	{ after(grammarAccess.getTermListAccess().getListKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermList__Group__1__Impl
	rule__TermList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermListAccess().getPropertyAssignment_1()); }
	(rule__TermList__PropertyAssignment_1)?
	{ after(grammarAccess.getTermListAccess().getPropertyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermList__Group__2__Impl
	rule__TermList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermListAccess().getNameAssignment_2()); }
	(rule__TermList__NameAssignment_2)
	{ after(grammarAccess.getTermListAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermList__Group__3__Impl
	rule__TermList__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermListAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getTermListAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermList__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermListAccess().getGroup_4()); }
	(rule__TermList__Group_4__0)?
	{ after(grammarAccess.getTermListAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TermList__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermList__Group_4__0__Impl
	rule__TermList__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermListAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getTermListAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermList__Group_4__1__Impl
	rule__TermList__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermListAccess().getTermsAssignment_4_1()); }
	(rule__TermList__TermsAssignment_4_1)
	{ after(grammarAccess.getTermListAccess().getTermsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermList__Group_4__2__Impl
	rule__TermList__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermListAccess().getGroup_4_2()); }
	(rule__TermList__Group_4_2__0)*
	{ after(grammarAccess.getTermListAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermList__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermListAccess().getRightParenthesisKeyword_4_3()); }
	')'
	{ after(grammarAccess.getTermListAccess().getRightParenthesisKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TermList__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermList__Group_4_2__0__Impl
	rule__TermList__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermListAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getTermListAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermList__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermListAccess().getTermsAssignment_4_2_1()); }
	(rule__TermList__TermsAssignment_4_2_1)
	{ after(grammarAccess.getTermListAccess().getTermsAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TermKey__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermKey__Group__0__Impl
	rule__TermKey__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TermKey__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermKeyAccess().getTypeAssignment_0()); }
	(rule__TermKey__TypeAssignment_0)
	{ after(grammarAccess.getTermKeyAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermKey__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermKey__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TermKey__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermKeyAccess().getNameAssignment_1()); }
	(rule__TermKey__NameAssignment_1)
	{ after(grammarAccess.getTermKeyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Phrase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group__0__Impl
	rule__Phrase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getPhraseKeyword_0()); }
	'phrase'
	{ after(grammarAccess.getPhraseAccess().getPhraseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group__1__Impl
	rule__Phrase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getNameAssignment_1()); }
	(rule__Phrase__NameAssignment_1)
	{ after(grammarAccess.getPhraseAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group__2__Impl
	rule__Phrase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getOrderedAssignment_2()); }
	(rule__Phrase__OrderedAssignment_2)?
	{ after(grammarAccess.getPhraseAccess().getOrderedAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group__3__Impl
	rule__Phrase__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getPhraseAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group__4__Impl
	rule__Phrase__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getConceptsAssignment_4()); }
	(rule__Phrase__ConceptsAssignment_4)
	{ after(grammarAccess.getPhraseAccess().getConceptsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group__5__Impl
	rule__Phrase__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getGroup_5()); }
	(rule__Phrase__Group_5__0)*
	{ after(grammarAccess.getPhraseAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group__6__Impl
	rule__Phrase__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getPhraseAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getGroup_7()); }
	(rule__Phrase__Group_7__0)?
	{ after(grammarAccess.getPhraseAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Phrase__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group_5__0__Impl
	rule__Phrase__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getPhraseAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getConceptsAssignment_5_1()); }
	(rule__Phrase__ConceptsAssignment_5_1)
	{ after(grammarAccess.getPhraseAccess().getConceptsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Phrase__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group_7__0__Impl
	rule__Phrase__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getLeftParenthesisKeyword_7_0()); }
	'('
	{ after(grammarAccess.getPhraseAccess().getLeftParenthesisKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group_7__1__Impl
	rule__Phrase__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getOptionsAssignment_7_1()); }
	(rule__Phrase__OptionsAssignment_7_1)
	{ after(grammarAccess.getPhraseAccess().getOptionsAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group_7__2__Impl
	rule__Phrase__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getGroup_7_2()); }
	(rule__Phrase__Group_7_2__0)*
	{ after(grammarAccess.getPhraseAccess().getGroup_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getRightParenthesisKeyword_7_3()); }
	')'
	{ after(grammarAccess.getPhraseAccess().getRightParenthesisKeyword_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Phrase__Group_7_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group_7_2__0__Impl
	rule__Phrase__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group_7_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getCommaKeyword_7_2_0()); }
	','
	{ after(grammarAccess.getPhraseAccess().getCommaKeyword_7_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group_7_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Phrase__Group_7_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__Group_7_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhraseAccess().getOptionsAssignment_7_2_1()); }
	(rule__Phrase__OptionsAssignment_7_2_1)
	{ after(grammarAccess.getPhraseAccess().getOptionsAssignment_7_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeoOption__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeoOption__Group__0__Impl
	rule__GeoOption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoOption__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeoOptionAccess().getKeyAssignment_0()); }
	(rule__GeoOption__KeyAssignment_0)
	{ after(grammarAccess.getGeoOptionAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoOption__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeoOption__Group__1__Impl
	rule__GeoOption__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoOption__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeoOptionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getGeoOptionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoOption__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeoOption__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoOption__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeoOptionAccess().getValueAssignment_2()); }
	(rule__GeoOption__ValueAssignment_2)
	{ after(grammarAccess.getGeoOptionAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceOption__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceOption__Group__0__Impl
	rule__SourceOption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceOption__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceOptionAccess().getKeyAssignment_0()); }
	(rule__SourceOption__KeyAssignment_0)
	{ after(grammarAccess.getSourceOptionAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceOption__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceOption__Group__1__Impl
	rule__SourceOption__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceOption__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceOptionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getSourceOptionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceOption__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceOption__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceOption__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceOptionAccess().getValueAssignment_2()); }
	(rule__SourceOption__ValueAssignment_2)
	{ after(grammarAccess.getSourceOptionAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageOption__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageOption__Group__0__Impl
	rule__LanguageOption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOption__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageOptionAccess().getKeyAssignment_0()); }
	(rule__LanguageOption__KeyAssignment_0)
	{ after(grammarAccess.getLanguageOptionAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOption__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageOption__Group__1__Impl
	rule__LanguageOption__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOption__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageOptionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getLanguageOptionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOption__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageOption__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOption__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageOptionAccess().getValueAssignment_2()); }
	(rule__LanguageOption__ValueAssignment_2)
	{ after(grammarAccess.getLanguageOptionAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanOption__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOption__Group__0__Impl
	rule__BooleanOption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOption__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOptionAccess().getKeyAssignment_0()); }
	(rule__BooleanOption__KeyAssignment_0)
	{ after(grammarAccess.getBooleanOptionAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOption__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOption__Group__1__Impl
	rule__BooleanOption__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOption__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOptionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getBooleanOptionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOption__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOption__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOption__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOptionAccess().getValueAssignment_2()); }
	(rule__BooleanOption__ValueAssignment_2)
	{ after(grammarAccess.getBooleanOptionAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntOption__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOption__Group__0__Impl
	rule__IntOption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOption__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOptionAccess().getKeyAssignment_0()); }
	(rule__IntOption__KeyAssignment_0)
	{ after(grammarAccess.getIntOptionAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOption__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOption__Group__1__Impl
	rule__IntOption__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOption__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOptionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getIntOptionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOption__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOption__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOption__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOptionAccess().getValueAssignment_2()); }
	(rule__IntOption__ValueAssignment_2)
	{ after(grammarAccess.getIntOptionAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamingModel__DescriptionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamingModelAccess().getDescriptionsStreamingDescriptionParserRuleCall_0_0()); }
		ruleStreamingDescription
		{ after(grammarAccess.getStreamingModelAccess().getDescriptionsStreamingDescriptionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamingModel__DescriptionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamingModelAccess().getDescriptionsStreamingDescriptionParserRuleCall_1_0()); }
		ruleStreamingDescription
		{ after(grammarAccess.getStreamingModelAccess().getDescriptionsStreamingDescriptionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlaceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPlaceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__PointAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlaceAccess().getPointPointParserRuleCall_3_0()); }
		rulePoint
		{ after(grammarAccess.getPlaceAccess().getPointPointParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__RadiusAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getRadiusDOUBLETerminalRuleCall_0_0_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getPointAccess().getRadiusDOUBLETerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__MesurementAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getMesurementDistanceMesurementEnumRuleCall_0_1_0()); }
		ruleDistanceMesurement
		{ after(grammarAccess.getPointAccess().getMesurementDistanceMesurementEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__CoordinatesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getCoordinatesCoordinateParserRuleCall_1_0()); }
		ruleCoordinate
		{ after(grammarAccess.getPointAccess().getCoordinatesCoordinateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LatLong__LatAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLatLongAccess().getLatDOUBLETerminalRuleCall_0_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getLatLongAccess().getLatDOUBLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LatLong__LongAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLatLongAccess().getLongDOUBLETerminalRuleCall_2_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getLatLongAccess().getLongDOUBLETerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__EAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUTMAccess().getEDOUBLETerminalRuleCall_2_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getUTMAccess().getEDOUBLETerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__NAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUTMAccess().getNDOUBLETerminalRuleCall_4_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getUTMAccess().getNDOUBLETerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__ZAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUTMAccess().getZDOUBLETerminalRuleCall_6_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getUTMAccess().getZDOUBLETerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UTM__HemiAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUTMAccess().getHemiDOUBLETerminalRuleCall_8_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getUTMAccess().getHemiDOUBLETerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRegionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__SouthWestBoundaryAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegionAccess().getSouthWestBoundaryPointParserRuleCall_4_0()); }
		rulePoint
		{ after(grammarAccess.getRegionAccess().getSouthWestBoundaryPointParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__NorthEastBoundaryAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegionAccess().getNorthEastBoundaryPointParserRuleCall_6_0()); }
		rulePoint
		{ after(grammarAccess.getRegionAccess().getNorthEastBoundaryPointParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__PropertyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermListAccess().getPropertyWordListPropertyEnumRuleCall_1_0()); }
		ruleWordListProperty
		{ after(grammarAccess.getTermListAccess().getPropertyWordListPropertyEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermListAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTermListAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__TermsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermListAccess().getTermsSTRINGTerminalRuleCall_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTermListAccess().getTermsSTRINGTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermList__TermsAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermListAccess().getTermsSTRINGTerminalRuleCall_4_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTermListAccess().getTermsSTRINGTerminalRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermKey__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermKeyAccess().getTypeBasicTypeEnumRuleCall_0_0()); }
		ruleBasicType
		{ after(grammarAccess.getTermKeyAccess().getTypeBasicTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermKey__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermKeyAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTermKeyAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhraseAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPhraseAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__OrderedAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhraseAccess().getOrderedOrderedKeyword_2_0()); }
		(
			{ before(grammarAccess.getPhraseAccess().getOrderedOrderedKeyword_2_0()); }
			'ordered'
			{ after(grammarAccess.getPhraseAccess().getOrderedOrderedKeyword_2_0()); }
		)
		{ after(grammarAccess.getPhraseAccess().getOrderedOrderedKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__ConceptsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhraseAccess().getConceptsConceptParserRuleCall_4_0()); }
		ruleConcept
		{ after(grammarAccess.getPhraseAccess().getConceptsConceptParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__ConceptsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhraseAccess().getConceptsConceptParserRuleCall_5_1_0()); }
		ruleConcept
		{ after(grammarAccess.getPhraseAccess().getConceptsConceptParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__OptionsAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhraseAccess().getOptionsOptionParserRuleCall_7_1_0()); }
		ruleOption
		{ after(grammarAccess.getPhraseAccess().getOptionsOptionParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Phrase__OptionsAssignment_7_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhraseAccess().getOptionsOptionParserRuleCall_7_2_1_0()); }
		ruleOption
		{ after(grammarAccess.getPhraseAccess().getOptionsOptionParserRuleCall_7_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoOption__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeoOptionAccess().getKeyGeoOptionKeyEnumRuleCall_0_0()); }
		ruleGeoOptionKey
		{ after(grammarAccess.getGeoOptionAccess().getKeyGeoOptionKeyEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoOption__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeoOptionAccess().getValueGeographicalElementCrossReference_2_0()); }
		(
			{ before(grammarAccess.getGeoOptionAccess().getValueGeographicalElementQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getGeoOptionAccess().getValueGeographicalElementQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getGeoOptionAccess().getValueGeographicalElementCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceOption__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceOptionAccess().getKeySourceOptionKeyEnumRuleCall_0_0()); }
		ruleSourceOptionKey
		{ after(grammarAccess.getSourceOptionAccess().getKeySourceOptionKeyEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceOption__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceOptionAccess().getValueSourceEnumRuleCall_2_0()); }
		ruleSource
		{ after(grammarAccess.getSourceOptionAccess().getValueSourceEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOption__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageOptionAccess().getKeyLanguageOptionKeyEnumRuleCall_0_0()); }
		ruleLanguageOptionKey
		{ after(grammarAccess.getLanguageOptionAccess().getKeyLanguageOptionKeyEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOption__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageOptionAccess().getValueLanguageEnumRuleCall_2_0()); }
		ruleLanguage
		{ after(grammarAccess.getLanguageOptionAccess().getValueLanguageEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOption__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOptionAccess().getKeyBooleanOptionKeyEnumRuleCall_0_0()); }
		ruleBooleanOptionKey
		{ after(grammarAccess.getBooleanOptionAccess().getKeyBooleanOptionKeyEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOption__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOptionAccess().getValueBOOLEANTerminalRuleCall_2_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getBooleanOptionAccess().getValueBOOLEANTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOption__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntOptionAccess().getKeyIntOptionKeyEnumRuleCall_0_0()); }
		ruleIntOptionKey
		{ after(grammarAccess.getIntOptionAccess().getKeyIntOptionKeyEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOption__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntOptionAccess().getValueINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getIntOptionAccess().getValueINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BOOLEAN : ('true'|'false');

RULE_DOUBLE : '-'? RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
