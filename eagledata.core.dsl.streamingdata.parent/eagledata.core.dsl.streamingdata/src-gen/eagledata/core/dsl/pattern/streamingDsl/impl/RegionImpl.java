/**
 * generated by Xtext 2.9.2
 */
package eagledata.core.dsl.pattern.streamingDsl.impl;

import eagledata.core.dsl.pattern.streamingDsl.Point;
import eagledata.core.dsl.pattern.streamingDsl.Region;
import eagledata.core.dsl.pattern.streamingDsl.StreamingDslPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Region</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link eagledata.core.dsl.pattern.streamingDsl.impl.RegionImpl#getSouthWestBoundary <em>South West Boundary</em>}</li>
 *   <li>{@link eagledata.core.dsl.pattern.streamingDsl.impl.RegionImpl#getNorthEastBoundary <em>North East Boundary</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RegionImpl extends GeographicalElementImpl implements Region
{
  /**
   * The cached value of the '{@link #getSouthWestBoundary() <em>South West Boundary</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSouthWestBoundary()
   * @generated
   * @ordered
   */
  protected Point southWestBoundary;

  /**
   * The cached value of the '{@link #getNorthEastBoundary() <em>North East Boundary</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNorthEastBoundary()
   * @generated
   * @ordered
   */
  protected Point northEastBoundary;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RegionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StreamingDslPackage.Literals.REGION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Point getSouthWestBoundary()
  {
    return southWestBoundary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSouthWestBoundary(Point newSouthWestBoundary, NotificationChain msgs)
  {
    Point oldSouthWestBoundary = southWestBoundary;
    southWestBoundary = newSouthWestBoundary;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StreamingDslPackage.REGION__SOUTH_WEST_BOUNDARY, oldSouthWestBoundary, newSouthWestBoundary);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSouthWestBoundary(Point newSouthWestBoundary)
  {
    if (newSouthWestBoundary != southWestBoundary)
    {
      NotificationChain msgs = null;
      if (southWestBoundary != null)
        msgs = ((InternalEObject)southWestBoundary).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StreamingDslPackage.REGION__SOUTH_WEST_BOUNDARY, null, msgs);
      if (newSouthWestBoundary != null)
        msgs = ((InternalEObject)newSouthWestBoundary).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StreamingDslPackage.REGION__SOUTH_WEST_BOUNDARY, null, msgs);
      msgs = basicSetSouthWestBoundary(newSouthWestBoundary, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StreamingDslPackage.REGION__SOUTH_WEST_BOUNDARY, newSouthWestBoundary, newSouthWestBoundary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Point getNorthEastBoundary()
  {
    return northEastBoundary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNorthEastBoundary(Point newNorthEastBoundary, NotificationChain msgs)
  {
    Point oldNorthEastBoundary = northEastBoundary;
    northEastBoundary = newNorthEastBoundary;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StreamingDslPackage.REGION__NORTH_EAST_BOUNDARY, oldNorthEastBoundary, newNorthEastBoundary);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNorthEastBoundary(Point newNorthEastBoundary)
  {
    if (newNorthEastBoundary != northEastBoundary)
    {
      NotificationChain msgs = null;
      if (northEastBoundary != null)
        msgs = ((InternalEObject)northEastBoundary).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StreamingDslPackage.REGION__NORTH_EAST_BOUNDARY, null, msgs);
      if (newNorthEastBoundary != null)
        msgs = ((InternalEObject)newNorthEastBoundary).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StreamingDslPackage.REGION__NORTH_EAST_BOUNDARY, null, msgs);
      msgs = basicSetNorthEastBoundary(newNorthEastBoundary, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StreamingDslPackage.REGION__NORTH_EAST_BOUNDARY, newNorthEastBoundary, newNorthEastBoundary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case StreamingDslPackage.REGION__SOUTH_WEST_BOUNDARY:
        return basicSetSouthWestBoundary(null, msgs);
      case StreamingDslPackage.REGION__NORTH_EAST_BOUNDARY:
        return basicSetNorthEastBoundary(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StreamingDslPackage.REGION__SOUTH_WEST_BOUNDARY:
        return getSouthWestBoundary();
      case StreamingDslPackage.REGION__NORTH_EAST_BOUNDARY:
        return getNorthEastBoundary();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StreamingDslPackage.REGION__SOUTH_WEST_BOUNDARY:
        setSouthWestBoundary((Point)newValue);
        return;
      case StreamingDslPackage.REGION__NORTH_EAST_BOUNDARY:
        setNorthEastBoundary((Point)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StreamingDslPackage.REGION__SOUTH_WEST_BOUNDARY:
        setSouthWestBoundary((Point)null);
        return;
      case StreamingDslPackage.REGION__NORTH_EAST_BOUNDARY:
        setNorthEastBoundary((Point)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StreamingDslPackage.REGION__SOUTH_WEST_BOUNDARY:
        return southWestBoundary != null;
      case StreamingDslPackage.REGION__NORTH_EAST_BOUNDARY:
        return northEastBoundary != null;
    }
    return super.eIsSet(featureID);
  }

} //RegionImpl
