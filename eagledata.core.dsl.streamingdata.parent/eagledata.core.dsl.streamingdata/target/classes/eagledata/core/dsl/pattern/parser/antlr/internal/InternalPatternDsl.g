/*
 * generated by Xtext 2.9.2
 */
grammar InternalPatternDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package eagledata.core.dsl.pattern.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package eagledata.core.dsl.pattern.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import eagledata.core.dsl.pattern.services.PatternDslGrammarAccess;

}

@parser::members {

 	private PatternDslGrammarAccess grammarAccess;

    public InternalPatternDslParser(TokenStream input, PatternDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "StreamingModel";
   	}

   	@Override
   	protected PatternDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleStreamingModel
entryRuleStreamingModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStreamingModelRule()); }
	iv_ruleStreamingModel=ruleStreamingModel
	{ $current=$iv_ruleStreamingModel.current; }
	EOF;

// Rule StreamingModel
ruleStreamingModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStreamingModelAccess().getDescriptionsStreamingDescriptionParserRuleCall_0_0());
				}
				lv_descriptions_0_0=ruleStreamingDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStreamingModelRule());
					}
					add(
						$current,
						"descriptions",
						lv_descriptions_0_0,
						"eagledata.core.dsl.pattern.PatternDsl.StreamingDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStreamingModelAccess().getDescriptionsStreamingDescriptionParserRuleCall_1_0());
				}
				lv_descriptions_1_0=ruleStreamingDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStreamingModelRule());
					}
					add(
						$current,
						"descriptions",
						lv_descriptions_1_0,
						"eagledata.core.dsl.pattern.PatternDsl.StreamingDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleStreamingDescription
entryRuleStreamingDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStreamingDescriptionRule()); }
	iv_ruleStreamingDescription=ruleStreamingDescription
	{ $current=$iv_ruleStreamingDescription.current; }
	EOF;

// Rule StreamingDescription
ruleStreamingDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStreamingDescriptionAccess().getImportParserRuleCall_0());
		}
		this_Import_0=ruleImport
		{
			$current = $this_Import_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStreamingDescriptionAccess().getGeographicalElementParserRuleCall_1());
		}
		this_GeographicalElement_1=ruleGeographicalElement
		{
			$current = $this_GeographicalElement_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStreamingDescriptionAccess().getPatternMatcherElementParserRuleCall_2());
		}
		this_PatternMatcherElement_2=rulePatternMatcherElement
		{
			$current = $this_PatternMatcherElement_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"eagledata.core.dsl.pattern.PatternDsl.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleGeographicalElement
entryRuleGeographicalElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeographicalElementRule()); }
	iv_ruleGeographicalElement=ruleGeographicalElement
	{ $current=$iv_ruleGeographicalElement.current; }
	EOF;

// Rule GeographicalElement
ruleGeographicalElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getGeographicalElementAccess().getPlaceParserRuleCall_0());
		}
		this_Place_0=rulePlace
		{
			$current = $this_Place_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGeographicalElementAccess().getRegionParserRuleCall_1());
		}
		this_Region_1=ruleRegion
		{
			$current = $this_Region_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePlace
entryRulePlace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlaceRule()); }
	iv_rulePlace=rulePlace
	{ $current=$iv_rulePlace.current; }
	EOF;

// Rule Place
rulePlace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='place'
		{
			newLeafNode(otherlv_0, grammarAccess.getPlaceAccess().getPlaceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPlaceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPlaceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getPlaceAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPlaceAccess().getPointPointParserRuleCall_3_0());
				}
				lv_point_3_0=rulePoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPlaceRule());
					}
					set(
						$current,
						"point",
						lv_point_3_0,
						"eagledata.core.dsl.pattern.PatternDsl.Point");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePoint
entryRulePoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointRule()); }
	iv_rulePoint=rulePoint
	{ $current=$iv_rulePoint.current; }
	EOF;

// Rule Point
rulePoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_radius_0_0=RULE_DOUBLE
					{
						newLeafNode(lv_radius_0_0, grammarAccess.getPointAccess().getRadiusDOUBLETerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPointRule());
						}
						setWithLastConsumed(
							$current,
							"radius",
							lv_radius_0_0,
							"eagledata.core.dsl.pattern.PatternDsl.DOUBLE");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPointAccess().getMesurementDistanceMesurementEnumRuleCall_0_1_0());
					}
					lv_mesurement_1_0=ruleDistanceMesurement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointRule());
						}
						set(
							$current,
							"mesurement",
							lv_mesurement_1_0,
							"eagledata.core.dsl.pattern.PatternDsl.DistanceMesurement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='arround'
			{
				newLeafNode(otherlv_2, grammarAccess.getPointAccess().getArroundKeyword_0_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getPointAccess().getCoordinatesCoordinateParserRuleCall_1_0());
				}
				lv_coordinates_3_0=ruleCoordinate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPointRule());
					}
					set(
						$current,
						"coordinates",
						lv_coordinates_3_0,
						"eagledata.core.dsl.pattern.PatternDsl.Coordinate");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCoordinate
entryRuleCoordinate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCoordinateRule()); }
	iv_ruleCoordinate=ruleCoordinate
	{ $current=$iv_ruleCoordinate.current; }
	EOF;

// Rule Coordinate
ruleCoordinate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCoordinateAccess().getLatLongParserRuleCall_0());
		}
		this_LatLong_0=ruleLatLong
		{
			$current = $this_LatLong_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCoordinateAccess().getUTMParserRuleCall_1());
		}
		this_UTM_1=ruleUTM
		{
			$current = $this_UTM_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLatLong
entryRuleLatLong returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLatLongRule()); }
	iv_ruleLatLong=ruleLatLong
	{ $current=$iv_ruleLatLong.current; }
	EOF;

// Rule LatLong
ruleLatLong returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_lat_0_0=RULE_DOUBLE
				{
					newLeafNode(lv_lat_0_0, grammarAccess.getLatLongAccess().getLatDOUBLETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLatLongRule());
					}
					setWithLastConsumed(
						$current,
						"lat",
						lv_lat_0_0,
						"eagledata.core.dsl.pattern.PatternDsl.DOUBLE");
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getLatLongAccess().getCommaKeyword_1());
		}
		(
			(
				lv_long_2_0=RULE_DOUBLE
				{
					newLeafNode(lv_long_2_0, grammarAccess.getLatLongAccess().getLongDOUBLETerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLatLongRule());
					}
					setWithLastConsumed(
						$current,
						"long",
						lv_long_2_0,
						"eagledata.core.dsl.pattern.PatternDsl.DOUBLE");
				}
			)
		)
	)
;

// Entry rule entryRuleUTM
entryRuleUTM returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUTMRule()); }
	iv_ruleUTM=ruleUTM
	{ $current=$iv_ruleUTM.current; }
	EOF;

// Rule UTM
ruleUTM returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='UTM'
		{
			newLeafNode(otherlv_0, grammarAccess.getUTMAccess().getUTMKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getUTMAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				lv_e_2_0=RULE_DOUBLE
				{
					newLeafNode(lv_e_2_0, grammarAccess.getUTMAccess().getEDOUBLETerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUTMRule());
					}
					setWithLastConsumed(
						$current,
						"e",
						lv_e_2_0,
						"eagledata.core.dsl.pattern.PatternDsl.DOUBLE");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getUTMAccess().getCommaKeyword_3());
		}
		(
			(
				lv_n_4_0=RULE_DOUBLE
				{
					newLeafNode(lv_n_4_0, grammarAccess.getUTMAccess().getNDOUBLETerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUTMRule());
					}
					setWithLastConsumed(
						$current,
						"n",
						lv_n_4_0,
						"eagledata.core.dsl.pattern.PatternDsl.DOUBLE");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getUTMAccess().getCommaKeyword_5());
		}
		(
			(
				lv_z_6_0=RULE_DOUBLE
				{
					newLeafNode(lv_z_6_0, grammarAccess.getUTMAccess().getZDOUBLETerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUTMRule());
					}
					setWithLastConsumed(
						$current,
						"z",
						lv_z_6_0,
						"eagledata.core.dsl.pattern.PatternDsl.DOUBLE");
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getUTMAccess().getCommaKeyword_7());
		}
		(
			(
				lv_Hemi_8_0=RULE_DOUBLE
				{
					newLeafNode(lv_Hemi_8_0, grammarAccess.getUTMAccess().getHemiDOUBLETerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUTMRule());
					}
					setWithLastConsumed(
						$current,
						"Hemi",
						lv_Hemi_8_0,
						"eagledata.core.dsl.pattern.PatternDsl.DOUBLE");
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getUTMAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleRegion
entryRuleRegion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegionRule()); }
	iv_ruleRegion=ruleRegion
	{ $current=$iv_ruleRegion.current; }
	EOF;

// Rule Region
ruleRegion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='region'
		{
			newLeafNode(otherlv_0, grammarAccess.getRegionAccess().getRegionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRegionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getRegionAccess().getEqualsSignKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getRegionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRegionAccess().getSouthWestBoundaryPointParserRuleCall_4_0());
				}
				lv_southWestBoundary_4_0=rulePoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegionRule());
					}
					set(
						$current,
						"southWestBoundary",
						lv_southWestBoundary_4_0,
						"eagledata.core.dsl.pattern.PatternDsl.Point");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getRegionAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRegionAccess().getNorthEastBoundaryPointParserRuleCall_6_0());
				}
				lv_northEastBoundary_6_0=rulePoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegionRule());
					}
					set(
						$current,
						"northEastBoundary",
						lv_northEastBoundary_6_0,
						"eagledata.core.dsl.pattern.PatternDsl.Point");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getRegionAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRulePatternMatcherElement
entryRulePatternMatcherElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternMatcherElementRule()); }
	iv_rulePatternMatcherElement=rulePatternMatcherElement
	{ $current=$iv_rulePatternMatcherElement.current; }
	EOF;

// Rule PatternMatcherElement
rulePatternMatcherElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPatternMatcherElementAccess().getPhraseParserRuleCall_0());
		}
		this_Phrase_0=rulePhrase
		{
			$current = $this_Phrase_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPatternMatcherElementAccess().getConceptParserRuleCall_1());
		}
		this_Concept_1=ruleConcept
		{
			$current = $this_Concept_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConcept
entryRuleConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConceptRule()); }
	iv_ruleConcept=ruleConcept
	{ $current=$iv_ruleConcept.current; }
	EOF;

// Rule Concept
ruleConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConceptAccess().getTermListParserRuleCall_0());
		}
		this_TermList_0=ruleTermList
		{
			$current = $this_TermList_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConceptAccess().getTermParserRuleCall_1());
		}
		this_Term_1=ruleTerm
		{
			$current = $this_Term_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTermList
entryRuleTermList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermListRule()); }
	iv_ruleTermList=ruleTermList
	{ $current=$iv_ruleTermList.current; }
	EOF;

// Rule TermList
ruleTermList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='list'
		{
			newLeafNode(otherlv_0, grammarAccess.getTermListAccess().getListKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTermListAccess().getPropertyWordListPropertyEnumRuleCall_1_0());
				}
				lv_property_1_0=ruleWordListProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTermListRule());
					}
					set(
						$current,
						"property",
						lv_property_1_0,
						"eagledata.core.dsl.pattern.PatternDsl.WordListProperty");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTermListAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTermListRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getTermListAccess().getEqualsSignKeyword_3());
		}
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getTermListAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					lv_terms_5_0=RULE_STRING
					{
						newLeafNode(lv_terms_5_0, grammarAccess.getTermListAccess().getTermsSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTermListRule());
						}
						addWithLastConsumed(
							$current,
							"terms",
							lv_terms_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getTermListAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						lv_terms_7_0=RULE_STRING
						{
							newLeafNode(lv_terms_7_0, grammarAccess.getTermListAccess().getTermsSTRINGTerminalRuleCall_4_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTermListRule());
							}
							addWithLastConsumed(
								$current,
								"terms",
								lv_terms_7_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getTermListAccess().getRightParenthesisKeyword_4_3());
			}
		)?
	)
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getTermAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTermRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRulePhrase
entryRulePhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhraseRule()); }
	iv_rulePhrase=rulePhrase
	{ $current=$iv_rulePhrase.current; }
	EOF;

// Rule Phrase
rulePhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='phrase'
		{
			newLeafNode(otherlv_0, grammarAccess.getPhraseAccess().getPhraseKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPhraseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPhraseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_ordered_2_0='ordered'
				{
					newLeafNode(lv_ordered_2_0, grammarAccess.getPhraseAccess().getOrderedOrderedKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPhraseRule());
					}
					setWithLastConsumed($current, "ordered", true, "ordered");
				}
			)
		)?
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getPhraseAccess().getEqualsSignKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getPhraseAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhraseAccess().getConceptsConceptParserRuleCall_5_0());
				}
				lv_concepts_5_0=ruleConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhraseRule());
					}
					add(
						$current,
						"concepts",
						lv_concepts_5_0,
						"eagledata.core.dsl.pattern.PatternDsl.Concept");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getPhraseAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPhraseAccess().getConceptsConceptParserRuleCall_6_1_0());
					}
					lv_concepts_7_0=ruleConcept
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhraseRule());
						}
						add(
							$current,
							"concepts",
							lv_concepts_7_0,
							"eagledata.core.dsl.pattern.PatternDsl.Concept");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getPhraseAccess().getRightParenthesisKeyword_7());
		}
		(
			otherlv_9='{'
			{
				newLeafNode(otherlv_9, grammarAccess.getPhraseAccess().getLeftCurlyBracketKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPhraseAccess().getOptionsOptionParserRuleCall_8_1_0());
					}
					lv_options_10_0=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhraseRule());
						}
						add(
							$current,
							"options",
							lv_options_10_0,
							"eagledata.core.dsl.pattern.PatternDsl.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getPhraseAccess().getCommaKeyword_8_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPhraseAccess().getOptionsOptionParserRuleCall_8_2_1_0());
						}
						lv_options_12_0=ruleOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPhraseRule());
							}
							add(
								$current,
								"options",
								lv_options_12_0,
								"eagledata.core.dsl.pattern.PatternDsl.Option");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_13='}'
			{
				newLeafNode(otherlv_13, grammarAccess.getPhraseAccess().getRightCurlyBracketKeyword_8_3());
			}
		)?
	)
;

// Entry rule entryRuleOption
entryRuleOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionRule()); }
	iv_ruleOption=ruleOption
	{ $current=$iv_ruleOption.current; }
	EOF;

// Rule Option
ruleOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOptionAccess().getBooleanOptionParserRuleCall_0());
		}
		this_BooleanOption_0=ruleBooleanOption
		{
			$current = $this_BooleanOption_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getGeoOptionParserRuleCall_1());
		}
		this_GeoOption_1=ruleGeoOption
		{
			$current = $this_GeoOption_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getIntOptionParserRuleCall_2());
		}
		this_IntOption_2=ruleIntOption
		{
			$current = $this_IntOption_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getLanguageOptionParserRuleCall_3());
		}
		this_LanguageOption_3=ruleLanguageOption
		{
			$current = $this_LanguageOption_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getSourceOptionParserRuleCall_4());
		}
		this_SourceOption_4=ruleSourceOption
		{
			$current = $this_SourceOption_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleGeoOption
entryRuleGeoOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeoOptionRule()); }
	iv_ruleGeoOption=ruleGeoOption
	{ $current=$iv_ruleGeoOption.current; }
	EOF;

// Rule GeoOption
ruleGeoOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGeoOptionAccess().getKeyGeoOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleGeoOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeoOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.pattern.PatternDsl.GeoOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getGeoOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeoOptionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGeoOptionAccess().getValueGeographicalElementCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSourceOption
entryRuleSourceOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceOptionRule()); }
	iv_ruleSourceOption=ruleSourceOption
	{ $current=$iv_ruleSourceOption.current; }
	EOF;

// Rule SourceOption
ruleSourceOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSourceOptionAccess().getKeySourceOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleSourceOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSourceOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.pattern.PatternDsl.SourceOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getSourceOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSourceOptionAccess().getValueSourceEnumRuleCall_2_0());
				}
				lv_value_2_0=ruleSource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSourceOptionRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"eagledata.core.dsl.pattern.PatternDsl.Source");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLanguageOption
entryRuleLanguageOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLanguageOptionRule()); }
	iv_ruleLanguageOption=ruleLanguageOption
	{ $current=$iv_ruleLanguageOption.current; }
	EOF;

// Rule LanguageOption
ruleLanguageOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLanguageOptionAccess().getKeyLanguageOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleLanguageOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLanguageOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.pattern.PatternDsl.LanguageOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getLanguageOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLanguageOptionAccess().getValueLanguageEnumRuleCall_2_0());
				}
				lv_value_2_0=ruleLanguage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLanguageOptionRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"eagledata.core.dsl.pattern.PatternDsl.Language");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanOption
entryRuleBooleanOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanOptionRule()); }
	iv_ruleBooleanOption=ruleBooleanOption
	{ $current=$iv_ruleBooleanOption.current; }
	EOF;

// Rule BooleanOption
ruleBooleanOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanOptionAccess().getKeyBooleanOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleBooleanOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.pattern.PatternDsl.BooleanOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_BOOLEAN
				{
					newLeafNode(lv_value_2_0, grammarAccess.getBooleanOptionAccess().getValueBOOLEANTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanOptionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"eagledata.core.dsl.pattern.PatternDsl.BOOLEAN");
				}
			)
		)
	)
;

// Entry rule entryRuleIntOption
entryRuleIntOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntOptionRule()); }
	iv_ruleIntOption=ruleIntOption
	{ $current=$iv_ruleIntOption.current; }
	EOF;

// Rule IntOption
ruleIntOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIntOptionAccess().getKeyIntOptionKeyEnumRuleCall_0_0());
				}
				lv_key_0_0=ruleIntOptionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"eagledata.core.dsl.pattern.PatternDsl.IntOptionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getIntOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getIntOptionAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntOptionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Rule GeoOptionKey
ruleGeoOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='in'
		{
			$current = grammarAccess.getGeoOptionKeyAccess().getInEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getGeoOptionKeyAccess().getInEnumLiteralDeclaration());
		}
	)
;

// Rule SourceOptionKey
ruleSourceOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='source'
		{
			$current = grammarAccess.getSourceOptionKeyAccess().getSourceEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getSourceOptionKeyAccess().getSourceEnumLiteralDeclaration());
		}
	)
;

// Rule LanguageOptionKey
ruleLanguageOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='language'
		{
			$current = grammarAccess.getLanguageOptionKeyAccess().getLangEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getLanguageOptionKeyAccess().getLangEnumLiteralDeclaration());
		}
	)
;

// Rule IntOptionKey
ruleIntOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='minretweet'
			{
				$current = grammarAccess.getIntOptionKeyAccess().getLangEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getIntOptionKeyAccess().getLangEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='minfavorite'
			{
				$current = grammarAccess.getIntOptionKeyAccess().getSourceEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getIntOptionKeyAccess().getSourceEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule BooleanOptionKey
ruleBooleanOptionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='inreplyto'
			{
				$current = grammarAccess.getBooleanOptionKeyAccess().getInreplytoEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBooleanOptionKeyAccess().getInreplytoEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='retweet'
			{
				$current = grammarAccess.getBooleanOptionKeyAccess().getRetweetEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBooleanOptionKeyAccess().getRetweetEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='favorite'
			{
				$current = grammarAccess.getBooleanOptionKeyAccess().getFavoriteEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBooleanOptionKeyAccess().getFavoriteEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule WordListProperty
ruleWordListProperty returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='all'
			{
				$current = grammarAccess.getWordListPropertyAccess().getAllEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getWordListPropertyAccess().getAllEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='any'
			{
				$current = grammarAccess.getWordListPropertyAccess().getAnyEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getWordListPropertyAccess().getAnyEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule Source
ruleSource returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='android'
			{
				$current = grammarAccess.getSourceAccess().getAndroidEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSourceAccess().getAndroidEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='ios'
			{
				$current = grammarAccess.getSourceAccess().getIosEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSourceAccess().getIosEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='web'
			{
				$current = grammarAccess.getSourceAccess().getWebEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getSourceAccess().getWebEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='all'
			{
				$current = grammarAccess.getSourceAccess().getAllEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getSourceAccess().getAllEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule DistanceMesurement
ruleDistanceMesurement returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='kms'
			{
				$current = grammarAccess.getDistanceMesurementAccess().getKmsEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDistanceMesurementAccess().getKmsEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='miles'
			{
				$current = grammarAccess.getDistanceMesurementAccess().getMilesEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDistanceMesurementAccess().getMilesEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='mts'
			{
				$current = grammarAccess.getDistanceMesurementAccess().getMtsEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDistanceMesurementAccess().getMtsEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule Language
ruleLanguage returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='english'
			{
				$current = grammarAccess.getLanguageAccess().getEnEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLanguageAccess().getEnEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='spanish'
			{
				$current = grammarAccess.getLanguageAccess().getEsEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLanguageAccess().getEsEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='chinese'
			{
				$current = grammarAccess.getLanguageAccess().getZhEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getLanguageAccess().getZhEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_BOOLEAN : ('true'|'false');

RULE_DOUBLE : '-'? RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
