/*
 * generated by Xtext 2.9.2
 */
grammar InternalQueryDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package uam.eagledata.dsl.query.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uam.eagledata.dsl.query.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uam.eagledata.dsl.query.services.QueryDslGrammarAccess;

}
@parser::members {
	private QueryDslGrammarAccess grammarAccess;

	public void setGrammarAccess(QueryDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleQuerySet
entryRuleQuerySet
:
{ before(grammarAccess.getQuerySetRule()); }
	 ruleQuerySet
{ after(grammarAccess.getQuerySetRule()); } 
	 EOF 
;

// Rule QuerySet
ruleQuerySet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuerySetAccess().getGroup()); }
		(rule__QuerySet__Group__0)
		{ after(grammarAccess.getQuerySetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelect
entryRuleSelect
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectAccess().getGroup()); }
		(rule__Select__Group__0)
		{ after(grammarAccess.getSelectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQueryParam
entryRuleQueryParam
:
{ before(grammarAccess.getQueryParamRule()); }
	 ruleQueryParam
{ after(grammarAccess.getQueryParamRule()); } 
	 EOF 
;

// Rule QueryParam
ruleQueryParam 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryParamAccess().getGroup()); }
		(rule__QueryParam__Group__0)
		{ after(grammarAccess.getQueryParamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleFrom
entryRuleSimpleFrom
:
{ before(grammarAccess.getSimpleFromRule()); }
	 ruleSimpleFrom
{ after(grammarAccess.getSimpleFromRule()); } 
	 EOF 
;

// Rule SimpleFrom
ruleSimpleFrom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleFromAccess().getGroup()); }
		(rule__SimpleFrom__Group__0)
		{ after(grammarAccess.getSimpleFromAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositeFrom
entryRuleCompositeFrom
:
{ before(grammarAccess.getCompositeFromRule()); }
	 ruleCompositeFrom
{ after(grammarAccess.getCompositeFromRule()); } 
	 EOF 
;

// Rule CompositeFrom
ruleCompositeFrom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositeFromAccess().getGroup()); }
		(rule__CompositeFrom__Group__0)
		{ after(grammarAccess.getCompositeFromAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getAlternatives()); }
		(rule__Condition__Alternatives)
		{ after(grammarAccess.getConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleCondition
entryRuleSimpleCondition
:
{ before(grammarAccess.getSimpleConditionRule()); }
	 ruleSimpleCondition
{ after(grammarAccess.getSimpleConditionRule()); } 
	 EOF 
;

// Rule SimpleCondition
ruleSimpleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleConditionAccess().getGroup()); }
		(rule__SimpleCondition__Group__0)
		{ after(grammarAccess.getSimpleConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicate
entryRulePredicate
:
{ before(grammarAccess.getPredicateRule()); }
	 rulePredicate
{ after(grammarAccess.getPredicateRule()); } 
	 EOF 
;

// Rule Predicate
rulePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateAccess().getAlternatives()); }
		(rule__Predicate__Alternatives)
		{ after(grammarAccess.getPredicateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveValuePredicate
entryRulePrimitiveValuePredicate
:
{ before(grammarAccess.getPrimitiveValuePredicateRule()); }
	 rulePrimitiveValuePredicate
{ after(grammarAccess.getPrimitiveValuePredicateRule()); } 
	 EOF 
;

// Rule PrimitiveValuePredicate
rulePrimitiveValuePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveValuePredicateAccess().getGroup()); }
		(rule__PrimitiveValuePredicate__Group__0)
		{ after(grammarAccess.getPrimitiveValuePredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelValuePredicate
entryRuleModelValuePredicate
:
{ before(grammarAccess.getModelValuePredicateRule()); }
	 ruleModelValuePredicate
{ after(grammarAccess.getModelValuePredicateRule()); } 
	 EOF 
;

// Rule ModelValuePredicate
ruleModelValuePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelValuePredicateAccess().getGroup()); }
		(rule__ModelValuePredicate__Group__0)
		{ after(grammarAccess.getModelValuePredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParamValuePredicate
entryRuleParamValuePredicate
:
{ before(grammarAccess.getParamValuePredicateRule()); }
	 ruleParamValuePredicate
{ after(grammarAccess.getParamValuePredicateRule()); } 
	 EOF 
;

// Rule ParamValuePredicate
ruleParamValuePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamValuePredicateAccess().getGroup()); }
		(rule__ParamValuePredicate__Group__0)
		{ after(grammarAccess.getParamValuePredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositeCondition
entryRuleCompositeCondition
:
{ before(grammarAccess.getCompositeConditionRule()); }
	 ruleCompositeCondition
{ after(grammarAccess.getCompositeConditionRule()); } 
	 EOF 
;

// Rule CompositeCondition
ruleCompositeCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositeConditionAccess().getGroup()); }
		(rule__CompositeCondition__Group__0)
		{ after(grammarAccess.getCompositeConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule JoinType
ruleJoinType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinTypeAccess().getAlternatives()); }
		(rule__JoinType__Alternatives)
		{ after(grammarAccess.getJoinTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ComparisonType
ruleComparisonType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonTypeAccess().getAlternatives()); }
		(rule__ComparisonType__Alternatives)
		{ after(grammarAccess.getComparisonTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ConnectionType
ruleConnectionType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionTypeAccess().getAlternatives()); }
		(rule__ConnectionType__Alternatives)
		{ after(grammarAccess.getConnectionTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Type
ruleType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getSelectAllAssignment_5_0()); }
		(rule__Select__SelectAllAssignment_5_0)
		{ after(grammarAccess.getSelectAccess().getSelectAllAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectAccess().getGroup_5_1()); }
		(rule__Select__Group_5_1__0)
		{ after(grammarAccess.getSelectAccess().getGroup_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Alternatives_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getGroup_6_1_0()); }
		(rule__Select__Group_6_1_0__0)
		{ after(grammarAccess.getSelectAccess().getGroup_6_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectAccess().getGroup_6_1_1()); }
		(rule__Select__Group_6_1_1__0)
		{ after(grammarAccess.getSelectAccess().getGroup_6_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getSimpleConditionParserRuleCall_0()); }
		ruleSimpleCondition
		{ after(grammarAccess.getConditionAccess().getSimpleConditionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getCompositeConditionParserRuleCall_1()); }
		ruleCompositeCondition
		{ after(grammarAccess.getConditionAccess().getCompositeConditionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getPrimitiveValuePredicateParserRuleCall_0()); }
		rulePrimitiveValuePredicate
		{ after(grammarAccess.getPredicateAccess().getPrimitiveValuePredicateParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateAccess().getModelValuePredicateParserRuleCall_1()); }
		ruleModelValuePredicate
		{ after(grammarAccess.getPredicateAccess().getModelValuePredicateParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateAccess().getParamValuePredicateParserRuleCall_2()); }
		ruleParamValuePredicate
		{ after(grammarAccess.getPredicateAccess().getParamValuePredicateParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinTypeAccess().getInnerEnumLiteralDeclaration_0()); }
		('join')
		{ after(grammarAccess.getJoinTypeAccess().getInnerEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getJoinTypeAccess().getLeftEnumLiteralDeclaration_1()); }
		('left-join')
		{ after(grammarAccess.getJoinTypeAccess().getLeftEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getJoinTypeAccess().getRightEnumLiteralDeclaration_2()); }
		('right-join')
		{ after(grammarAccess.getJoinTypeAccess().getRightEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getJoinTypeAccess().getOuterEnumLiteralDeclaration_3()); }
		('outer-join')
		{ after(grammarAccess.getJoinTypeAccess().getOuterEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getJoinTypeAccess().getLeftouterEnumLiteralDeclaration_4()); }
		('left-outer-join')
		{ after(grammarAccess.getJoinTypeAccess().getLeftouterEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getJoinTypeAccess().getRightouterEnumLiteralDeclaration_5()); }
		('right-outer-join')
		{ after(grammarAccess.getJoinTypeAccess().getRightouterEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonTypeAccess().getEqualEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getComparisonTypeAccess().getEqualEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonTypeAccess().getNotequalEnumLiteralDeclaration_1()); }
		('!=')
		{ after(grammarAccess.getComparisonTypeAccess().getNotequalEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonTypeAccess().getLessthanEnumLiteralDeclaration_2()); }
		('<')
		{ after(grammarAccess.getComparisonTypeAccess().getLessthanEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonTypeAccess().getLessthanorequalEnumLiteralDeclaration_3()); }
		('<=')
		{ after(grammarAccess.getComparisonTypeAccess().getLessthanorequalEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonTypeAccess().getGreaterthanEnumLiteralDeclaration_4()); }
		('>')
		{ after(grammarAccess.getComparisonTypeAccess().getGreaterthanEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonTypeAccess().getGreaterthanorequalEnumLiteralDeclaration_5()); }
		('>=')
		{ after(grammarAccess.getComparisonTypeAccess().getGreaterthanorequalEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionTypeAccess().getAndEnumLiteralDeclaration_0()); }
		('and')
		{ after(grammarAccess.getConnectionTypeAccess().getAndEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectionTypeAccess().getOrEnumLiteralDeclaration_1()); }
		('or')
		{ after(grammarAccess.getConnectionTypeAccess().getOrEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getStringEnumLiteralDeclaration_0()); }
		('String')
		{ after(grammarAccess.getTypeAccess().getStringEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getIntEnumLiteralDeclaration_1()); }
		('Int')
		{ after(grammarAccess.getTypeAccess().getIntEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getBooleanEnumLiteralDeclaration_2()); }
		('Boolean')
		{ after(grammarAccess.getTypeAccess().getBooleanEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getFloatEnumLiteralDeclaration_3()); }
		('Float')
		{ after(grammarAccess.getTypeAccess().getFloatEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDoubleEnumLiteralDeclaration_4()); }
		('Double')
		{ after(grammarAccess.getTypeAccess().getDoubleEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySet__Group__0__Impl
	rule__QuerySet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySetAccess().getQuerySetAction_0()); }
	()
	{ after(grammarAccess.getQuerySetAccess().getQuerySetAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySet__Group__1__Impl
	rule__QuerySet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySetAccess().getQuerySetKeyword_1()); }
	'query-set'
	{ after(grammarAccess.getQuerySetAccess().getQuerySetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySet__Group__2__Impl
	rule__QuerySet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySetAccess().getNameAssignment_2()); }
	(rule__QuerySet__NameAssignment_2)
	{ after(grammarAccess.getQuerySetAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySet__Group__3__Impl
	rule__QuerySet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySetAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getQuerySetAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySet__Group__4__Impl
	rule__QuerySet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySetAccess().getGroup_4()); }
	(rule__QuerySet__Group_4__0)?
	{ after(grammarAccess.getQuerySetAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySet__Group__5__Impl
	rule__QuerySet__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySetAccess().getGroup_5()); }
	(rule__QuerySet__Group_5__0)?
	{ after(grammarAccess.getQuerySetAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySet__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySetAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getQuerySetAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuerySet__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySet__Group_4__0__Impl
	rule__QuerySet__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySetAccess().getImportKeyword_4_0()); }
	'import'
	{ after(grammarAccess.getQuerySetAccess().getImportKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySet__Group_4__1__Impl
	rule__QuerySet__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySetAccess().getImportedNamespaceAssignment_4_1()); }
	(rule__QuerySet__ImportedNamespaceAssignment_4_1)
	{ after(grammarAccess.getQuerySetAccess().getImportedNamespaceAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySet__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySetAccess().getGroup_4_2()); }
	(rule__QuerySet__Group_4_2__0)*
	{ after(grammarAccess.getQuerySetAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuerySet__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySet__Group_4_2__0__Impl
	rule__QuerySet__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySetAccess().getImportKeyword_4_2_0()); }
	'import'
	{ after(grammarAccess.getQuerySetAccess().getImportKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySet__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySetAccess().getImportedNamespaceAssignment_4_2_1()); }
	(rule__QuerySet__ImportedNamespaceAssignment_4_2_1)
	{ after(grammarAccess.getQuerySetAccess().getImportedNamespaceAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuerySet__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySet__Group_5__0__Impl
	rule__QuerySet__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySetAccess().getQueriesAssignment_5_0()); }
	(rule__QuerySet__QueriesAssignment_5_0)
	{ after(grammarAccess.getQuerySetAccess().getQueriesAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuerySet__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuerySetAccess().getQueriesAssignment_5_1()); }
	(rule__QuerySet__QueriesAssignment_5_1)*
	{ after(grammarAccess.getQuerySetAccess().getQueriesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	('.*')?
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__0__Impl
	rule__Select__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSelectAction_0()); }
	()
	{ after(grammarAccess.getSelectAccess().getSelectAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__1__Impl
	rule__Select__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getNameAssignment_1()); }
	(rule__Select__NameAssignment_1)
	{ after(grammarAccess.getSelectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__2__Impl
	rule__Select__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_2()); }
	(rule__Select__Group_2__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__3__Impl
	rule__Select__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getSelectAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__4__Impl
	rule__Select__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSelectKeyword_4()); }
	'select'
	{ after(grammarAccess.getSelectAccess().getSelectKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__5__Impl
	rule__Select__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getAlternatives_5()); }
	(rule__Select__Alternatives_5)
	{ after(grammarAccess.getSelectAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__6__Impl
	rule__Select__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_6()); }
	(rule__Select__Group_6__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_7()); }
	(rule__Select__Group_7__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2__0__Impl
	rule__Select__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getSelectAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2__1__Impl
	rule__Select__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getParamsAssignment_2_1()); }
	(rule__Select__ParamsAssignment_2_1)
	{ after(grammarAccess.getSelectAccess().getParamsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2__2__Impl
	rule__Select__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_2_2()); }
	(rule__Select__Group_2_2__0)*
	{ after(grammarAccess.getSelectAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getSelectAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2_2__0__Impl
	rule__Select__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getParamsAssignment_2_2_1()); }
	(rule__Select__ParamsAssignment_2_2_1)
	{ after(grammarAccess.getSelectAccess().getParamsAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5_1__0__Impl
	rule__Select__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSelectionAssignment_5_1_0()); }
	(rule__Select__SelectionAssignment_5_1_0)
	{ after(grammarAccess.getSelectAccess().getSelectionAssignment_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_5_1_1()); }
	(rule__Select__Group_5_1_1__0)*
	{ after(grammarAccess.getSelectAccess().getGroup_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_5_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5_1_1__0__Impl
	rule__Select__Group_5_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_5_1_1_0()); }
	','
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_5_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSelectionAssignment_5_1_1_1()); }
	(rule__Select__SelectionAssignment_5_1_1_1)
	{ after(grammarAccess.getSelectAccess().getSelectionAssignment_5_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6__0__Impl
	rule__Select__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getFromKeyword_6_0()); }
	'from'
	{ after(grammarAccess.getSelectAccess().getFromKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getAlternatives_6_1()); }
	(rule__Select__Alternatives_6_1)
	{ after(grammarAccess.getSelectAccess().getAlternatives_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_6_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6_1_0__0__Impl
	rule__Select__Group_6_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getFromAssignment_6_1_0_0()); }
	(rule__Select__FromAssignment_6_1_0_0)
	{ after(grammarAccess.getSelectAccess().getFromAssignment_6_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_6_1_0_1()); }
	(rule__Select__Group_6_1_0_1__0)*
	{ after(grammarAccess.getSelectAccess().getGroup_6_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_6_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6_1_0_1__0__Impl
	rule__Select__Group_6_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_6_1_0_1_0()); }
	','
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_6_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getFromAssignment_6_1_0_1_1()); }
	(rule__Select__FromAssignment_6_1_0_1_1)
	{ after(grammarAccess.getSelectAccess().getFromAssignment_6_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_6_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6_1_1__0__Impl
	rule__Select__Group_6_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getFromAssignment_6_1_1_0()); }
	(rule__Select__FromAssignment_6_1_1_0)
	{ after(grammarAccess.getSelectAccess().getFromAssignment_6_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSelectAccess().getFromAssignment_6_1_1_1()); }
		(rule__Select__FromAssignment_6_1_1_1)
		{ after(grammarAccess.getSelectAccess().getFromAssignment_6_1_1_1()); }
	)
	(
		{ before(grammarAccess.getSelectAccess().getFromAssignment_6_1_1_1()); }
		(rule__Select__FromAssignment_6_1_1_1)*
		{ after(grammarAccess.getSelectAccess().getFromAssignment_6_1_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_7__0__Impl
	rule__Select__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getWhereKeyword_7_0()); }
	'where'
	{ after(grammarAccess.getSelectAccess().getWhereKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getWhereAssignment_7_1()); }
	(rule__Select__WhereAssignment_7_1)
	{ after(grammarAccess.getSelectAccess().getWhereAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryParam__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryParam__Group__0__Impl
	rule__QueryParam__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryParam__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryParamAccess().getTypeAssignment_0()); }
	(rule__QueryParam__TypeAssignment_0)
	{ after(grammarAccess.getQueryParamAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryParam__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryParam__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryParam__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryParamAccess().getNameAssignment_1()); }
	(rule__QueryParam__NameAssignment_1)
	{ after(grammarAccess.getQueryParamAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleFrom__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleFrom__Group__0__Impl
	rule__SimpleFrom__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleFrom__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleFromAccess().getSimpleFromAction_0()); }
	()
	{ after(grammarAccess.getSimpleFromAccess().getSimpleFromAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleFrom__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleFrom__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleFrom__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleFromAccess().getSourceAssignment_1()); }
	(rule__SimpleFrom__SourceAssignment_1)
	{ after(grammarAccess.getSimpleFromAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeFrom__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeFrom__Group__0__Impl
	rule__CompositeFrom__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeFrom__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeFromAccess().getCompositeFromAction_0()); }
	()
	{ after(grammarAccess.getCompositeFromAccess().getCompositeFromAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeFrom__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeFrom__Group__1__Impl
	rule__CompositeFrom__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeFrom__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeFromAccess().getJoinAssignment_1()); }
	(rule__CompositeFrom__JoinAssignment_1)
	{ after(grammarAccess.getCompositeFromAccess().getJoinAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeFrom__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeFrom__Group__2__Impl
	rule__CompositeFrom__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeFrom__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeFromAccess().getSourceAssignment_2()); }
	(rule__CompositeFrom__SourceAssignment_2)
	{ after(grammarAccess.getCompositeFromAccess().getSourceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeFrom__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeFrom__Group__3__Impl
	rule__CompositeFrom__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeFrom__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeFromAccess().getOnKeyword_3()); }
	'on'
	{ after(grammarAccess.getCompositeFromAccess().getOnKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeFrom__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeFrom__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeFrom__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeFromAccess().getOnAssignment_4()); }
	(rule__CompositeFrom__OnAssignment_4)
	{ after(grammarAccess.getCompositeFromAccess().getOnAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleCondition__Group__0__Impl
	rule__SimpleCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleConditionAccess().getSimpleConditionAction_0()); }
	()
	{ after(grammarAccess.getSimpleConditionAccess().getSimpleConditionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleConditionAccess().getPredicateAssignment_1()); }
	(rule__SimpleCondition__PredicateAssignment_1)
	{ after(grammarAccess.getSimpleConditionAccess().getPredicateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveValuePredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveValuePredicate__Group__0__Impl
	rule__PrimitiveValuePredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveValuePredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveValuePredicateAccess().getPrimitiveValueComparisonPredicateAction_0()); }
	()
	{ after(grammarAccess.getPrimitiveValuePredicateAccess().getPrimitiveValueComparisonPredicateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveValuePredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveValuePredicate__Group__1__Impl
	rule__PrimitiveValuePredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveValuePredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveValuePredicateAccess().getNotAssignment_1()); }
	(rule__PrimitiveValuePredicate__NotAssignment_1)?
	{ after(grammarAccess.getPrimitiveValuePredicateAccess().getNotAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveValuePredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveValuePredicate__Group__2__Impl
	rule__PrimitiveValuePredicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveValuePredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveValuePredicateAccess().getLeftAssignment_2()); }
	(rule__PrimitiveValuePredicate__LeftAssignment_2)
	{ after(grammarAccess.getPrimitiveValuePredicateAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveValuePredicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveValuePredicate__Group__3__Impl
	rule__PrimitiveValuePredicate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveValuePredicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveValuePredicateAccess().getComparisonTypeAssignment_3()); }
	(rule__PrimitiveValuePredicate__ComparisonTypeAssignment_3)
	{ after(grammarAccess.getPrimitiveValuePredicateAccess().getComparisonTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveValuePredicate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveValuePredicate__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveValuePredicate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveValuePredicateAccess().getValueAssignment_4()); }
	(rule__PrimitiveValuePredicate__ValueAssignment_4)
	{ after(grammarAccess.getPrimitiveValuePredicateAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelValuePredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelValuePredicate__Group__0__Impl
	rule__ModelValuePredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelValuePredicateAccess().getModelValueComparisonPredicateAction_0()); }
	()
	{ after(grammarAccess.getModelValuePredicateAccess().getModelValueComparisonPredicateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelValuePredicate__Group__1__Impl
	rule__ModelValuePredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelValuePredicateAccess().getNotAssignment_1()); }
	(rule__ModelValuePredicate__NotAssignment_1)?
	{ after(grammarAccess.getModelValuePredicateAccess().getNotAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelValuePredicate__Group__2__Impl
	rule__ModelValuePredicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelValuePredicateAccess().getLeftAssignment_2()); }
	(rule__ModelValuePredicate__LeftAssignment_2)
	{ after(grammarAccess.getModelValuePredicateAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelValuePredicate__Group__3__Impl
	rule__ModelValuePredicate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelValuePredicateAccess().getComparisonTypeAssignment_3()); }
	(rule__ModelValuePredicate__ComparisonTypeAssignment_3)
	{ after(grammarAccess.getModelValuePredicateAccess().getComparisonTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelValuePredicate__Group__4__Impl
	rule__ModelValuePredicate__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelValuePredicateAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getModelValuePredicateAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelValuePredicate__Group__5__Impl
	rule__ModelValuePredicate__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelValuePredicateAccess().getRightAssignment_5()); }
	(rule__ModelValuePredicate__RightAssignment_5)
	{ after(grammarAccess.getModelValuePredicateAccess().getRightAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelValuePredicate__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelValuePredicateAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getModelValuePredicateAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParamValuePredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamValuePredicate__Group__0__Impl
	rule__ParamValuePredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamValuePredicateAccess().getParamValueComparisonPredicateAction_0()); }
	()
	{ after(grammarAccess.getParamValuePredicateAccess().getParamValueComparisonPredicateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamValuePredicate__Group__1__Impl
	rule__ParamValuePredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamValuePredicateAccess().getNotAssignment_1()); }
	(rule__ParamValuePredicate__NotAssignment_1)?
	{ after(grammarAccess.getParamValuePredicateAccess().getNotAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamValuePredicate__Group__2__Impl
	rule__ParamValuePredicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamValuePredicateAccess().getLeftAssignment_2()); }
	(rule__ParamValuePredicate__LeftAssignment_2)
	{ after(grammarAccess.getParamValuePredicateAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamValuePredicate__Group__3__Impl
	rule__ParamValuePredicate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamValuePredicateAccess().getComparisonTypeAssignment_3()); }
	(rule__ParamValuePredicate__ComparisonTypeAssignment_3)
	{ after(grammarAccess.getParamValuePredicateAccess().getComparisonTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamValuePredicate__Group__4__Impl
	rule__ParamValuePredicate__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamValuePredicateAccess().getLeftSquareBracketKeyword_4()); }
	'['
	{ after(grammarAccess.getParamValuePredicateAccess().getLeftSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamValuePredicate__Group__5__Impl
	rule__ParamValuePredicate__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamValuePredicateAccess().getRightAssignment_5()); }
	(rule__ParamValuePredicate__RightAssignment_5)
	{ after(grammarAccess.getParamValuePredicateAccess().getRightAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamValuePredicate__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamValuePredicateAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getParamValuePredicateAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeCondition__Group__0__Impl
	rule__CompositeCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeConditionAccess().getCompositeConditionAction_0()); }
	()
	{ after(grammarAccess.getCompositeConditionAccess().getCompositeConditionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeCondition__Group__1__Impl
	rule__CompositeCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeConditionAccess().getPredicateAssignment_1()); }
	(rule__CompositeCondition__PredicateAssignment_1)
	{ after(grammarAccess.getCompositeConditionAccess().getPredicateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeCondition__Group__2__Impl
	rule__CompositeCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeConditionAccess().getConnectionAssignment_2()); }
	(rule__CompositeCondition__ConnectionAssignment_2)
	{ after(grammarAccess.getCompositeConditionAccess().getConnectionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeCondition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeConditionAccess().getOnAssignment_3()); }
	(rule__CompositeCondition__OnAssignment_3)
	{ after(grammarAccess.getCompositeConditionAccess().getOnAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuerySet__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuerySetAccess().getNameQualifiedNameParserRuleCall_2_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getQuerySetAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__ImportedNamespaceAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuerySetAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_4_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getQuerySetAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__ImportedNamespaceAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuerySetAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_4_2_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getQuerySetAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__QueriesAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuerySetAccess().getQueriesSelectParserRuleCall_5_0_0()); }
		ruleSelect
		{ after(grammarAccess.getQuerySetAccess().getQueriesSelectParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuerySet__QueriesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuerySetAccess().getQueriesSelectParserRuleCall_5_1_0()); }
		ruleSelect
		{ after(grammarAccess.getQuerySetAccess().getQueriesSelectParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSelectAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__ParamsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getParamsQueryParamParserRuleCall_2_1_0()); }
		ruleQueryParam
		{ after(grammarAccess.getSelectAccess().getParamsQueryParamParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__ParamsAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getParamsQueryParamParserRuleCall_2_2_1_0()); }
		ruleQueryParam
		{ after(grammarAccess.getSelectAccess().getParamsQueryParamParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__SelectAllAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getSelectAllAsteriskKeyword_5_0_0()); }
		(
			{ before(grammarAccess.getSelectAccess().getSelectAllAsteriskKeyword_5_0_0()); }
			'*'
			{ after(grammarAccess.getSelectAccess().getSelectAllAsteriskKeyword_5_0_0()); }
		)
		{ after(grammarAccess.getSelectAccess().getSelectAllAsteriskKeyword_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__SelectionAssignment_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getSelectionDataPropertyCrossReference_5_1_0_0()); }
		(
			{ before(grammarAccess.getSelectAccess().getSelectionDataPropertyIDTerminalRuleCall_5_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSelectAccess().getSelectionDataPropertyIDTerminalRuleCall_5_1_0_0_1()); }
		)
		{ after(grammarAccess.getSelectAccess().getSelectionDataPropertyCrossReference_5_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__SelectionAssignment_5_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getSelectionDataPropertyCrossReference_5_1_1_1_0()); }
		(
			{ before(grammarAccess.getSelectAccess().getSelectionDataPropertyIDTerminalRuleCall_5_1_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSelectAccess().getSelectionDataPropertyIDTerminalRuleCall_5_1_1_1_0_1()); }
		)
		{ after(grammarAccess.getSelectAccess().getSelectionDataPropertyCrossReference_5_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__FromAssignment_6_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getFromSimpleFromParserRuleCall_6_1_0_0_0()); }
		ruleSimpleFrom
		{ after(grammarAccess.getSelectAccess().getFromSimpleFromParserRuleCall_6_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__FromAssignment_6_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getFromSimpleFromParserRuleCall_6_1_0_1_1_0()); }
		ruleSimpleFrom
		{ after(grammarAccess.getSelectAccess().getFromSimpleFromParserRuleCall_6_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__FromAssignment_6_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getFromSimpleFromParserRuleCall_6_1_1_0_0()); }
		ruleSimpleFrom
		{ after(grammarAccess.getSelectAccess().getFromSimpleFromParserRuleCall_6_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__FromAssignment_6_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getFromCompositeFromParserRuleCall_6_1_1_1_0()); }
		ruleCompositeFrom
		{ after(grammarAccess.getSelectAccess().getFromCompositeFromParserRuleCall_6_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__WhereAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getWhereConditionParserRuleCall_7_1_0()); }
		ruleCondition
		{ after(grammarAccess.getSelectAccess().getWhereConditionParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryParam__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryParamAccess().getTypeTypeEnumRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getQueryParamAccess().getTypeTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryParam__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryParamAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getQueryParamAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleFrom__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleFromAccess().getSourceSemanticNodeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSimpleFromAccess().getSourceSemanticNodeQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSimpleFromAccess().getSourceSemanticNodeQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSimpleFromAccess().getSourceSemanticNodeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeFrom__JoinAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeFromAccess().getJoinJoinTypeEnumRuleCall_1_0()); }
		ruleJoinType
		{ after(grammarAccess.getCompositeFromAccess().getJoinJoinTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeFrom__SourceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeFromAccess().getSourceSemanticNodeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getCompositeFromAccess().getSourceSemanticNodeQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getCompositeFromAccess().getSourceSemanticNodeQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getCompositeFromAccess().getSourceSemanticNodeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeFrom__OnAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeFromAccess().getOnConditionParserRuleCall_4_0()); }
		ruleCondition
		{ after(grammarAccess.getCompositeFromAccess().getOnConditionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleCondition__PredicateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleConditionAccess().getPredicatePredicateParserRuleCall_1_0()); }
		rulePredicate
		{ after(grammarAccess.getSimpleConditionAccess().getPredicatePredicateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveValuePredicate__NotAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveValuePredicateAccess().getNotNotKeyword_1_0()); }
		(
			{ before(grammarAccess.getPrimitiveValuePredicateAccess().getNotNotKeyword_1_0()); }
			'not'
			{ after(grammarAccess.getPrimitiveValuePredicateAccess().getNotNotKeyword_1_0()); }
		)
		{ after(grammarAccess.getPrimitiveValuePredicateAccess().getNotNotKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveValuePredicate__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveValuePredicateAccess().getLeftDataPropertyCrossReference_2_0()); }
		(
			{ before(grammarAccess.getPrimitiveValuePredicateAccess().getLeftDataPropertyQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getPrimitiveValuePredicateAccess().getLeftDataPropertyQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getPrimitiveValuePredicateAccess().getLeftDataPropertyCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveValuePredicate__ComparisonTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveValuePredicateAccess().getComparisonTypeComparisonTypeEnumRuleCall_3_0()); }
		ruleComparisonType
		{ after(grammarAccess.getPrimitiveValuePredicateAccess().getComparisonTypeComparisonTypeEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveValuePredicate__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveValuePredicateAccess().getValueEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getPrimitiveValuePredicateAccess().getValueEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__NotAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelValuePredicateAccess().getNotNotKeyword_1_0()); }
		(
			{ before(grammarAccess.getModelValuePredicateAccess().getNotNotKeyword_1_0()); }
			'not'
			{ after(grammarAccess.getModelValuePredicateAccess().getNotNotKeyword_1_0()); }
		)
		{ after(grammarAccess.getModelValuePredicateAccess().getNotNotKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelValuePredicateAccess().getLeftDataPropertyCrossReference_2_0()); }
		(
			{ before(grammarAccess.getModelValuePredicateAccess().getLeftDataPropertyQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getModelValuePredicateAccess().getLeftDataPropertyQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getModelValuePredicateAccess().getLeftDataPropertyCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__ComparisonTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelValuePredicateAccess().getComparisonTypeComparisonTypeEnumRuleCall_3_0()); }
		ruleComparisonType
		{ after(grammarAccess.getModelValuePredicateAccess().getComparisonTypeComparisonTypeEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelValuePredicate__RightAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelValuePredicateAccess().getRightDataPropertyCrossReference_5_0()); }
		(
			{ before(grammarAccess.getModelValuePredicateAccess().getRightDataPropertyQualifiedNameParserRuleCall_5_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getModelValuePredicateAccess().getRightDataPropertyQualifiedNameParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getModelValuePredicateAccess().getRightDataPropertyCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__NotAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamValuePredicateAccess().getNotNotKeyword_1_0()); }
		(
			{ before(grammarAccess.getParamValuePredicateAccess().getNotNotKeyword_1_0()); }
			'not'
			{ after(grammarAccess.getParamValuePredicateAccess().getNotNotKeyword_1_0()); }
		)
		{ after(grammarAccess.getParamValuePredicateAccess().getNotNotKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamValuePredicateAccess().getLeftDataPropertyCrossReference_2_0()); }
		(
			{ before(grammarAccess.getParamValuePredicateAccess().getLeftDataPropertyQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getParamValuePredicateAccess().getLeftDataPropertyQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getParamValuePredicateAccess().getLeftDataPropertyCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__ComparisonTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamValuePredicateAccess().getComparisonTypeComparisonTypeEnumRuleCall_3_0()); }
		ruleComparisonType
		{ after(grammarAccess.getParamValuePredicateAccess().getComparisonTypeComparisonTypeEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamValuePredicate__RightAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamValuePredicateAccess().getRightQueryParamCrossReference_5_0()); }
		(
			{ before(grammarAccess.getParamValuePredicateAccess().getRightQueryParamIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getParamValuePredicateAccess().getRightQueryParamIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getParamValuePredicateAccess().getRightQueryParamCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__PredicateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeConditionAccess().getPredicatePredicateParserRuleCall_1_0()); }
		rulePredicate
		{ after(grammarAccess.getCompositeConditionAccess().getPredicatePredicateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__ConnectionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeConditionAccess().getConnectionConnectionTypeEnumRuleCall_2_0()); }
		ruleConnectionType
		{ after(grammarAccess.getCompositeConditionAccess().getConnectionConnectionTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__OnAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeConditionAccess().getOnConditionParserRuleCall_3_0()); }
		ruleCondition
		{ after(grammarAccess.getCompositeConditionAccess().getOnConditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
