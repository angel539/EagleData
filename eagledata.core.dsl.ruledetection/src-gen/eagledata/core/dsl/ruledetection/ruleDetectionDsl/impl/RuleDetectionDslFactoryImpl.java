/**
 * generated by Xtext 2.9.2
 */
package eagledata.core.dsl.ruledetection.ruleDetectionDsl.impl;

import eagledata.core.dsl.ruledetection.ruleDetectionDsl.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class RuleDetectionDslFactoryImpl extends EFactoryImpl implements RuleDetectionDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static RuleDetectionDslFactory init()
  {
    try
    {
      RuleDetectionDslFactory theRuleDetectionDslFactory = (RuleDetectionDslFactory)EPackage.Registry.INSTANCE.getEFactory(RuleDetectionDslPackage.eNS_URI);
      if (theRuleDetectionDslFactory != null)
      {
        return theRuleDetectionDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new RuleDetectionDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RuleDetectionDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case RuleDetectionDslPackage.RULE_MODEL: return createRuleModel();
      case RuleDetectionDslPackage.RULE_ELEMENT: return createRuleElement();
      case RuleDetectionDslPackage.RULE: return createRule();
      case RuleDetectionDslPackage.ACTION: return createAction();
      case RuleDetectionDslPackage.QUERY: return createQuery();
      case RuleDetectionDslPackage.ADDING_SELECT: return createAddingSelect();
      case RuleDetectionDslPackage.SELECT: return createSelect();
      case RuleDetectionDslPackage.SET_SELECT: return createSetSelect();
      case RuleDetectionDslPackage.WHERE: return createWhere();
      case RuleDetectionDslPackage.RECIPIENT: return createRecipient();
      case RuleDetectionDslPackage.CONCRETE_RECIPIENT: return createConcreteRecipient();
      case RuleDetectionDslPackage.WHEN: return createWhen();
      case RuleDetectionDslPackage.EXPRESSION: return createExpression();
      case RuleDetectionDslPackage.OPERAND: return createOperand();
      case RuleDetectionDslPackage.PLAIN_OPERAND: return createPlainOperand();
      case RuleDetectionDslPackage.NUMERAL: return createNumeral();
      case RuleDetectionDslPackage.QUERY_OPERAND: return createQueryOperand();
      case RuleDetectionDslPackage.COMPLEX_OPERAND: return createComplexOperand();
      case RuleDetectionDslPackage.MESSAGE: return createMessage();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RuleModel createRuleModel()
  {
    RuleModelImpl ruleModel = new RuleModelImpl();
    return ruleModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RuleElement createRuleElement()
  {
    RuleElementImpl ruleElement = new RuleElementImpl();
    return ruleElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Rule createRule()
  {
    RuleImpl rule = new RuleImpl();
    return rule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Action createAction()
  {
    ActionImpl action = new ActionImpl();
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Query createQuery()
  {
    QueryImpl query = new QueryImpl();
    return query;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AddingSelect createAddingSelect()
  {
    AddingSelectImpl addingSelect = new AddingSelectImpl();
    return addingSelect;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Select createSelect()
  {
    SelectImpl select = new SelectImpl();
    return select;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SetSelect createSetSelect()
  {
    SetSelectImpl setSelect = new SetSelectImpl();
    return setSelect;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Where createWhere()
  {
    WhereImpl where = new WhereImpl();
    return where;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Recipient createRecipient()
  {
    RecipientImpl recipient = new RecipientImpl();
    return recipient;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConcreteRecipient createConcreteRecipient()
  {
    ConcreteRecipientImpl concreteRecipient = new ConcreteRecipientImpl();
    return concreteRecipient;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public When createWhen()
  {
    WhenImpl when = new WhenImpl();
    return when;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression createExpression()
  {
    ExpressionImpl expression = new ExpressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Operand createOperand()
  {
    OperandImpl operand = new OperandImpl();
    return operand;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PlainOperand createPlainOperand()
  {
    PlainOperandImpl plainOperand = new PlainOperandImpl();
    return plainOperand;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Numeral createNumeral()
  {
    NumeralImpl numeral = new NumeralImpl();
    return numeral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public QueryOperand createQueryOperand()
  {
    QueryOperandImpl queryOperand = new QueryOperandImpl();
    return queryOperand;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComplexOperand createComplexOperand()
  {
    ComplexOperandImpl complexOperand = new ComplexOperandImpl();
    return complexOperand;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Message createMessage()
  {
    MessageImpl message = new MessageImpl();
    return message;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RuleDetectionDslPackage getRuleDetectionDslPackage()
  {
    return (RuleDetectionDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static RuleDetectionDslPackage getPackage()
  {
    return RuleDetectionDslPackage.eINSTANCE;
  }

} //RuleDetectionDslFactoryImpl
